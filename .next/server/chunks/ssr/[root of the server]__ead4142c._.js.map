{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/JimohMary/Desktop/coderaccoon/ambylon-craft/src/components/ui/button/customButton.tsx"],"sourcesContent":["import { Button, ButtonProps } from \"@chakra-ui/react\";\r\nimport { ReactNode } from \"react\";\r\n\r\n// Define possible variants for buttons\r\nconst buttonVariants = {\r\n    primary: {\r\n        bg: \"#F8AF43\", \r\n        color: \"white\",\r\n        _hover: { bg: \"#F5A500\" },\r\n    },\r\n    secondary: {\r\n        bg: \"gray.500\",\r\n        color: \"white\",\r\n        _hover: { bg: \"gray.600\" },\r\n    },\r\n    outline: {\r\n        bg: \"transparent\",\r\n        color: \"#F8AF43\", \r\n        border: \"2px solid #F8AF43\",\r\n        _hover: { bg: \"#F5A500\", color: \"white\", borderColor: \"#F5A500\" },\r\n    },\r\n    tertiary:{\r\n        bg: \"#333333\",\r\n        color: \"#FFFFFF\",\r\n        border: \"2px solid #FFFFFF\",\r\n        _hover: { bg: \"#F5A500\", color: \"white\", borderColor: \"#F5A500\" },\r\n      \r\n    },\r\n    danger: {\r\n        bg: \"red.500\",\r\n        color: \"white\",\r\n        _hover: { bg: \"red.600\" },\r\n    },\r\n};\r\n\r\ninterface CustomButtonProps extends ButtonProps {\r\n    children: ReactNode;\r\n    variant?: \"primary\" | \"secondary\" | \"outline\" | \"tertiary\"| \"danger\"; \r\n}\r\n\r\nconst CustomButton = ({ children, variant = \"primary\", ...rest }: CustomButtonProps) => {\r\n    const variantStyles = buttonVariants[variant] || buttonVariants.primary;\r\n\r\n    return (\r\n        <Button\r\n            width=\"225px\"\r\n            height=\"40px\"\r\n            _hover={variantStyles._hover}\r\n            bg={variantStyles.bg}\r\n            color={variantStyles.color}\r\n            borderRadius=\"10px\"\r\n            size=\"md\"\r\n            className=\"shadow-md\"\r\n            {...rest}\r\n        >\r\n            {children}\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default CustomButton;\r\n"],"names":[],"mappings":";;;;AAAA;;;AAGA,uCAAuC;AACvC,MAAM,iBAAiB;IACnB,SAAS;QACL,IAAI;QACJ,OAAO;QACP,QAAQ;YAAE,IAAI;QAAU;IAC5B;IACA,WAAW;QACP,IAAI;QACJ,OAAO;QACP,QAAQ;YAAE,IAAI;QAAW;IAC7B;IACA,SAAS;QACL,IAAI;QACJ,OAAO;QACP,QAAQ;QACR,QAAQ;YAAE,IAAI;YAAW,OAAO;YAAS,aAAa;QAAU;IACpE;IACA,UAAS;QACL,IAAI;QACJ,OAAO;QACP,QAAQ;QACR,QAAQ;YAAE,IAAI;YAAW,OAAO;YAAS,aAAa;QAAU;IAEpE;IACA,QAAQ;QACJ,IAAI;QACJ,OAAO;QACP,QAAQ;YAAE,IAAI;QAAU;IAC5B;AACJ;AAOA,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAE,UAAU,SAAS,EAAE,GAAG,MAAyB;IAC/E,MAAM,gBAAgB,cAAc,CAAC,QAAQ,IAAI,eAAe,OAAO;IAEvE,qBACI,8OAAC,2KAAA,CAAA,SAAM;QACH,OAAM;QACN,QAAO;QACP,QAAQ,cAAc,MAAM;QAC5B,IAAI,cAAc,EAAE;QACpB,OAAO,cAAc,KAAK;QAC1B,cAAa;QACb,MAAK;QACL,WAAU;QACT,GAAG,IAAI;kBAEP;;;;;;AAGb;uCAEe","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/JimohMary/Desktop/coderaccoon/ambylon-craft/src/components/ui/input/input.tsx"],"sourcesContent":["import {\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    FormErrorMessage,\r\n    InputProps,\r\n  } from \"@chakra-ui/react\";\r\n  \r\n  interface InputFieldProps extends InputProps {\r\n    label?: string;\r\n    error?: string;\r\n    highlight?: boolean;\r\n  }\r\n  \r\n  const InputField = ({\r\n    label,\r\n    error,\r\n    highlight,\r\n    isDisabled,\r\n    ...rest\r\n  }: InputFieldProps) => {\r\n    const highlightStyles = highlight\r\n      ? {\r\n          borderColor: \"orange.400\",\r\n          boxShadow: \"0 0 0 1px orange\",\r\n        }\r\n      : {};\r\n  \r\n    return (\r\n      <FormControl isInvalid={!!error} isDisabled={isDisabled}>\r\n        {label && <FormLabel>{label}</FormLabel>}\r\n        <Input\r\n          {...rest}\r\n          {...highlightStyles}\r\n          isDisabled={isDisabled}\r\n          borderColor={error ? \"red.500\" : \"gray.300\"}\r\n          _focus={{ borderColor: \"blue.500\", boxShadow: \"sm\" }}\r\n          height=\"40px\"\r\n          width=\"300px\"\r\n        />\r\n        {error && <FormErrorMessage>{error}</FormErrorMessage>}\r\n      </FormControl>\r\n    );\r\n  };\r\n  \r\n  export default InputField;\r\n  "],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;;;AAcE,MAAM,aAAa,CAAC,EAClB,KAAK,EACL,KAAK,EACL,SAAS,EACT,UAAU,EACV,GAAG,MACa;IAChB,MAAM,kBAAkB,YACpB;QACE,aAAa;QACb,WAAW;IACb,IACA,CAAC;IAEL,qBACE,8OAAC,6LAAA,CAAA,cAAW;QAAC,WAAW,CAAC,CAAC;QAAO,YAAY;;YAC1C,uBAAS,8OAAC,2LAAA,CAAA,YAAS;0BAAE;;;;;;0BACtB,8OAAC,yKAAA,CAAA,QAAK;gBACH,GAAG,IAAI;gBACP,GAAG,eAAe;gBACnB,YAAY;gBACZ,aAAa,QAAQ,YAAY;gBACjC,QAAQ;oBAAE,aAAa;oBAAY,WAAW;gBAAK;gBACnD,QAAO;gBACP,OAAM;;;;;;YAEP,uBAAS,8OAAC,2LAAA,CAAA,mBAAgB;0BAAE;;;;;;;;;;;;AAGnC;uCAEe","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/JimohMary/Desktop/coderaccoon/ambylon-craft/src/config/path.ts"],"sourcesContent":["export const paths = {\r\n    home: {\r\n      getHref: () => '/',\r\n    },\r\n  \r\n    auth: {\r\n      // Your auth paths here\r\n    },\r\n  \r\n    app: {\r\n      root: {\r\n        getHref: () => '/app',\r\n      },\r\n      about: {\r\n        getHref: () => '/about',  // Remove '/app' to resolve correctly\r\n      },\r\n    },\r\n    \r\n    public: {\r\n      // Your public paths here\r\n    },\r\n  } as const;\r\n  "],"names":[],"mappings":";;;AAAO,MAAM,QAAQ;IACjB,MAAM;QACJ,SAAS,IAAM;IACjB;IAEA,MAAM;IAEN;IAEA,KAAK;QACH,MAAM;YACJ,SAAS,IAAM;QACjB;QACA,OAAO;YACL,SAAS,IAAM;QACjB;IACF;IAEA,QAAQ;IAER;AACF","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/JimohMary/Desktop/coderaccoon/ambylon-craft/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useRouter } from \"next/navigation\";\nimport CustomButton from \"@/components/ui/button/customButton\";\nimport InputField from \"@/components/ui/input/input\";\nimport { paths } from \"@/config/path\"; \n\nconsole.log(paths, \"gsg\");  // Logging outside of the component will avoid re-renders\n\nexport default function Home() {\n  const router = useRouter();\n\n  const goToAbout = () => {\n    router.push(paths.app.about.getHref());\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-2xl font-bold\">Home Page</h1>\n\n      <nav className=\"mt-4 space-x-4\">\n        <button\n          onClick={goToAbout}\n          className=\"text-blue-500 hover:underline\"\n        >\n          About\n        </button>\n\n        <CustomButton>Hey</CustomButton>\n\n        <InputField\n          label=\"Email\"\n          placeholder=\"Enter your email\"\n        />\n      </nav>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,QAAQ,GAAG,CAAC,qHAAA,CAAA,QAAK,EAAE,QAAS,yDAAyD;AAEtE,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,YAAY;QAChB,OAAO,IAAI,CAAC,qHAAA,CAAA,QAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO;IACrC;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAqB;;;;;;0BAEnC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,SAAS;wBACT,WAAU;kCACX;;;;;;kCAID,8OAAC,kJAAA,CAAA,UAAY;kCAAC;;;;;;kCAEd,8OAAC,0IAAA,CAAA,UAAU;wBACT,OAAM;wBACN,aAAY;;;;;;;;;;;;;;;;;;AAKtB","debugId":null}}]
}