module.exports = {

"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/provider.js (client reference/proxy) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ChakraProvider": (()=>ChakraProvider),
    "useChakraContext": (()=>useChakraContext)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-turbopack-server-edge.js [app-rsc] (ecmascript)");
;
const ChakraProvider = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["registerClientReference"])(function() {
    throw new Error("Attempted to call ChakraProvider() from the server but ChakraProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.");
}, "[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/provider.js <module evaluation>", "ChakraProvider");
const useChakraContext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["registerClientReference"])(function() {
    throw new Error("Attempted to call useChakraContext() from the server but useChakraContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.");
}, "[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/provider.js <module evaluation>", "useChakraContext");
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/provider.js (client reference/proxy)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ChakraProvider": (()=>ChakraProvider),
    "useChakraContext": (()=>useChakraContext)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-turbopack-server-edge.js [app-rsc] (ecmascript)");
;
const ChakraProvider = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["registerClientReference"])(function() {
    throw new Error("Attempted to call ChakraProvider() from the server but ChakraProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.");
}, "[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/provider.js", "ChakraProvider");
const useChakraContext = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$rsc$2f$react$2d$server$2d$dom$2d$turbopack$2d$server$2d$edge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["registerClientReference"])(function() {
    throw new Error("Attempted to call useChakraContext() from the server but useChakraContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.");
}, "[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/provider.js", "useChakraContext");
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/provider.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$provider$2e$js__$28$client__reference$2f$proxy$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/provider.js (client reference/proxy) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$provider$2e$js__$28$client__reference$2f$proxy$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/provider.js (client reference/proxy)");
;
__turbopack_context__.n(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$provider$2e$js__$28$client__reference$2f$proxy$29$__);
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/color-mix.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "colorMix": (()=>colorMix),
    "createColorMixTransform": (()=>createColorMixTransform)
});
"use strict";
const colorMix = (value, token)=>{
    if (!value || typeof value !== "string") {
        return {
            invalid: true,
            value
        };
    }
    const [rawColor, rawOpacity] = value.split("/");
    if (!rawColor || !rawOpacity || rawColor === "currentBg") {
        return {
            invalid: true,
            value: rawColor
        };
    }
    const colorToken = token(`colors.${rawColor}`);
    const opacityToken = token.raw(`opacity.${rawOpacity}`)?.value;
    if (!opacityToken && isNaN(Number(rawOpacity))) {
        return {
            invalid: true,
            value: rawColor
        };
    }
    const percent = opacityToken ? Number(opacityToken) * 100 + "%" : `${rawOpacity}%`;
    const color = colorToken ?? rawColor;
    return {
        invalid: false,
        color,
        value: `color-mix(in srgb, ${color} ${percent}, transparent)`
    };
};
const createColorMixTransform = (prop)=>(value, args)=>{
        const mix = args.utils.colorMix(value);
        if (mix.invalid) return {
            [prop]: value
        };
        const cssVar = "--mix-" + prop;
        return {
            [cssVar]: mix.value,
            [prop]: `var(${cssVar}, ${mix.color})`
        };
    };
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/utils/clone.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "clone": (()=>clone)
});
"use strict";
function clone(obj) {
    if (obj === null || typeof obj !== "object") return obj;
    if (Array.isArray(obj)) return obj.map((prop)=>clone(prop));
    const _clone = Object.create(Object.getPrototypeOf(obj));
    for (const key of Object.keys(obj)){
        _clone[key] = clone(obj[key]);
    }
    return _clone;
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "isCssVar": (()=>isCssVar),
    "isFunction": (()=>isFunction),
    "isObject": (()=>isObject),
    "isString": (()=>isString)
});
"use strict";
const isObject = (v)=>v != null && typeof v === "object" && !Array.isArray(v);
const isCssVar = (v)=>/^var\(--.+\)$/.test(v);
const isString = (v)=>typeof v === "string";
const isFunction = (v)=>typeof v === "function";
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/utils/merge.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "mergeWith": (()=>mergeWith)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-rsc] (ecmascript)");
"use strict";
;
function merge(target, source) {
    if (source == null) return target;
    for (const key of Object.keys(source)){
        if (source[key] === void 0 || key === "__proto__") continue;
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isObject"])(target[key]) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isObject"])(source[key])) {
            Object.assign(target, {
                [key]: source[key]
            });
        } else if (target[key] && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isObject"])(source[key])) {
            merge(target[key], source[key]);
        } else if (Array.isArray(source[key]) && Array.isArray(target[key])) {
            let i = 0;
            for(; i < source[key].length; i++){
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isObject"])(target[key][i]) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isObject"])(source[key][i])) {
                    merge(target[key][i], source[key][i]);
                } else {
                    target[key][i] = source[key][i];
                }
            }
        } else {
            Object.assign(target, {
                [key]: source[key]
            });
        }
    }
    return target;
}
function mergeWith(target, ...sources) {
    for (const source of sources){
        merge(target, source);
    }
    return target;
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "defineAnimationStyles": (()=>defineAnimationStyles),
    "defineConditions": (()=>defineConditions),
    "defineConfig": (()=>defineConfig),
    "defineGlobalStyles": (()=>defineGlobalStyles),
    "defineKeyframes": (()=>defineKeyframes),
    "defineLayerStyles": (()=>defineLayerStyles),
    "defineRecipe": (()=>defineRecipe),
    "defineSemanticTokens": (()=>defineSemanticTokens),
    "defineSlotRecipe": (()=>defineSlotRecipe),
    "defineStyle": (()=>defineStyle),
    "defineTextStyles": (()=>defineTextStyles),
    "defineTokens": (()=>defineTokens),
    "mergeConfigs": (()=>mergeConfigs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$clone$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/clone.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/merge.js [app-rsc] (ecmascript)");
"use strict";
;
;
const defineConditions = (v)=>v;
const defineRecipe = (v)=>v;
const defineSlotRecipe = (v)=>v;
const defineKeyframes = (v)=>v;
const defineGlobalStyles = (v)=>v;
const defineStyle = (v)=>v;
const defineTextStyles = (v)=>v;
const defineAnimationStyles = (v)=>v;
const defineLayerStyles = (v)=>v;
function createProxy() {
    const identity = (v)=>v;
    return new Proxy(identity, {
        get () {
            return identity;
        }
    });
}
const defineTokens = /* @__PURE__ */ createProxy();
const defineSemanticTokens = /* @__PURE__ */ createProxy();
const defineConfig = (v)=>v;
const mergeConfigs = (...configs)=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["mergeWith"])({}, ...configs.map(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$clone$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["clone"]));
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/css-var.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "cssVar": (()=>cssVar)
});
"use strict";
const escRegex = /[^a-zA-Z0-9_\u0081-\uffff-]/g;
function esc(string) {
    return `${string}`.replace(escRegex, (s)=>`\\${s}`);
}
const dashCaseRegex = /[A-Z]/g;
function dashCase(string) {
    return string.replace(dashCaseRegex, (match)=>`-${match.toLowerCase()}`);
}
function cssVar(name, options = {}) {
    const { fallback = "", prefix = "" } = options;
    const variable = dashCase([
        "-",
        prefix,
        esc(name)
    ].filter(Boolean).join("-"));
    return {
        var: variable,
        ref: `var(${variable}${fallback ? `, ${fallback}` : ""})`
    };
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/preset-base.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "defaultBaseConfig": (()=>defaultBaseConfig),
    "defaultConditions": (()=>defaultConditions)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/color-mix.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$css$2d$var$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/css-var.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
const isCssVar = (v)=>/^var\(--.+\)$/.test(v);
const wrap = (str, v)=>v != null ? `${str}(${v})` : v;
const deg = (v)=>{
    if (isCssVar(v) || v == null) return v;
    const unitless = typeof v === "string" && !v.endsWith("deg");
    return typeof v === "number" || unitless ? `${v}deg` : v;
};
const createFocusRing = (selector)=>{
    return {
        values: [
            "outside",
            "inside",
            "mixed",
            "none"
        ],
        transform (value, { token }) {
            const focusRingColor = token("colors.colorPalette.focusRing");
            const styles = {
                inside: {
                    "--focus-ring-color": focusRingColor,
                    [selector]: {
                        outlineOffset: "0px",
                        outlineWidth: "var(--focus-ring-width, 1px)",
                        outlineColor: "var(--focus-ring-color)",
                        outlineStyle: "var(--focus-ring-style, solid)",
                        borderColor: "var(--focus-ring-color)"
                    }
                },
                outside: {
                    "--focus-ring-color": focusRingColor,
                    [selector]: {
                        outlineWidth: "var(--focus-ring-width, 2px)",
                        outlineOffset: "var(--focus-ring-offset, 2px)",
                        outlineStyle: "var(--focus-ring-style, solid)",
                        outlineColor: "var(--focus-ring-color)"
                    }
                },
                mixed: {
                    "--focus-ring-color": focusRingColor,
                    [selector]: {
                        outlineWidth: "var(--focus-ring-width, 3px)",
                        outlineStyle: "var(--focus-ring-style, solid)",
                        outlineColor: "color-mix(in srgb, var(--focus-ring-color), transparent 60%)",
                        borderColor: "var(--focus-ring-color)"
                    }
                },
                none: {
                    "--focus-ring-color": focusRingColor,
                    [selector]: {
                        outline: "none"
                    }
                }
            };
            return styles[value] ?? {};
        }
    };
};
const divideColor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("borderColor");
const createTransition = (value)=>{
    return {
        transition: value,
        transitionTimingFunction: "cubic-bezier(0.4, 0, 0.2, 1)",
        transitionDuration: "150ms"
    };
};
const defaultConditions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineConditions"])({
    hover: [
        "@media (hover: hover)",
        "&:is(:hover, [data-hover]):not(:disabled, [data-disabled])"
    ],
    active: "&:is(:active, [data-active]):not(:disabled, [data-disabled], [data-state=open])",
    focus: "&:is(:focus, [data-focus])",
    focusWithin: "&:is(:focus-within, [data-focus-within])",
    focusVisible: "&:is(:focus-visible, [data-focus-visible])",
    disabled: "&:is(:disabled, [disabled], [data-disabled], [aria-disabled=true])",
    visited: "&:visited",
    target: "&:target",
    readOnly: "&:is([data-readonly], [aria-readonly=true], [readonly])",
    readWrite: "&:read-write",
    empty: "&:is(:empty, [data-empty])",
    checked: "&:is(:checked, [data-checked], [aria-checked=true], [data-state=checked])",
    enabled: "&:enabled",
    expanded: "&:is([aria-expanded=true], [data-expanded], [data-state=expanded])",
    highlighted: "&[data-highlighted]",
    complete: "&[data-complete]",
    incomplete: "&[data-incomplete]",
    dragging: "&[data-dragging]",
    before: "&::before",
    after: "&::after",
    firstLetter: "&::first-letter",
    firstLine: "&::first-line",
    marker: "&::marker",
    selection: "&::selection",
    file: "&::file-selector-button",
    backdrop: "&::backdrop",
    first: "&:first-of-type",
    last: "&:last-of-type",
    notFirst: "&:not(:first-of-type)",
    notLast: "&:not(:last-of-type)",
    only: "&:only-child",
    even: "&:nth-of-type(even)",
    odd: "&:nth-of-type(odd)",
    peerFocus: ".peer:is(:focus, [data-focus]) ~ &",
    peerHover: ".peer:is(:hover, [data-hover]):not(:disabled, [data-disabled]) ~ &",
    peerActive: ".peer:is(:active, [data-active]):not(:disabled, [data-disabled]) ~ &",
    peerFocusWithin: ".peer:focus-within ~ &",
    peerFocusVisible: ".peer:is(:focus-visible, [data-focus-visible]) ~ &",
    peerDisabled: ".peer:is(:disabled, [disabled], [data-disabled]) ~ &",
    peerChecked: ".peer:is(:checked, [data-checked], [aria-checked=true], [data-state=checked]) ~ &",
    peerInvalid: ".peer:is(:invalid, [data-invalid], [aria-invalid=true]) ~ &",
    peerExpanded: ".peer:is([aria-expanded=true], [data-expanded], [data-state=expanded]) ~ &",
    peerPlaceholderShown: ".peer:placeholder-shown ~ &",
    groupFocus: ".group:is(:focus, [data-focus]) &",
    groupHover: ".group:is(:hover, [data-hover]):not(:disabled, [data-disabled]) &",
    groupActive: ".group:is(:active, [data-active]):not(:disabled, [data-disabled]) &",
    groupFocusWithin: ".group:focus-within &",
    groupFocusVisible: ".group:is(:focus-visible, [data-focus-visible]) &",
    groupDisabled: ".group:is(:disabled, [disabled], [data-disabled]) &",
    groupChecked: ".group:is(:checked, [data-checked], [aria-checked=true], [data-state=checked]) &",
    groupExpanded: ".group:is([aria-expanded=true], [data-expanded], [data-state=expanded]) &",
    groupInvalid: ".group:invalid &",
    indeterminate: "&:is(:indeterminate, [data-indeterminate], [aria-checked=mixed], [data-state=indeterminate])",
    required: "&:is([data-required], [aria-required=true])",
    valid: "&:is([data-valid], [data-state=valid])",
    invalid: "&:is([data-invalid], [aria-invalid=true], [data-state=invalid])",
    autofill: "&:autofill",
    inRange: "&:is(:in-range, [data-in-range])",
    outOfRange: "&:is(:out-of-range, [data-outside-range])",
    placeholder: "&::placeholder, &[data-placeholder]",
    placeholderShown: "&:is(:placeholder-shown, [data-placeholder-shown])",
    pressed: "&:is([aria-pressed=true], [data-pressed])",
    selected: "&:is([aria-selected=true], [data-selected])",
    grabbed: "&:is([aria-grabbed=true], [data-grabbed])",
    underValue: "&[data-state=under-value]",
    overValue: "&[data-state=over-value]",
    atValue: "&[data-state=at-value]",
    default: "&:default",
    optional: "&:optional",
    open: "&:is([open], [data-open], [data-state=open])",
    closed: "&:is([closed], [data-closed], [data-state=closed])",
    fullscreen: "&is(:fullscreen, [data-fullscreen])",
    loading: "&:is([data-loading], [aria-busy=true])",
    hidden: "&:is([hidden], [data-hidden])",
    current: "&[data-current]",
    currentPage: "&[aria-current=page]",
    currentStep: "&[aria-current=step]",
    today: "&[data-today]",
    unavailable: "&[data-unavailable]",
    rangeStart: "&[data-range-start]",
    rangeEnd: "&[data-range-end]",
    now: "&[data-now]",
    topmost: "&[data-topmost]",
    motionReduce: "@media (prefers-reduced-motion: reduce)",
    motionSafe: "@media (prefers-reduced-motion: no-preference)",
    print: "@media print",
    landscape: "@media (orientation: landscape)",
    portrait: "@media (orientation: portrait)",
    dark: ".dark &, .dark .chakra-theme:not(.light) &",
    light: ":root &, .light &",
    osDark: "@media (prefers-color-scheme: dark)",
    osLight: "@media (prefers-color-scheme: light)",
    highContrast: "@media (forced-colors: active)",
    lessContrast: "@media (prefers-contrast: less)",
    moreContrast: "@media (prefers-contrast: more)",
    ltr: "[dir=ltr] &",
    rtl: "[dir=rtl] &",
    scrollbar: "&::-webkit-scrollbar",
    scrollbarThumb: "&::-webkit-scrollbar-thumb",
    scrollbarTrack: "&::-webkit-scrollbar-track",
    horizontal: "&[data-orientation=horizontal]",
    vertical: "&[data-orientation=vertical]",
    icon: "& :where(svg)",
    starting: "@starting-style"
});
const currentBgVar = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$css$2d$var$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["cssVar"])("bg-currentcolor");
const isCurrentBgVar = (value)=>value === currentBgVar.ref || value === "currentBg";
const colorValues = (theme)=>({
        ...theme("colors"),
        currentBg: currentBgVar
    });
const defaultBaseConfig = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineConfig"])({
    conditions: defaultConditions,
    utilities: {
        // background
        background: {
            values: colorValues,
            shorthand: [
                "bg"
            ],
            transform (value, args) {
                if (isCurrentBgVar(args.raw)) return {
                    background: currentBgVar.ref
                };
                const styleObj = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("background")(value, args);
                return {
                    ...styleObj,
                    [currentBgVar.var]: styleObj?.background
                };
            }
        },
        backgroundColor: {
            values: colorValues,
            shorthand: [
                "bgColor"
            ],
            transform (value, args) {
                if (isCurrentBgVar(args.raw)) return {
                    backgroundColor: currentBgVar.ref
                };
                const styleObj = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("backgroundColor")(value, args);
                return {
                    ...styleObj,
                    [currentBgVar.var]: styleObj?.backgroundColor
                };
            }
        },
        backgroundSize: {
            shorthand: [
                "bgSize"
            ]
        },
        backgroundPosition: {
            shorthand: [
                "bgPos"
            ]
        },
        backgroundRepeat: {
            shorthand: [
                "bgRepeat"
            ]
        },
        backgroundAttachment: {
            shorthand: [
                "bgAttachment"
            ]
        },
        backgroundClip: {
            shorthand: [
                "bgClip"
            ],
            values: [
                "text"
            ],
            transform (value) {
                return value === "text" ? {
                    color: "transparent",
                    backgroundClip: "text"
                } : {
                    backgroundClip: value
                };
            }
        },
        backgroundGradient: {
            shorthand: [
                "bgGradient"
            ],
            values (theme) {
                return {
                    ...theme("gradients"),
                    "to-t": "linear-gradient(to top, var(--gradient))",
                    "to-tr": "linear-gradient(to top right, var(--gradient))",
                    "to-r": "linear-gradient(to right, var(--gradient))",
                    "to-br": "linear-gradient(to bottom right, var(--gradient))",
                    "to-b": "linear-gradient(to bottom, var(--gradient))",
                    "to-bl": "linear-gradient(to bottom left, var(--gradient))",
                    "to-l": "linear-gradient(to left, var(--gradient))",
                    "to-tl": "linear-gradient(to top left, var(--gradient))"
                };
            },
            transform (value) {
                return {
                    "--gradient-stops": "var(--gradient-from), var(--gradient-to)",
                    "--gradient": "var(--gradient-via-stops, var(--gradient-stops))",
                    backgroundImage: value
                };
            }
        },
        gradientFrom: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("--gradient-from")
        },
        gradientTo: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("--gradient-to")
        },
        gradientVia: {
            values: colorValues,
            transform (value, args) {
                const styles = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("--gradient-via")(value, args);
                return {
                    ...styles,
                    "--gradient-via-stops": "var(--gradient-from), var(--gradient-via), var(--gradient-to)"
                };
            }
        },
        backgroundImage: {
            values (theme) {
                return {
                    ...theme("gradients"),
                    ...theme("assets")
                };
            },
            shorthand: [
                "bgImg",
                "bgImage"
            ]
        },
        // border
        border: {
            values: "borders"
        },
        borderTop: {
            values: "borders"
        },
        borderLeft: {
            values: "borders"
        },
        borderBlockStart: {
            values: "borders"
        },
        borderRight: {
            values: "borders"
        },
        borderInlineEnd: {
            values: "borders"
        },
        borderBottom: {
            values: "borders"
        },
        borderBlockEnd: {
            values: "borders"
        },
        borderInlineStart: {
            values: "borders",
            shorthand: [
                "borderStart"
            ]
        },
        borderInline: {
            values: "borders",
            shorthand: [
                "borderX"
            ]
        },
        borderBlock: {
            values: "borders",
            shorthand: [
                "borderY"
            ]
        },
        // border colors
        borderColor: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("borderColor")
        },
        borderTopColor: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("borderTopColor")
        },
        borderBlockStartColor: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("borderBlockStartColor")
        },
        borderBottomColor: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("borderBottomColor")
        },
        borderBlockEndColor: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("borderBlockEndColor")
        },
        borderLeftColor: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("borderLeftColor")
        },
        borderInlineStartColor: {
            values: colorValues,
            shorthand: [
                "borderStartColor"
            ],
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("borderInlineStartColor")
        },
        borderRightColor: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("borderRightColor")
        },
        borderInlineEndColor: {
            values: colorValues,
            shorthand: [
                "borderEndColor"
            ],
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("borderInlineEndColor")
        },
        // border styles
        borderStyle: {
            values: "borderStyles"
        },
        borderTopStyle: {
            values: "borderStyles"
        },
        borderBlockStartStyle: {
            values: "borderStyles"
        },
        borderBottomStyle: {
            values: "borderStyles"
        },
        borderBlockEndStyle: {
            values: "borderStyles"
        },
        borderInlineStartStyle: {
            values: "borderStyles",
            shorthand: [
                "borderStartStyle"
            ]
        },
        borderInlineEndStyle: {
            values: "borderStyles",
            shorthand: [
                "borderEndStyle"
            ]
        },
        borderLeftStyle: {
            values: "borderStyles"
        },
        borderRightStyle: {
            values: "borderStyles"
        },
        // border radius
        borderRadius: {
            values: "radii",
            shorthand: [
                "rounded"
            ]
        },
        borderTopLeftRadius: {
            values: "radii",
            shorthand: [
                "roundedTopLeft"
            ]
        },
        borderStartStartRadius: {
            values: "radii",
            shorthand: [
                "roundedStartStart",
                "borderTopStartRadius"
            ]
        },
        borderEndStartRadius: {
            values: "radii",
            shorthand: [
                "roundedEndStart",
                "borderBottomStartRadius"
            ]
        },
        borderTopRightRadius: {
            values: "radii",
            shorthand: [
                "roundedTopRight"
            ]
        },
        borderStartEndRadius: {
            values: "radii",
            shorthand: [
                "roundedStartEnd",
                "borderTopEndRadius"
            ]
        },
        borderEndEndRadius: {
            values: "radii",
            shorthand: [
                "roundedEndEnd",
                "borderBottomEndRadius"
            ]
        },
        borderBottomLeftRadius: {
            values: "radii",
            shorthand: [
                "roundedBottomLeft"
            ]
        },
        borderBottomRightRadius: {
            values: "radii",
            shorthand: [
                "roundedBottomRight"
            ]
        },
        borderInlineStartRadius: {
            values: "radii",
            property: "borderRadius",
            shorthand: [
                "roundedStart",
                "borderStartRadius"
            ],
            transform: (value)=>({
                    borderStartStartRadius: value,
                    borderEndStartRadius: value
                })
        },
        borderInlineEndRadius: {
            values: "radii",
            property: "borderRadius",
            shorthand: [
                "roundedEnd",
                "borderEndRadius"
            ],
            transform: (value)=>({
                    borderStartEndRadius: value,
                    borderEndEndRadius: value
                })
        },
        borderTopRadius: {
            values: "radii",
            property: "borderRadius",
            shorthand: [
                "roundedTop"
            ],
            transform: (value)=>({
                    borderTopLeftRadius: value,
                    borderTopRightRadius: value
                })
        },
        borderBottomRadius: {
            values: "radii",
            property: "borderRadius",
            shorthand: [
                "roundedBottom"
            ],
            transform: (value)=>({
                    borderBottomLeftRadius: value,
                    borderBottomRightRadius: value
                })
        },
        borderLeftRadius: {
            values: "radii",
            property: "borderRadius",
            shorthand: [
                "roundedLeft"
            ],
            transform: (value)=>({
                    borderTopLeftRadius: value,
                    borderBottomLeftRadius: value
                })
        },
        borderRightRadius: {
            values: "radii",
            property: "borderRadius",
            shorthand: [
                "roundedRight"
            ],
            transform: (value)=>({
                    borderTopRightRadius: value,
                    borderBottomRightRadius: value
                })
        },
        borderWidth: {
            values: "borderWidths"
        },
        borderBlockStartWidth: {
            values: "borderWidths"
        },
        borderTopWidth: {
            values: "borderWidths"
        },
        borderBottomWidth: {
            values: "borderWidths"
        },
        borderBlockEndWidth: {
            values: "borderWidths"
        },
        borderRightWidth: {
            values: "borderWidths"
        },
        borderInlineWidth: {
            values: "borderWidths",
            shorthand: [
                "borderXWidth"
            ]
        },
        borderInlineStartWidth: {
            values: "borderWidths",
            shorthand: [
                "borderStartWidth"
            ]
        },
        borderInlineEndWidth: {
            values: "borderWidths",
            shorthand: [
                "borderEndWidth"
            ]
        },
        borderLeftWidth: {
            values: "borderWidths"
        },
        borderBlockWidth: {
            values: "borderWidths",
            shorthand: [
                "borderYWidth"
            ]
        },
        // colors
        color: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("color")
        },
        fill: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("fill")
        },
        stroke: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("stroke")
        },
        accentColor: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("accentColor")
        },
        // divide
        divideX: {
            values: {
                type: "string"
            },
            transform (value) {
                return {
                    "& > :not(style, [hidden]) ~ :not(style, [hidden])": {
                        borderInlineStartWidth: value,
                        borderInlineEndWidth: "0px"
                    }
                };
            }
        },
        divideY: {
            values: {
                type: "string"
            },
            transform (value) {
                return {
                    "& > :not(style, [hidden]) ~ :not(style, [hidden])": {
                        borderTopWidth: value,
                        borderBottomWidth: "0px"
                    }
                };
            }
        },
        divideColor: {
            values: colorValues,
            transform (value, args) {
                return {
                    "& > :not(style, [hidden]) ~ :not(style, [hidden])": divideColor(value, args)
                };
            }
        },
        divideStyle: {
            property: "borderStyle",
            transform (value) {
                return {
                    "& > :not(style, [hidden]) ~ :not(style, [hidden])": {
                        borderStyle: value
                    }
                };
            }
        },
        // effects
        boxShadow: {
            values: "shadows",
            shorthand: [
                "shadow"
            ]
        },
        boxShadowColor: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("--shadow-color"),
            shorthand: [
                "shadowColor"
            ]
        },
        mixBlendMode: {
            shorthand: [
                "blendMode"
            ]
        },
        backgroundBlendMode: {
            shorthand: [
                "bgBlendMode"
            ]
        },
        opacity: {
            values: "opacity"
        },
        // filters
        filter: {
            transform (v) {
                if (v !== "auto") {
                    return {
                        filter: v
                    };
                }
                return {
                    filter: `var(--blur) var(--brightness) var(--contrast) var(--grayscale) var(--hue-rotate) var(--invert) var(--saturate) var(--sepia) var(--drop-shadow)`
                };
            }
        },
        blur: {
            values: "blurs",
            transform: (v)=>({
                    "--blur": wrap("blur", v)
                })
        },
        brightness: {
            transform: (v)=>({
                    "--brightness": wrap("brightness", v)
                })
        },
        contrast: {
            transform: (v)=>({
                    "--contrast": wrap("contrast", v)
                })
        },
        grayscale: {
            transform: (v)=>({
                    "--grayscale": wrap("grayscale", v)
                })
        },
        hueRotate: {
            transform: (v)=>({
                    "--hue-rotate": wrap("hue-rotate", deg(v))
                })
        },
        invert: {
            transform: (v)=>({
                    "--invert": wrap("invert", v)
                })
        },
        saturate: {
            transform: (v)=>({
                    "--saturate": wrap("saturate", v)
                })
        },
        sepia: {
            transform: (v)=>({
                    "--sepia": wrap("sepia", v)
                })
        },
        dropShadow: {
            transform: (v)=>({
                    "--drop-shadow": wrap("drop-shadow", v)
                })
        },
        // backdrop filters
        backdropFilter: {
            transform (v) {
                if (v !== "auto") {
                    return {
                        backdropFilter: v
                    };
                }
                return {
                    backdropFilter: `var(--backdrop-blur) var(--backdrop-brightness) var(--backdrop-contrast) var(--backdrop-grayscale) var(--backdrop-hue-rotate) var(--backdrop-invert) var(--backdrop-opacity) var(--backdrop-saturate) var(--backdrop-sepia)`
                };
            }
        },
        backdropBlur: {
            values: "blurs",
            transform: (v)=>({
                    "--backdrop-blur": wrap("blur", v)
                })
        },
        backdropBrightness: {
            transform: (v)=>({
                    "--backdrop-brightness": wrap("brightness", v)
                })
        },
        backdropContrast: {
            transform: (v)=>({
                    "--backdrop-contrast": wrap("contrast", v)
                })
        },
        backdropGrayscale: {
            transform: (v)=>({
                    "--backdrop-grayscale": wrap("grayscale", v)
                })
        },
        backdropHueRotate: {
            transform: (v)=>({
                    "--backdrop-hue-rotate": wrap("hue-rotate", deg(v))
                })
        },
        backdropInvert: {
            transform: (v)=>({
                    "--backdrop-invert": wrap("invert", v)
                })
        },
        backdropOpacity: {
            transform: (v)=>({
                    "--backdrop-opacity": wrap("opacity", v)
                })
        },
        backdropSaturate: {
            transform: (v)=>({
                    "--backdrop-saturate": wrap("saturate", v)
                })
        },
        backdropSepia: {
            transform: (v)=>({
                    "--backdrop-sepia": wrap("sepia", v)
                })
        },
        // flexbox
        flexBasis: {
            values: "sizes"
        },
        gap: {
            values: "spacing"
        },
        rowGap: {
            values: "spacing",
            shorthand: [
                "gapY"
            ]
        },
        columnGap: {
            values: "spacing",
            shorthand: [
                "gapX"
            ]
        },
        flexDirection: {
            shorthand: [
                "flexDir"
            ]
        },
        // grid
        gridGap: {
            values: "spacing"
        },
        gridColumnGap: {
            values: "spacing"
        },
        gridRowGap: {
            values: "spacing"
        },
        // interactivity
        outlineColor: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("outlineColor")
        },
        focusRing: createFocusRing("&:is(:focus, [data-focus])"),
        focusVisibleRing: createFocusRing("&:is(:focus-visible, [data-focus-visible])"),
        focusRingColor: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("--focus-ring-color")
        },
        focusRingOffset: {
            values: "spacing",
            transform: (v)=>({
                    "--focus-ring-offset": v
                })
        },
        focusRingWidth: {
            values: "borderWidths",
            property: "outlineWidth",
            transform: (v)=>({
                    "--focus-ring-width": v
                })
        },
        focusRingStyle: {
            values: "borderStyles",
            property: "outlineStyle",
            transform: (v)=>({
                    "--focus-ring-style": v
                })
        },
        // layout
        aspectRatio: {
            values: "aspectRatios"
        },
        width: {
            values: "sizes",
            shorthand: [
                "w"
            ]
        },
        inlineSize: {
            values: "sizes"
        },
        height: {
            values: "sizes",
            shorthand: [
                "h"
            ]
        },
        blockSize: {
            values: "sizes"
        },
        boxSize: {
            values: "sizes",
            property: "width",
            transform: (v)=>({
                    width: v,
                    height: v
                })
        },
        minWidth: {
            values: "sizes",
            shorthand: [
                "minW"
            ]
        },
        minInlineSize: {
            values: "sizes"
        },
        minHeight: {
            values: "sizes",
            shorthand: [
                "minH"
            ]
        },
        minBlockSize: {
            values: "sizes"
        },
        maxWidth: {
            values: "sizes",
            shorthand: [
                "maxW"
            ]
        },
        maxInlineSize: {
            values: "sizes"
        },
        maxHeight: {
            values: "sizes",
            shorthand: [
                "maxH"
            ]
        },
        maxBlockSize: {
            values: "sizes"
        },
        hideFrom: {
            values: "breakpoints",
            //@ts-ignore
            transform: (value, { raw, token })=>{
                const bp = token.raw(`breakpoints.${raw}`);
                const media = bp ? `@breakpoint ${raw}` : `@media screen and (min-width: ${value})`;
                return {
                    [media]: {
                        display: "none"
                    }
                };
            }
        },
        hideBelow: {
            values: "breakpoints",
            //@ts-ignore
            transform (value, { raw, token }) {
                const bp = token.raw(`breakpoints.${raw}`);
                const media = bp ? `@breakpoint ${raw}Down` : `@media screen and (max-width: ${value})`;
                return {
                    [media]: {
                        display: "none"
                    }
                };
            }
        },
        // scroll
        overscrollBehavior: {
            shorthand: [
                "overscroll"
            ]
        },
        overscrollBehaviorX: {
            shorthand: [
                "overscrollX"
            ]
        },
        overscrollBehaviorY: {
            shorthand: [
                "overscrollY"
            ]
        },
        scrollbar: {
            values: [
                "visible",
                "hidden"
            ],
            transform (v) {
                switch(v){
                    case "visible":
                        return {
                            msOverflowStyle: "auto",
                            scrollbarWidth: "auto",
                            "&::-webkit-scrollbar": {
                                display: "block"
                            }
                        };
                    case "hidden":
                        return {
                            msOverflowStyle: "none",
                            scrollbarWidth: "none",
                            "&::-webkit-scrollbar": {
                                display: "none"
                            }
                        };
                    default:
                        return {};
                }
            }
        },
        scrollbarColor: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("scrollbarColor")
        },
        scrollbarGutter: {
            values: "spacing"
        },
        scrollbarWidth: {
            values: "sizes"
        },
        // scroll margin
        scrollMargin: {
            values: "spacing"
        },
        scrollMarginTop: {
            values: "spacing"
        },
        scrollMarginBottom: {
            values: "spacing"
        },
        scrollMarginLeft: {
            values: "spacing"
        },
        scrollMarginRight: {
            values: "spacing"
        },
        scrollMarginX: {
            values: "spacing",
            transform: (v)=>({
                    scrollMarginLeft: v,
                    scrollMarginRight: v
                })
        },
        scrollMarginY: {
            values: "spacing",
            transform: (v)=>({
                    scrollMarginTop: v,
                    scrollMarginBottom: v
                })
        },
        // scroll padding
        scrollPadding: {
            values: "spacing"
        },
        scrollPaddingTop: {
            values: "spacing"
        },
        scrollPaddingBottom: {
            values: "spacing"
        },
        scrollPaddingLeft: {
            values: "spacing"
        },
        scrollPaddingRight: {
            values: "spacing"
        },
        scrollPaddingInline: {
            values: "spacing",
            shorthand: [
                "scrollPaddingX"
            ]
        },
        scrollPaddingBlock: {
            values: "spacing",
            shorthand: [
                "scrollPaddingY"
            ]
        },
        // scroll snap
        scrollSnapType: {
            values: {
                none: "none",
                x: "x var(--scroll-snap-strictness)",
                y: "y var(--scroll-snap-strictness)",
                both: "both var(--scroll-snap-strictness)"
            }
        },
        scrollSnapStrictness: {
            values: [
                "mandatory",
                "proximity"
            ],
            transform: (v)=>({
                    "--scroll-snap-strictness": v
                })
        },
        scrollSnapMargin: {
            values: "spacing"
        },
        scrollSnapMarginTop: {
            values: "spacing"
        },
        scrollSnapMarginBottom: {
            values: "spacing"
        },
        scrollSnapMarginLeft: {
            values: "spacing"
        },
        scrollSnapMarginRight: {
            values: "spacing"
        },
        // list
        listStylePosition: {
            shorthand: [
                "listStylePos"
            ]
        },
        listStyleImage: {
            values: "assets",
            shorthand: [
                "listStyleImg"
            ]
        },
        // position
        position: {
            shorthand: [
                "pos"
            ]
        },
        zIndex: {
            values: "zIndex"
        },
        inset: {
            values: "spacing"
        },
        insetInline: {
            values: "spacing",
            shorthand: [
                "insetX"
            ]
        },
        insetBlock: {
            values: "spacing",
            shorthand: [
                "insetY"
            ]
        },
        top: {
            values: "spacing"
        },
        insetBlockStart: {
            values: "spacing"
        },
        bottom: {
            values: "spacing"
        },
        insetBlockEnd: {
            values: "spacing"
        },
        left: {
            values: "spacing"
        },
        right: {
            values: "spacing"
        },
        insetInlineStart: {
            values: "spacing",
            shorthand: [
                "insetStart"
            ]
        },
        insetInlineEnd: {
            values: "spacing",
            shorthand: [
                "insetEnd"
            ]
        },
        // shadow / ring
        ring: {
            transform (value) {
                return {
                    "--ring-offset-shadow": `var(--ring-inset) 0 0 0 var(--ring-offset-width) var(--ring-offset-color)`,
                    "--ring-shadow": `var(--ring-inset) 0 0 0 calc(var(--ring-width) + var(--ring-offset-width)) var(--ring-color)`,
                    "--ring-width": value,
                    boxShadow: "var(--ring-offset-shadow), var(--ring-shadow), var(--shadow, 0 0 #0000)"
                };
            }
        },
        ringColor: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("--ring-color")
        },
        ringOffset: {
            transform: (value)=>({
                    "--ring-offset-width": value
                })
        },
        ringOffsetColor: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("--ring-offset-color")
        },
        ringInset: {
            transform: (v)=>({
                    "--ring-inset": v
                })
        },
        // margin
        margin: {
            values: "spacing",
            shorthand: [
                "m"
            ]
        },
        marginTop: {
            values: "spacing",
            shorthand: [
                "mt"
            ]
        },
        marginBlockStart: {
            values: "spacing"
        },
        marginRight: {
            values: "spacing",
            shorthand: [
                "mr"
            ]
        },
        marginBottom: {
            values: "spacing",
            shorthand: [
                "mb"
            ]
        },
        marginBlockEnd: {
            values: "spacing"
        },
        marginLeft: {
            values: "spacing",
            shorthand: [
                "ml"
            ]
        },
        marginInlineStart: {
            values: "spacing",
            shorthand: [
                "ms",
                "marginStart"
            ]
        },
        marginInlineEnd: {
            values: "spacing",
            shorthand: [
                "me",
                "marginEnd"
            ]
        },
        marginInline: {
            values: "spacing",
            shorthand: [
                "mx",
                "marginX"
            ]
        },
        marginBlock: {
            values: "spacing",
            shorthand: [
                "my",
                "marginY"
            ]
        },
        // padding
        padding: {
            values: "spacing",
            shorthand: [
                "p"
            ]
        },
        paddingTop: {
            values: "spacing",
            shorthand: [
                "pt"
            ]
        },
        paddingRight: {
            values: "spacing",
            shorthand: [
                "pr"
            ]
        },
        paddingBottom: {
            values: "spacing",
            shorthand: [
                "pb"
            ]
        },
        paddingBlockStart: {
            values: "spacing"
        },
        paddingBlockEnd: {
            values: "spacing"
        },
        paddingLeft: {
            values: "spacing",
            shorthand: [
                "pl"
            ]
        },
        paddingInlineStart: {
            values: "spacing",
            shorthand: [
                "ps",
                "paddingStart"
            ]
        },
        paddingInlineEnd: {
            values: "spacing",
            shorthand: [
                "pe",
                "paddingEnd"
            ]
        },
        paddingInline: {
            values: "spacing",
            shorthand: [
                "px",
                "paddingX"
            ]
        },
        paddingBlock: {
            values: "spacing",
            shorthand: [
                "py",
                "paddingY"
            ]
        },
        // text decoration
        textDecoration: {
            shorthand: [
                "textDecor"
            ]
        },
        textDecorationColor: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("textDecorationColor")
        },
        textShadow: {
            values: "shadows"
        },
        // transform
        transform: {
            transform: (value)=>{
                let v = value;
                if (value === "auto") {
                    v = `translateX(var(--translate-x, 0)) translateY(var(--translate-y, 0)) rotate(var(--rotate, 0)) scaleX(var(--scale-x, 1)) scaleY(var(--scale-y, 1)) skewX(var(--skew-x, 0)) skewY(var(--skew-y, 0))`;
                }
                if (value === "auto-gpu") {
                    v = `translate3d(var(--translate-x, 0), var(--translate-y, 0), 0) rotate(var(--rotate, 0)) scaleX(var(--scale-x, 1)) scaleY(var(--scale-y, 1)) skewX(var(--skew-x, 0)) skewY(var(--skew-y, 0))`;
                }
                return {
                    transform: v
                };
            }
        },
        skewX: {
            transform: (v)=>({
                    "--skew-x": deg(v)
                })
        },
        skewY: {
            transform: (v)=>({
                    "--skew-y": deg(v)
                })
        },
        scaleX: {
            transform: (v)=>({
                    "--scale-x": v
                })
        },
        scaleY: {
            transform: (v)=>({
                    "--scale-y": v
                })
        },
        scale: {
            transform (value) {
                if (value !== "auto") return {
                    scale: value
                };
                return {
                    scale: `var(--scale-x, 1) var(--scale-y, 1)`
                };
            }
        },
        spaceXReverse: {
            values: {
                type: "boolean"
            },
            transform (value) {
                return {
                    "& > :not(style, [hidden]) ~ :not(style, [hidden])": {
                        "--space-x-reverse": value ? "1" : void 0
                    }
                };
            }
        },
        spaceX: {
            property: "marginInlineStart",
            values: "spacing",
            transform: (v)=>({
                    "& > :not(style, [hidden]) ~ :not(style, [hidden])": {
                        "--space-x-reverse": "0",
                        marginInlineStart: `calc(${v} * calc(1 - var(--space-x-reverse)))`,
                        marginInlineEnd: `calc(${v} * var(--space-x-reverse))`
                    }
                })
        },
        spaceYReverse: {
            values: {
                type: "boolean"
            },
            transform (value) {
                return {
                    "& > :not(style, [hidden]) ~ :not(style, [hidden])": {
                        "--space-y-reverse": value ? "1" : void 0
                    }
                };
            }
        },
        spaceY: {
            property: "marginTop",
            values: "spacing",
            transform: (v)=>({
                    "& > :not(style, [hidden]) ~ :not(style, [hidden])": {
                        "--space-y-reverse": "0",
                        marginTop: `calc(${v} * calc(1 - var(--space-y-reverse)))`,
                        marginBottom: `calc(${v} * var(--space-y-reverse))`
                    }
                })
        },
        rotate: {
            transform (value) {
                if (value !== "auto") return {
                    rotate: deg(value)
                };
                return {
                    rotate: `var(--rotate-x, 0) var(--rotate-y, 0) var(--rotate-z, 0)`
                };
            }
        },
        rotateX: {
            transform (value) {
                return {
                    "--rotate-x": deg(value)
                };
            }
        },
        rotateY: {
            transform (value) {
                return {
                    "--rotate-y": deg(value)
                };
            }
        },
        // transform / translate
        translate: {
            transform (value) {
                if (value !== "auto") return {
                    translate: value
                };
                return {
                    translate: `var(--translate-x) var(--translate-y)`
                };
            }
        },
        translateX: {
            values: "spacing",
            transform: (v)=>({
                    "--translate-x": v
                })
        },
        translateY: {
            values: "spacing",
            transform: (v)=>({
                    "--translate-y": v
                })
        },
        // transition
        transition: {
            values: [
                "all",
                "common",
                "colors",
                "opacity",
                "position",
                "backgrounds",
                "size",
                "shadow",
                "transform"
            ],
            transform (value) {
                switch(value){
                    case "all":
                        return createTransition("all");
                    case "position":
                        return createTransition("left, right, top, bottom, inset-inline, inset-block");
                    case "colors":
                        return createTransition("color, background-color, border-color, text-decoration-color, fill, stroke");
                    case "opacity":
                        return createTransition("opacity");
                    case "shadow":
                        return createTransition("box-shadow");
                    case "transform":
                        return createTransition("transform");
                    case "size":
                        return createTransition("width, height");
                    case "backgrounds":
                        return createTransition("background, background-color, background-image, background-position");
                    case "common":
                        return createTransition("color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter");
                    default:
                        return {
                            transition: value
                        };
                }
            }
        },
        transitionDuration: {
            values: "durations"
        },
        transitionProperty: {
            values: {
                common: "background-color, border-color, color, fill, stroke, opacity, box-shadow, translate, transform",
                colors: "background-color, border-color, color, fill, stroke",
                size: "width, height",
                position: "left, right, top, bottom, inset-inline, inset-block",
                background: "background, background-color, background-image, background-position"
            }
        },
        transitionTimingFunction: {
            values: "easings"
        },
        // animation
        animation: {
            values: "animations"
        },
        animationDuration: {
            values: "durations"
        },
        animationDelay: {
            values: "durations"
        },
        animationTimingFunction: {
            values: "easings"
        },
        // typography
        fontFamily: {
            values: "fonts"
        },
        fontSize: {
            values: "fontSizes"
        },
        fontWeight: {
            values: "fontWeights"
        },
        lineHeight: {
            values: "lineHeights"
        },
        letterSpacing: {
            values: "letterSpacings"
        },
        textIndent: {
            values: "spacing"
        },
        truncate: {
            values: {
                type: "boolean"
            },
            transform (value) {
                if (value === true) {
                    return {
                        overflow: "hidden",
                        textOverflow: "ellipsis",
                        whiteSpace: "nowrap"
                    };
                }
                return {};
            }
        },
        lineClamp: {
            transform (value) {
                if (value === "none") {
                    return {
                        WebkitLineClamp: "unset"
                    };
                }
                return {
                    overflow: "hidden",
                    display: "-webkit-box",
                    WebkitLineClamp: value,
                    WebkitBoxOrient: "vertical",
                    textWrap: "wrap"
                };
            }
        },
        // helpers
        srOnly: {
            values: {
                type: "boolean"
            },
            transform (value) {
                return srMapping[value] || {};
            }
        },
        debug: {
            values: {
                type: "boolean"
            },
            transform (value) {
                if (!value) return {};
                return {
                    outline: "1px solid blue !important",
                    "& > *": {
                        outline: "1px solid red !important"
                    }
                };
            }
        },
        caretColor: {
            values: colorValues,
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createColorMixTransform"])("caretColor")
        },
        cursor: {
            values: "cursor"
        }
    }
});
const srMapping = {
    true: {
        position: "absolute",
        width: "1px",
        height: "1px",
        padding: "0",
        margin: "-1px",
        overflow: "hidden",
        clip: "rect(0, 0, 0, 0)",
        whiteSpace: "nowrap",
        borderWidth: "0"
    },
    false: {
        position: "static",
        width: "auto",
        height: "auto",
        padding: "0",
        margin: "0",
        overflow: "visible",
        clip: "auto",
        whiteSpace: "normal"
    }
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/utils/compact.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "compact": (()=>compact)
});
"use strict";
function compact(object) {
    const clone = Object.assign({}, object);
    for(let key in clone){
        if (clone[key] === void 0) delete clone[key];
    }
    return clone;
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/utils/walk-object.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "mapObject": (()=>mapObject),
    "walkObject": (()=>walkObject)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-rsc] (ecmascript)");
"use strict";
;
const isNotNullish = (element)=>element != null;
function walkObject(target, predicate, options = {}) {
    const { stop, getKey } = options;
    function inner(value, path = []) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isObject"])(value) || Array.isArray(value)) {
            const result = {};
            for (const [prop, child] of Object.entries(value)){
                const key = getKey?.(prop, child) ?? prop;
                const childPath = [
                    ...path,
                    key
                ];
                if (stop?.(value, childPath)) {
                    return predicate(value, path);
                }
                const next = inner(child, childPath);
                if (isNotNullish(next)) {
                    result[key] = next;
                }
            }
            return result;
        }
        return predicate(value, path);
    }
    return inner(target);
}
function mapObject(obj, fn) {
    if (Array.isArray(obj)) return obj.map((value)=>fn(value));
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isObject"])(obj)) {
        if (obj !== null && obj !== void 0) return fn(obj);
        else return obj;
    }
    return walkObject(obj, (value)=>fn(value));
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/utils/flatten.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "flatten": (()=>flatten)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/walk-object.js [app-rsc] (ecmascript)");
"use strict";
;
function flatten(values, stop) {
    const result = {};
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["walkObject"])(values, (token, paths)=>{
        if (token) {
            result[paths.join(".")] = token.value;
        }
    }, {
        stop
    });
    return result;
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/utils/memo.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "memo": (()=>memo)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fast$2d$safe$2d$stringify$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/fast-safe-stringify/index.js [app-rsc] (ecmascript)");
"use strict";
;
const memo = (fn)=>{
    const cache = /* @__PURE__ */ Object.create(null);
    function get(...args) {
        const key = args.map((v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fast$2d$safe$2d$stringify$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["default"])(v)).join("|");
        if (cache[key] === void 0) cache[key] = fn(...args);
        return cache[key];
    }
    return get;
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/utils/split-props.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createSplitProps": (()=>createSplitProps),
    "splitProps": (()=>splitProps)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-rsc] (ecmascript)");
"use strict";
;
const splitPropFn = (props, predicate)=>{
    const rest = {};
    const result = {};
    const allKeys = Object.keys(props);
    for (const key of allKeys){
        if (predicate(key)) {
            result[key] = props[key];
        } else {
            rest[key] = props[key];
        }
    }
    return [
        result,
        rest
    ];
};
const splitProps = (props, keys)=>{
    const predicate = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isFunction"])(keys) ? keys : (key)=>keys.includes(key);
    return splitPropFn(props, predicate);
};
const createSplitProps = (keys)=>{
    return function split(props) {
        return splitProps(props, keys);
    };
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/unit-conversion.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getUnit": (()=>getUnit),
    "toEm": (()=>toEm),
    "toPx": (()=>toPx),
    "toRem": (()=>toRem)
});
"use strict";
const BASE_FONT_SIZE = 16;
const UNIT_PX = "px";
const UNIT_EM = "em";
const UNIT_REM = "rem";
function getUnit(value = "") {
    const DIGIT_REGEX = new RegExp(String.raw`-?\d+(?:\.\d+|\d*)`);
    const UNIT_REGEX = new RegExp(`${UNIT_PX}|${UNIT_EM}|${UNIT_REM}`);
    const unit = value.match(new RegExp(`${DIGIT_REGEX.source}(${UNIT_REGEX.source})`));
    return unit?.[1];
}
function toPx(value = "") {
    if (typeof value === "number") {
        return `${value}px`;
    }
    const unit = getUnit(value);
    if (!unit) return value;
    if (unit === UNIT_PX) {
        return value;
    }
    if (unit === UNIT_EM || unit === UNIT_REM) {
        return `${parseFloat(value) * BASE_FONT_SIZE}${UNIT_PX}`;
    }
}
function toEm(value = "", fontSize = BASE_FONT_SIZE) {
    const unit = getUnit(value);
    if (!unit) return value;
    if (unit === UNIT_EM) {
        return value;
    }
    if (unit === UNIT_PX) {
        return `${parseFloat(value) / fontSize}${UNIT_EM}`;
    }
    if (unit === UNIT_REM) {
        return `${parseFloat(value) * BASE_FONT_SIZE / fontSize}${UNIT_EM}`;
    }
}
function toRem(value = "") {
    const unit = getUnit(value);
    if (!unit) return value;
    if (unit === UNIT_REM) {
        return value;
    }
    if (unit === UNIT_EM) {
        return `${parseFloat(value)}${UNIT_REM}`;
    }
    if (unit === UNIT_PX) {
        return `${parseFloat(value) / BASE_FONT_SIZE}${UNIT_REM}`;
    }
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/breakpoints.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createBreakpoints": (()=>createBreakpoints)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$unit$2d$conversion$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/unit-conversion.js [app-rsc] (ecmascript)");
"use strict";
;
const capitalize = (str)=>str.charAt(0).toUpperCase() + str.slice(1);
function createBreakpoints(breakpoints) {
    const sorted = sort(breakpoints);
    const values = Object.fromEntries(sorted);
    function get(name) {
        return values[name];
    }
    function only(name) {
        return build(get(name));
    }
    function getRanges() {
        const breakpoints2 = Object.keys(values);
        const permuations = getPermutations(breakpoints2);
        const results = breakpoints2.flatMap((name)=>{
            const value = get(name);
            const down2 = [
                `${name}Down`,
                build({
                    max: adjust(value.min)
                })
            ];
            const up2 = [
                name,
                build({
                    min: value.min
                })
            ];
            const _only = [
                `${name}Only`,
                only(name)
            ];
            return [
                up2,
                _only,
                down2
            ];
        }).filter(([, value])=>value !== "").concat(permuations.map(([min, max])=>{
            const minValue = get(min);
            const maxValue = get(max);
            return [
                `${min}To${capitalize(max)}`,
                build({
                    min: minValue.min,
                    max: adjust(maxValue.min)
                })
            ];
        }));
        return Object.fromEntries(results);
    }
    function toConditions() {
        const ranges = getRanges();
        return Object.fromEntries(Object.entries(ranges));
    }
    const conditions = toConditions();
    const getCondition = (key)=>{
        return conditions[key];
    };
    function keys() {
        return [
            "base",
            ...Object.keys(values)
        ];
    }
    function up(name) {
        return build({
            min: get(name).min
        });
    }
    function down(name) {
        return build({
            max: adjust(get(name).min)
        });
    }
    return {
        values: Object.values(values),
        only,
        keys,
        conditions,
        getCondition,
        up,
        down
    };
}
function adjust(value) {
    const computedMax = parseFloat((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$unit$2d$conversion$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toPx"])(value) ?? "") - 0.04;
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$unit$2d$conversion$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toRem"])(`${computedMax}px`);
}
function sort(breakpoints) {
    const entries = Object.entries(breakpoints).sort(([, minA], [, minB])=>{
        return parseInt(minA, 10) < parseInt(minB, 10) ? -1 : 1;
    });
    return entries.map(([name, min], index, entries2)=>{
        let max = null;
        if (index <= entries2.length - 1) {
            max = entries2[index + 1]?.[1];
        }
        if (max != null) {
            max = adjust(max);
        }
        return [
            name,
            {
                name,
                min: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$unit$2d$conversion$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toRem"])(min),
                max
            }
        ];
    });
}
function getPermutations(values) {
    const result = [];
    values.forEach((current, index)=>{
        let idx = index;
        idx++;
        let next = values[idx];
        while(next){
            result.push([
                current,
                next
            ]);
            idx++;
            next = values[idx];
        }
    });
    return result;
}
function build({ min, max }) {
    if (min == null && max == null) return "";
    return [
        "@media screen",
        min && `(min-width: ${min})`,
        max && `(max-width: ${max})`
    ].filter(Boolean).join(" and ");
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/conditions.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createConditions": (()=>createConditions)
});
"use strict";
const mapEntries = (obj, fn)=>{
    return Object.fromEntries(Object.entries(obj).map(([key, value])=>fn(key, value)));
};
const createConditions = (options)=>{
    const { breakpoints, conditions: conds = {} } = options;
    const conditions = mapEntries(conds, (key, value)=>[
            `_${key}`,
            value
        ]);
    const values = Object.assign({}, conditions, breakpoints.conditions);
    function keys() {
        return Object.keys(values);
    }
    function has(key) {
        return keys().includes(key) || /^@|&|&$/.test(key) || key.startsWith("_");
    }
    function sort(paths) {
        return paths.filter((v)=>v !== "base").sort((a, b)=>{
            const aa = has(a);
            const bb = has(b);
            if (aa && !bb) return 1;
            if (!aa && bb) return -1;
            return 0;
        });
    }
    function expandAtRule(key) {
        if (!key.startsWith("@breakpoint")) return key;
        return breakpoints.getCondition(key.replace("@breakpoint ", ""));
    }
    function resolve(key) {
        return Reflect.get(values, key) || key;
    }
    return {
        keys,
        sort,
        has,
        resolve,
        breakpoints: breakpoints.keys(),
        expandAtRule
    };
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/sort-at-params.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "sortAtParams": (()=>sortAtParams)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/memo.js [app-rsc] (ecmascript)");
"use strict";
;
const createMediaQueryRegex = (dimension)=>({
        minMax: new RegExp(`(!?\\(\\s*min(-device-)?-${dimension})(.|
)+\\(\\s*max(-device)?-${dimension}`, "i"),
        min: new RegExp(`\\(\\s*min(-device)?-${dimension}`, "i"),
        maxMin: new RegExp(`(!?\\(\\s*max(-device)?-${dimension})(.|
)+\\(\\s*min(-device)?-${dimension}`, "i"),
        max: new RegExp(`\\(\\s*max(-device)?-${dimension}`, "i")
    });
const widthRegex = createMediaQueryRegex("width");
const heightRegex = createMediaQueryRegex("height");
const createQueryTester = (regexSet)=>({
        isMin: _testQuery(regexSet.minMax, regexSet.maxMin, regexSet.min),
        isMax: _testQuery(regexSet.maxMin, regexSet.minMax, regexSet.max)
    });
const { isMin: isMinWidth, isMax: isMaxWidth } = createQueryTester(widthRegex);
const { isMin: isMinHeight, isMax: isMaxHeight } = createQueryTester(heightRegex);
const isPrint = /print/i;
const isPrintOnly = /^print$/i;
const isLength = /(-?\d*\.?\d+)(ch|em|ex|px|rem)/;
const lengthExec = /(\d)/;
const maxValue = Number.MAX_VALUE;
const multipliers = {
    ch: 8.8984375,
    em: 16,
    rem: 16,
    ex: 8.296875,
    px: 1
};
function getQueryLength(query) {
    const length = isLength.exec(query) || (isMinWidth(query) || isMinHeight(query) ? lengthExec.exec(query) : null);
    if (!length) return maxValue;
    if (length[0] === "0") return 0;
    const number = parseFloat(length[1]);
    const unit = length[2];
    return number * (multipliers[unit] || 1);
}
function _testQuery(doubleTestTrue, doubleTestFalse, singleTest) {
    return (query)=>doubleTestTrue.test(query) || !doubleTestFalse.test(query) && singleTest.test(query);
}
function _testIsPrint(a, b) {
    const isPrintA = isPrint.test(a), isPrintOnlyA = isPrintOnly.test(a);
    const isPrintB = isPrint.test(b), isPrintOnlyB = isPrintOnly.test(b);
    if (isPrintA && isPrintB) {
        if (!isPrintOnlyA && isPrintOnlyB) return 1;
        if (isPrintOnlyA && !isPrintOnlyB) return -1;
        return a.localeCompare(b);
    }
    return isPrintA ? 1 : isPrintB ? -1 : null;
}
const sortAtParams = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["memo"])((a, b)=>{
    const testIsPrint = _testIsPrint(a, b);
    if (testIsPrint !== null) return testIsPrint;
    const minA = isMinWidth(a) || isMinHeight(a), maxA = isMaxWidth(a) || isMaxHeight(a);
    const minB = isMinWidth(b) || isMinHeight(b), maxB = isMaxWidth(b) || isMaxHeight(b);
    if (minA && maxB) return -1;
    if (maxA && minB) return 1;
    const lengthA = getQueryLength(a), lengthB = getQueryLength(b);
    if (lengthA === maxValue && lengthB === maxValue) return a.localeCompare(b);
    if (lengthA === maxValue) return 1;
    if (lengthB === maxValue) return -1;
    if (lengthA !== lengthB) {
        return lengthA > lengthB ? maxA ? -1 : 1 : maxA ? 1 : -1;
    }
    return a.localeCompare(b);
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/sort-at-rules.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "sortAtRules": (()=>sortAtRules)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$sort$2d$at$2d$params$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/sort-at-params.js [app-rsc] (ecmascript)");
"use strict";
;
;
function sortQueries(queries) {
    return queries.sort(([a], [b])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$sort$2d$at$2d$params$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["sortAtParams"])(a, b));
}
function sortAtRules(obj) {
    const mediaQueries = [];
    const containerQueries = [];
    const rest = {};
    for (const [key, value] of Object.entries(obj)){
        if (key.startsWith("@media")) {
            mediaQueries.push([
                key,
                value
            ]);
        } else if (key.startsWith("@container")) {
            containerQueries.push([
                key,
                value
            ]);
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isObject"])(value)) {
            rest[key] = sortAtRules(value);
        } else {
            rest[key] = value;
        }
    }
    const sortedMediaQueries = sortQueries(mediaQueries);
    const sortedContainerQueries = sortQueries(containerQueries);
    return {
        ...rest,
        ...Object.fromEntries(sortedMediaQueries),
        ...Object.fromEntries(sortedContainerQueries)
    };
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/css.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createCssFn": (()=>createCssFn)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/compact.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/memo.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/merge.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/walk-object.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$sort$2d$at$2d$rules$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/sort-at-rules.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
;
;
const importantRegex = /\s*!(important)?/i;
const isImportant = (v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isString"])(v) ? importantRegex.test(v) : false;
const withoutImportant = (v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isString"])(v) ? v.replace(importantRegex, "").trim() : v;
function createCssFn(context) {
    const { transform, conditions, normalize } = context;
    const mergeFn = mergeCss(context);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["memo"])(function cssFn(...styleArgs) {
        const styles = mergeFn(...styleArgs);
        const normalized = normalize(styles);
        const result = /* @__PURE__ */ Object.create(null);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["walkObject"])(normalized, (value, paths)=>{
            const important = isImportant(value);
            if (value == null) return;
            const [prop, ...selectors] = conditions.sort(paths).map(conditions.resolve);
            if (important) {
                value = withoutImportant(value);
            }
            let transformed = transform(prop, value) ?? /* @__PURE__ */ Object.create(null);
            transformed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["walkObject"])(transformed, (v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isString"])(v) && important ? `${v} !important` : v, {
                getKey: (prop2)=>conditions.expandAtRule(prop2)
            });
            mergeByPath(result, selectors.flat(), transformed);
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$sort$2d$at$2d$rules$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["sortAtRules"])(result);
    });
}
function mergeByPath(target, paths, value) {
    let acc = target;
    for (const path of paths){
        if (!path) continue;
        if (!acc[path]) acc[path] = /* @__PURE__ */ Object.create(null);
        acc = acc[path];
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["mergeWith"])(acc, value);
}
function compactFn(...styles) {
    return styles.filter((style)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isObject"])(style) && Object.keys((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["compact"])(style)).length > 0);
}
function mergeCss(ctx) {
    function resolve(styles) {
        const comp = compactFn(...styles);
        if (comp.length === 1) return comp;
        return comp.map((style)=>ctx.normalize(style));
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["memo"])(function mergeFn(...styles) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["mergeWith"])({}, ...resolve(styles));
    });
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/utils/cx.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "cx": (()=>cx)
});
"use strict";
const cx = (...classNames)=>classNames.filter(Boolean).map((r)=>r.trim()).join(" ");
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/utils/omit.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "omit": (()=>omit)
});
"use strict";
function omit(object, keysToOmit = []) {
    const clone = Object.assign({}, object);
    for (const key of keysToOmit){
        if (key in clone) {
            delete clone[key];
        }
    }
    return clone;
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/utils/uniq.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "uniq": (()=>uniq)
});
"use strict";
const uniq = (...items)=>{
    const _items = items.filter(Boolean);
    return Array.from(new Set(_items));
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/cva.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createRecipeFn": (()=>createRecipeFn)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/compact.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$cx$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/cx.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/merge.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$omit$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/omit.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/split-props.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$uniq$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/uniq.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$css$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/css.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
;
;
;
const defaults = (conf)=>({
        base: {},
        variants: {},
        defaultVariants: {},
        compoundVariants: [],
        ...conf
    });
function createRecipeFn(options) {
    const { css, conditions, normalize, layers } = options;
    function cva(config = {}) {
        const { base, variants, defaultVariants, compoundVariants } = defaults(config);
        const getVariantCss = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$css$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createCssFn"])({
            conditions,
            normalize,
            transform (prop, value) {
                return variants[prop]?.[value];
            }
        });
        const resolve = (props = {})=>{
            const variantSelections = normalize({
                ...defaultVariants,
                ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["compact"])(props)
            });
            let variantCss = {
                ...base
            };
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["mergeWith"])(variantCss, getVariantCss(variantSelections));
            const compoundVariantCss = getCompoundVariantCss(compoundVariants, variantSelections);
            return layers.wrap("recipes", css(variantCss, compoundVariantCss));
        };
        const variantKeys = Object.keys(variants);
        const splitVariantProps = (props)=>{
            const restProps = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$omit$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["omit"])(props, [
                "recipe"
            ]);
            const [recipeProps, localProps] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["splitProps"])(restProps, variantKeys);
            if (!variantKeys.includes("colorPalette")) {
                recipeProps.colorPalette = props.colorPalette || defaultVariants.colorPalette;
            }
            if (variantKeys.includes("orientation")) {
                localProps.orientation = props.orientation;
            }
            return [
                recipeProps,
                localProps
            ];
        };
        const variantMap = Object.fromEntries(Object.entries(variants).map(([key, value])=>[
                key,
                Object.keys(value)
            ]));
        const cvaFn = (props)=>css(resolve(props));
        return Object.assign(cvaFn, {
            className: config.className,
            __cva__: true,
            variantMap,
            variantKeys,
            raw: resolve,
            config,
            splitVariantProps,
            merge (other) {
                return cva(mergeCva(options)(this, other));
            }
        });
    }
    function getCompoundVariantCss(cvs, vm) {
        let result = {};
        cvs.forEach((cv)=>{
            const isMatching = Object.entries(cv).every(([key, value])=>{
                if (key === "css") return true;
                const values = Array.isArray(value) ? value : [
                    value
                ];
                return values.some((value2)=>vm[key] === value2);
            });
            if (isMatching) {
                result = css(result, cv.css);
            }
        });
        return result;
    }
    return cva;
}
function mergeCva(opts) {
    const { css } = opts;
    return function mergeCva2(cvaA, cvaB) {
        const override = defaults(cvaB.config);
        const variantKeys = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$uniq$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["uniq"])(cvaA.variantKeys, Object.keys(cvaB.variants));
        const base = css(cvaA.base, override.base);
        const variants = Object.fromEntries(variantKeys.map((key)=>[
                key,
                css(cvaA.config.variants[key], override.variants[key])
            ]));
        const defaultVariants = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["mergeWith"])(cvaA.config.defaultVariants, override.defaultVariants);
        const compoundVariants = [
            ...cvaA.compoundVariants,
            ...override.compoundVariants
        ];
        const className = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$cx$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["cx"])(cvaA.className, cvaB.className);
        return {
            className,
            base,
            variants,
            defaultVariants,
            compoundVariants
        };
    };
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/layers.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createLayers": (()=>createLayers)
});
"use strict";
const defaultLayers = {
    reset: "reset",
    base: "base",
    tokens: "tokens",
    recipes: "recipes"
};
const layerOrder = {
    reset: 0,
    base: 1,
    tokens: 2,
    recipes: 3
};
function createLayers(config) {
    const layers = config.layers ?? defaultLayers;
    const values = Object.values(layers);
    const names = values.sort((a, b)=>layerOrder[a] - layerOrder[b]);
    return {
        names,
        atRule: `@layer ${names.join(", ")};`,
        wrap (layer, styles) {
            if (config.disableLayers) return styles;
            const params = layers[layer];
            return {
                [`@layer ${params}`]: styles
            };
        }
    };
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/normalize.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createNormalizeFn": (()=>createNormalizeFn)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/walk-object.js [app-rsc] (ecmascript)");
"use strict";
;
function createNormalizeFn(context) {
    const { utility, normalize } = context;
    const { hasShorthand, resolveShorthand } = utility;
    return function(styles) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["walkObject"])(styles, normalize, {
            stop: (value)=>Array.isArray(value),
            getKey: hasShorthand ? resolveShorthand : void 0
        });
    };
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/preflight.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createPreflight": (()=>createPreflight)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-rsc] (ecmascript)");
"use strict";
;
function createPreflight(options) {
    const { preflight } = options;
    if (!preflight) return {};
    const { scope = "", level = "parent" } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isObject"])(preflight) ? preflight : {};
    let selector = "";
    if (scope && level === "parent") {
        selector = `${scope} `;
    } else if (scope && level === "element") {
        selector = `&${scope}`;
    }
    const scoped = {
        "*": {
            margin: "0px",
            padding: "0px",
            font: "inherit",
            wordWrap: "break-word",
            WebkitTapHighlightColor: "transparent"
        },
        "*, *::before, *::after, *::backdrop": {
            boxSizing: "border-box",
            borderWidth: "0px",
            borderStyle: "solid",
            borderColor: "var(--global-color-border, currentColor)"
        },
        hr: {
            height: "0px",
            color: "inherit",
            borderTopWidth: "1px"
        },
        body: {
            minHeight: "100dvh",
            position: "relative"
        },
        img: {
            borderStyle: "none"
        },
        "img, svg, video, canvas, audio, iframe, embed, object": {
            display: "block",
            verticalAlign: "middle"
        },
        iframe: {
            border: "none"
        },
        "img, video": {
            maxWidth: "100%",
            height: "auto"
        },
        "p, h1, h2, h3, h4, h5, h6": {
            overflowWrap: "break-word"
        },
        "ol, ul": {
            listStyle: "none"
        },
        "code, kbd, pre, samp": {
            fontSize: "1em"
        },
        "button, [type='button'], [type='reset'], [type='submit']": {
            WebkitAppearance: "button",
            backgroundColor: "transparent",
            backgroundImage: "none"
        },
        "button, input, optgroup, select, textarea": {
            color: "inherit"
        },
        "button, select": {
            textTransform: "none"
        },
        table: {
            textIndent: "0px",
            borderColor: "inherit",
            borderCollapse: "collapse"
        },
        "*::placeholder": {
            opacity: "unset",
            color: "#9ca3af",
            userSelect: "none"
        },
        textarea: {
            resize: "vertical"
        },
        summary: {
            display: "list-item"
        },
        small: {
            fontSize: "80%"
        },
        "sub, sup": {
            fontSize: "75%",
            lineHeight: 0,
            position: "relative",
            verticalAlign: "baseline"
        },
        sub: {
            bottom: "-0.25em"
        },
        sup: {
            top: "-0.5em"
        },
        dialog: {
            padding: "0px"
        },
        a: {
            color: "inherit",
            textDecoration: "inherit"
        },
        "abbr:where([title])": {
            textDecoration: "underline dotted"
        },
        "b, strong": {
            fontWeight: "bolder"
        },
        "code, kbd, samp, pre": {
            fontSize: "1em",
            "--font-mono-fallback": "ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New'",
            fontFamily: "var(--global-font-mono, var(--font-mono-fallback))"
        },
        'input[type="text"], input[type="email"], input[type="search"], input[type="password"]': {
            WebkitAppearance: "none",
            MozAppearance: "none"
        },
        "input[type='search']": {
            WebkitAppearance: "textfield",
            outlineOffset: "-2px"
        },
        "::-webkit-search-decoration, ::-webkit-search-cancel-button": {
            WebkitAppearance: "none"
        },
        "::-webkit-file-upload-button": {
            WebkitAppearance: "button",
            font: "inherit"
        },
        'input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button': {
            height: "auto"
        },
        "input[type='number']": {
            MozAppearance: "textfield"
        },
        ":-moz-ui-invalid": {
            boxShadow: "none"
        },
        ":-moz-focusring": {
            outline: "auto"
        },
        "[hidden]:where(:not([hidden='until-found']))": {
            display: "none !important"
        }
    };
    const preflightCss = {
        [scope || "html"]: {
            lineHeight: 1.5,
            "--font-fallback": "ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
            WebkitTextSizeAdjust: "100%",
            WebkitFontSmoothing: "antialiased",
            MozOsxFontSmoothing: "grayscale",
            textRendering: "optimizeLegibility",
            touchAction: "manipulation",
            MozTabSize: "4",
            tabSize: "4",
            fontFamily: "var(--global-font-body, var(--font-fallback))"
        }
    };
    if (level === "element") {
        const modified = Object.entries(scoped).reduce((acc, [k, v])=>{
            acc[k] = {
                [selector]: v
            };
            return acc;
        }, {});
        Object.assign(preflightCss, modified);
    } else if (selector) {
        preflightCss[selector] = scoped;
    } else {
        Object.assign(preflightCss, scoped);
    }
    return preflightCss;
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/serialize.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createSerializeFn": (()=>createSerializeFn)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/walk-object.js [app-rsc] (ecmascript)");
"use strict";
;
;
function createSerializeFn(options) {
    const { conditions, isValidProperty } = options;
    return function serialize(styles) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["walkObject"])(styles, (value)=>value, {
            getKey: (prop, value)=>{
                if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isObject"])(value)) return prop;
                if (!conditions.has(prop) && !isValidProperty(prop)) {
                    return parseSelectors(prop).map((s)=>"&" + s).join(", ");
                }
                return prop;
            }
        });
    };
}
function parseSelectors(selector) {
    const result = [];
    let parenCount = 0;
    let currentSelector = "";
    let inEscape = false;
    for(let i = 0; i < selector.length; i++){
        const char = selector[i];
        if (char === "\\" && !inEscape) {
            inEscape = true;
            currentSelector += char;
            continue;
        }
        if (inEscape) {
            inEscape = false;
            currentSelector += char;
            continue;
        }
        if (char === "(") {
            parenCount++;
        } else if (char === ")") {
            parenCount--;
        }
        if (char === "," && parenCount === 0) {
            result.push(currentSelector.trim());
            currentSelector = "";
        } else {
            currentSelector += char;
        }
    }
    if (currentSelector) {
        result.push(currentSelector.trim());
    }
    return result;
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/sva.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createSlotRecipeFn": (()=>createSlotRecipeFn),
    "getSlotCompoundVariant": (()=>getSlotCompoundVariant)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$omit$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/omit.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/split-props.js [app-rsc] (ecmascript)");
"use strict";
;
;
const getSlotRecipes = (config = {})=>{
    const init = (slot)=>({
            base: config.base?.[slot] ?? {},
            variants: {},
            defaultVariants: config.defaultVariants ?? {},
            compoundVariants: config.compoundVariants ? getSlotCompoundVariant(config.compoundVariants, slot) : []
        });
    const slots = config.slots ?? [];
    const entries = slots.map((slot)=>[
            slot,
            init(slot)
        ]);
    for (const [variantsKey, variantsSpec] of Object.entries(config.variants ?? {})){
        for (const [variantKey, variantSpec] of Object.entries(variantsSpec)){
            entries.forEach(([slot, slotRecipe])=>{
                var _a;
                (_a = slotRecipe.variants)[variantsKey] ?? (_a[variantsKey] = {});
                slotRecipe.variants[variantsKey][variantKey] = variantSpec[slot] ?? {};
            });
        }
    }
    return Object.fromEntries(entries);
};
const getSlotCompoundVariant = (compoundVariants, slotName)=>compoundVariants.filter((compoundVariant)=>compoundVariant.css[slotName]).map((compoundVariant)=>({
            ...compoundVariant,
            css: compoundVariant.css[slotName]
        }));
function createSlotRecipeFn(options) {
    const { cva } = options;
    return function sva(config = {}) {
        const slots = Object.entries(getSlotRecipes(config)).map(([slot, slotCva])=>[
                slot,
                cva(slotCva)
            ]);
        function svaFn(props) {
            const result = slots.map(([slot, cvaFn])=>[
                    slot,
                    cvaFn(props)
                ]);
            return Object.fromEntries(result);
        }
        const variants = config.variants ?? {};
        const variantKeys = Object.keys(variants);
        function splitVariantProps(props) {
            const restProps = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$omit$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["omit"])(props, [
                "recipe"
            ]);
            const [recipeProps, localProps] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["splitProps"])(restProps, variantKeys);
            if (!variantKeys.includes("colorPalette")) {
                recipeProps.colorPalette = props.colorPalette || config.defaultVariants?.colorPalette;
            }
            if (variantKeys.includes("orientation")) {
                localProps.orientation = props.orientation;
            }
            return [
                recipeProps,
                localProps
            ];
        }
        const variantMap = Object.fromEntries(Object.entries(variants).map(([key, value])=>[
                key,
                Object.keys(value)
            ]));
        let classNameMap = {};
        if (config.className) {
            classNameMap = Object.fromEntries(config.slots.map((slot)=>[
                    slot,
                    `${config.className}__${slot}`
                ]));
        }
        return Object.assign(svaFn, {
            variantMap,
            variantKeys,
            splitVariantProps,
            classNameMap
        });
    };
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/utils/create-props.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createProps": (()=>createProps)
});
"use strict";
const createProps = ()=>(props)=>Array.from(new Set(props));
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/esc.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "esc": (()=>esc)
});
"use strict";
const rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|^-|[^\x80-\uFFFF\w-]/g;
const fcssescape = function(ch, asCodePoint) {
    if (!asCodePoint) return "\\" + ch;
    if (ch === "\0") return "\uFFFD";
    if (ch === "-" && ch.length === 1) return "\\-";
    return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16);
};
const esc = (sel)=>{
    return (sel + "").replace(rcssescape, fcssescape);
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/expand-reference.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "expandTokenReferences": (()=>expandTokenReferences)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$esc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/esc.js [app-rsc] (ecmascript)");
"use strict";
;
const expandTokenReferences = (str, resolve)=>{
    let expanded = "";
    let index = 0;
    let state = "char";
    let tokenPath = "";
    let fallback = "";
    const currentStates = [];
    while(index < str.length){
        const char = str[index];
        if (char === "{") {
            const endIndex = str.indexOf("}", index);
            if (endIndex === -1) {
                break;
            }
            const path = str.slice(index + 1, endIndex);
            const resolved = resolve(path);
            expanded += resolved ?? path;
            index = endIndex + 1;
            continue;
        }
        if (state === "token") {
            if (char === ",") {
                if (str[index] === "") {
                    index++;
                }
                state = "fallback";
                currentStates.push(state);
                const resolved = resolve(tokenPath);
                if (resolved?.endsWith(")")) {
                    expanded += resolved.slice(0, -1);
                }
                tokenPath = "";
                fallback = "";
                continue;
            }
        }
        if (state === "fallback") {
            const nextFallback = fallback + char;
            if (nextFallback === ", var(") {
                const innerEndIndex = cssVarParser(str.slice(index + 1));
                const endIndex = innerEndIndex + index + 1;
                const cssVar = str.slice(index + 1, endIndex);
                if (endIndex === -1) {
                    break;
                }
                expanded += ", var(" + cssVar + ")";
                index = endIndex + 1;
                state = currentStates.pop() ?? state;
                fallback = "";
                continue;
            }
        }
        if (state === "token" || state === "fallback") {
            index++;
            if (char === ")") {
                state = currentStates.pop() ?? state ?? "char";
                fallback += char;
                const resolved = tokenPath ? resolve(tokenPath) ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$esc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["esc"])(tokenPath) : tokenPath;
                if (fallback) {
                    fallback = fallback.slice(1).trim();
                    if (!fallback.startsWith("token(") && fallback.endsWith(")")) {
                        fallback = fallback.slice(0, -1);
                    }
                    if (fallback.includes("token(")) {
                        const parsed = expandTokenReferences(fallback, resolve);
                        if (parsed) {
                            fallback = parsed.slice(0, -1);
                        }
                    } else if (fallback) {
                        const resolvedFallback = resolve(fallback);
                        if (resolvedFallback) {
                            fallback = resolvedFallback;
                        }
                    }
                }
                const lastChar = expanded.at(-1);
                if (fallback) {
                    if (lastChar?.trim()) {
                        expanded += resolved.slice(0, -1) + (", " + fallback + ")");
                    } else {
                        expanded += fallback;
                    }
                } else {
                    expanded += resolved || ")";
                }
                tokenPath = "";
                fallback = "";
                state = "char";
                continue;
            }
            if (state === "token") {
                tokenPath += char;
            }
            if (state === "fallback") {
                fallback += char;
            }
            continue;
        }
        const tokenIndex = str.indexOf("token(", index);
        if (tokenIndex !== -1) {
            const innerTokenIndex = tokenIndex + "token(".length;
            expanded += str.slice(index, tokenIndex);
            index = innerTokenIndex;
            state = "token";
            currentStates.push(state);
            continue;
        }
        expanded += char;
        index++;
    }
    return expanded;
};
const cssVarParser = (str)=>{
    let index = 0;
    const openedParenthesises = [
        "("
    ];
    while(index < str.length){
        const char = str[index];
        if (char === "(") {
            openedParenthesises.push(char);
        } else if (char === ")") {
            openedParenthesises.pop();
            if (openedParenthesises.length === 0) {
                return index;
            }
        }
        index++;
    }
    return index;
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/map-to-json.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "mapToJson": (()=>mapToJson)
});
"use strict";
function mapToJson(map) {
    const obj = {};
    map.forEach((value, key)=>{
        if (value instanceof Map) {
            obj[key] = Object.fromEntries(value);
        } else {
            obj[key] = value;
        }
    });
    return obj;
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/references.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "TOKEN_PATH_REGEX": (()=>TOKEN_PATH_REGEX),
    "expandReferences": (()=>expandReferences),
    "getReferences": (()=>getReferences),
    "hasReference": (()=>hasReference)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-rsc] (ecmascript)");
"use strict";
;
const REFERENCE_REGEX = /({([^}]*)})/g;
const CURLY_REGEX = /[{}]/g;
const TOKEN_PATH_REGEX = /\w+\.\w+/;
const getReferences = (value)=>{
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isString"])(value)) return [];
    const matches = value.match(REFERENCE_REGEX);
    if (!matches) return [];
    return matches.map((match)=>match.replace(CURLY_REGEX, "")).map((value2)=>value2.trim());
};
const hasReference = (value)=>REFERENCE_REGEX.test(value);
function expandReferences(token) {
    if (!token.extensions?.references) {
        return token.extensions?.cssVar?.ref ?? token.value;
    }
    const references = token.extensions.references ?? {};
    token.value = Object.keys(references).reduce((valueStr, key)=>{
        const referenceToken = references[key];
        if (referenceToken.extensions.conditions) {
            return valueStr;
        }
        const value = expandReferences(referenceToken);
        return valueStr.replace(`{${key}}`, value);
    }, token.value);
    delete token.extensions.references;
    return token.value;
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/calc.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "calc": (()=>calc)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-rsc] (ecmascript)");
"use strict";
;
function resolveReference(operand) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isObject"])(operand) && operand.reference) {
        return operand.reference;
    }
    return String(operand);
}
const toExpression = (operator, ...operands)=>operands.map(resolveReference).join(` ${operator} `).replace(/calc/g, "");
const add = (...operands)=>`calc(${toExpression("+", ...operands)})`;
const subtract = (...operands)=>`calc(${toExpression("-", ...operands)})`;
const multiply = (...operands)=>`calc(${toExpression("*", ...operands)})`;
const divide = (...operands)=>`calc(${toExpression("/", ...operands)})`;
const negate = (x)=>{
    const value = resolveReference(x);
    if (value != null && !Number.isNaN(parseFloat(value))) {
        return String(value).startsWith("-") ? String(value).slice(1) : `-${value}`;
    }
    return multiply(value, -1);
};
const calc = Object.assign((x)=>({
        add: (...operands)=>calc(add(x, ...operands)),
        subtract: (...operands)=>calc(subtract(x, ...operands)),
        multiply: (...operands)=>calc(multiply(x, ...operands)),
        divide: (...operands)=>calc(divide(x, ...operands)),
        negate: ()=>calc(negate(x)),
        toString: ()=>x.toString()
    }), {
    add,
    subtract,
    multiply,
    divide,
    negate
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/token-middleware.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "addNegativeTokens": (()=>addNegativeTokens),
    "addPixelUnit": (()=>addPixelUnit),
    "addVirtualPalette": (()=>addVirtualPalette),
    "removeEmptyTokens": (()=>removeEmptyTokens),
    "tokenMiddlewares": (()=>tokenMiddlewares)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$calc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/calc.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$unit$2d$conversion$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/unit-conversion.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
const addNegativeTokens = {
    enforce: "pre",
    transform (dictionary) {
        const { prefix, allTokens, formatCssVar, formatTokenName, registerToken } = dictionary;
        const tokens = allTokens.filter(({ extensions })=>extensions.category === "spacing");
        tokens.forEach((token)=>{
            const originalPath = token.path.slice();
            const originalVar = formatCssVar(originalPath, prefix);
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isString"])(token.value) && token.value === "0rem") {
                return;
            }
            const nextToken = structuredClone(token);
            Object.assign(nextToken.extensions, {
                negative: true,
                prop: `-${token.extensions.prop}`,
                originalPath
            });
            nextToken.value = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$calc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["calc"].negate(originalVar.ref);
            const lastPath = nextToken.path[nextToken.path.length - 1];
            if (lastPath != null) {
                nextToken.path[nextToken.path.length - 1] = `-${lastPath}`;
            }
            if (nextToken.path) {
                nextToken.name = formatTokenName(nextToken.path);
            }
            registerToken(nextToken);
        });
    }
};
const units = /* @__PURE__ */ new Set([
    "spacing",
    "sizes",
    "borderWidths",
    "fontSizes",
    "radii"
]);
const addPixelUnit = {
    enforce: "post",
    transform (dictionary) {
        const tokens = dictionary.allTokens.filter((token)=>{
            return units.has(token.extensions.category) && !token.extensions.negative;
        });
        tokens.forEach((token)=>{
            Object.assign(token.extensions, {
                pixelValue: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$unit$2d$conversion$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toPx"])(token.value)
            });
        });
    }
};
const addVirtualPalette = {
    enforce: "post",
    transform (dictionary) {
        const { allTokens, registerToken, formatTokenName } = dictionary;
        const tokens = allTokens.filter(({ extensions })=>extensions.category === "colors");
        const keys = /* @__PURE__ */ new Map();
        const colorPalettes = /* @__PURE__ */ new Map();
        tokens.forEach((token)=>{
            const { colorPalette } = token.extensions;
            if (!colorPalette) return;
            colorPalette.keys.forEach((keyPath)=>{
                keys.set(formatTokenName(keyPath), keyPath);
            });
            colorPalette.roots.forEach((colorPaletteRoot)=>{
                const name = formatTokenName(colorPaletteRoot);
                const colorPaletteList = colorPalettes.get(name) || [];
                colorPaletteList.push(token);
                colorPalettes.set(name, colorPaletteList);
                if (token.extensions.default && colorPaletteRoot.length === 1) {
                    const keyPath = colorPalette.keys[0]?.filter(Boolean);
                    if (!keyPath.length) return;
                    const path = colorPaletteRoot.concat(keyPath);
                    keys.set(formatTokenName(path), []);
                }
            });
        });
        keys.forEach((segments)=>{
            const path = [
                "colors",
                "colorPalette",
                ...segments
            ].filter(Boolean);
            const name = formatTokenName(path);
            const prop = formatTokenName(path.slice(1));
            const token = {
                name,
                value: name,
                originalValue: name,
                path,
                extensions: {
                    condition: "base",
                    originalPath: path,
                    category: "colors",
                    prop,
                    virtual: true
                }
            };
            registerToken(token, "pre");
        });
    }
};
const removeEmptyTokens = {
    enforce: "post",
    transform (dictionary) {
        dictionary.allTokens = dictionary.allTokens.filter((token)=>token.value !== "");
    }
};
const tokenMiddlewares = [
    addNegativeTokens,
    addVirtualPalette,
    addPixelUnit,
    removeEmptyTokens
];
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/token-transforms.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "addColorPalette": (()=>addColorPalette),
    "addConditionalCssVariables": (()=>addConditionalCssVariables),
    "addCssVariables": (()=>addCssVariables),
    "tokenTransforms": (()=>tokenTransforms)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$references$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/references.js [app-rsc] (ecmascript)");
"use strict";
;
const addCssVariables = {
    type: "extensions",
    enforce: "pre",
    name: "tokens/css-var",
    transform (token, dictionary) {
        const { prefix, formatCssVar } = dictionary;
        const { negative, originalPath } = token.extensions;
        const path = negative ? originalPath : token.path;
        return {
            cssVar: formatCssVar(path.filter(Boolean), prefix)
        };
    }
};
const addConditionalCssVariables = {
    enforce: "post",
    type: "value",
    name: "tokens/conditionals",
    transform (token, dictionary) {
        const { prefix, formatCssVar } = dictionary;
        const refs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$references$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getReferences"])(token.value);
        if (!refs.length) return token.value;
        refs.forEach((ref)=>{
            const variable = formatCssVar(ref.split("."), prefix);
            token.value = token.value.replace(`{${variable.ref}}`, variable);
        });
        return token.value;
    }
};
const addColorPalette = {
    type: "extensions",
    enforce: "pre",
    name: "tokens/colors/colorPalette",
    match (token) {
        return token.extensions.category === "colors" && !token.extensions.virtual;
    },
    transform (token, dict) {
        let path = token.path.slice();
        path.pop();
        path.shift();
        if (path.length === 0) {
            const newPath = [
                ...token.path
            ];
            newPath.shift();
            path = newPath;
        }
        if (path.length === 0) {
            return {};
        }
        const roots = path.reduce((acc, _, i, arr)=>{
            const next = arr.slice(0, i + 1);
            acc.push(next);
            return acc;
        }, []);
        const root = path[0];
        const value = dict.formatTokenName(path);
        const keys = token.path.slice(token.path.indexOf(root) + 1).reduce((acc, _, i, arr)=>{
            acc.push(arr.slice(i));
            return acc;
        }, []);
        if (keys.length === 0) {
            keys.push([
                ""
            ]);
        }
        return {
            colorPalette: {
                value,
                roots,
                keys
            }
        };
    }
};
const tokenTransforms = [
    addCssVariables,
    addConditionalCssVariables,
    addColorPalette
];
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/token-dictionary.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createTokenDictionary": (()=>createTokenDictionary),
    "tokenCategories": (()=>tokenCategories)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/compact.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$create$2d$props$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/create-props.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/memo.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/walk-object.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$css$2d$var$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/css-var.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$esc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/esc.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$expand$2d$reference$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/expand-reference.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$map$2d$to$2d$json$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/map-to-json.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$references$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/references.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$token$2d$middleware$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/token-middleware.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$token$2d$transforms$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/token-transforms.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
;
;
;
;
;
;
;
;
const isToken = (value)=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isObject"])(value) && Object.prototype.hasOwnProperty.call(value, "value");
};
function expandBreakpoints(breakpoints) {
    if (!breakpoints) return {
        breakpoints: {},
        sizes: {}
    };
    return {
        breakpoints: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["mapObject"])(breakpoints, (value)=>({
                value
            })),
        sizes: Object.fromEntries(Object.entries(breakpoints).map(([key, value])=>[
                `breakpoint-${key}`,
                {
                    value
                }
            ]))
    };
}
function createTokenDictionary(options) {
    const { prefix = "", tokens = {}, semanticTokens = {}, breakpoints = {} } = options;
    const formatTokenName = (path)=>path.join(".");
    const formatCssVar = (path, prefix2)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$css$2d$var$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["cssVar"])(path.join("-"), {
            prefix: prefix2
        });
    const allTokens = [];
    const tokenNameMap = /* @__PURE__ */ new Map();
    const conditionMap = /* @__PURE__ */ new Map();
    const cssVarMap = /* @__PURE__ */ new Map();
    const colorPaletteMap = /* @__PURE__ */ new Map();
    const flatMap = /* @__PURE__ */ new Map();
    const byCategory = /* @__PURE__ */ new Map();
    const categoryMap = /* @__PURE__ */ new Map();
    const transforms = /* @__PURE__ */ new Map();
    const middlewares = [];
    function registerToken(token, phase) {
        allTokens.push(token);
        tokenNameMap.set(token.name, token);
        if (phase) {
            transforms.forEach((fn)=>{
                if (fn.enforce === phase) transformToken(fn, token);
            });
        }
    }
    const breakpointTokens = expandBreakpoints(breakpoints);
    const computedTokens = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["compact"])({
        ...tokens,
        breakpoints: breakpointTokens.breakpoints,
        sizes: {
            ...tokens.sizes,
            ...breakpointTokens.sizes
        }
    });
    function registerTokens() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["walkObject"])(computedTokens, (entry, path)=>{
            const isDefault = path.includes("DEFAULT");
            path = filterDefault(path);
            const category = path[0];
            const name = formatTokenName(path);
            const t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isString"])(entry) ? {
                value: entry
            } : entry;
            const token = {
                value: t.value,
                originalValue: t.value,
                name,
                path,
                extensions: {
                    condition: "base",
                    originalPath: path,
                    category,
                    prop: formatTokenName(path.slice(1))
                }
            };
            if (isDefault) {
                token.extensions.default = true;
            }
            registerToken(token);
        }, {
            stop: isToken
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["walkObject"])(semanticTokens, (entry, path)=>{
            const isDefault = path.includes("DEFAULT");
            path = filterBaseCondition(filterDefault(path));
            const category = path[0];
            const name = formatTokenName(path);
            const t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isString"])(entry.value) ? {
                value: {
                    base: entry.value
                }
            } : entry;
            const token = {
                value: t.value.base || "",
                originalValue: t.value.base || "",
                name,
                path,
                extensions: {
                    originalPath: path,
                    category,
                    conditions: t.value,
                    condition: "base",
                    prop: formatTokenName(path.slice(1))
                }
            };
            if (isDefault) {
                token.extensions.default = true;
            }
            registerToken(token);
        }, {
            stop: isToken
        });
    }
    function getByName(name) {
        return tokenNameMap.get(name);
    }
    function buildConditionMap(token) {
        const { condition } = token.extensions;
        if (!condition) return;
        if (!conditionMap.has(condition)) {
            conditionMap.set(condition, /* @__PURE__ */ new Set());
        }
        conditionMap.get(condition).add(token);
    }
    function buildCategoryMap(token) {
        const { category, prop } = token.extensions;
        if (!category) return;
        if (!categoryMap.has(category)) {
            categoryMap.set(category, /* @__PURE__ */ new Map());
        }
        categoryMap.get(category).set(prop, token);
    }
    function buildCssVars(token) {
        const { condition, negative, virtual, cssVar: cssVar2 } = token.extensions;
        if (negative || virtual || !condition || !cssVar2) return;
        if (!cssVarMap.has(condition)) {
            cssVarMap.set(condition, /* @__PURE__ */ new Map());
        }
        cssVarMap.get(condition).set(cssVar2.var, token.value);
    }
    function buildFlatMap(token) {
        const { category, prop, cssVar: cssVar2, negative } = token.extensions;
        if (!category) return;
        if (!byCategory.has(category)) {
            byCategory.set(category, /* @__PURE__ */ new Map());
        }
        const value = negative ? token.extensions.conditions ? token.originalValue : token.value : cssVar2.ref;
        byCategory.get(category).set(prop, value);
        flatMap.set([
            category,
            prop
        ].join("."), value);
    }
    function buildColorPalette(token) {
        const { colorPalette, virtual, default: isDefault } = token.extensions;
        if (!colorPalette || virtual) return;
        colorPalette.roots.forEach((root)=>{
            const name = formatTokenName(root);
            if (!colorPaletteMap.has(name)) {
                colorPaletteMap.set(name, /* @__PURE__ */ new Map());
            }
            const virtualPath = replaceRootWithColorPalette([
                ...token.path
            ], [
                ...root
            ]);
            const virtualName = formatTokenName(virtualPath);
            const virtualToken = getByName(virtualName);
            if (!virtualToken || !virtualToken.extensions.cssVar) return;
            const { var: virtualVar } = virtualToken.extensions.cssVar;
            colorPaletteMap.get(name).set(virtualVar, token.extensions.cssVar.ref);
            if (isDefault && root.length === 1) {
                const colorPaletteName = formatTokenName([
                    "colors",
                    "colorPalette"
                ]);
                const colorPaletteToken = getByName(colorPaletteName);
                if (!colorPaletteToken) return;
                const name2 = formatTokenName(token.path);
                const virtualToken2 = getByName(name2);
                if (!virtualToken2) return;
                const keyPath = colorPalette.keys[0]?.filter(Boolean);
                if (!keyPath.length) return;
                const computedName = formatTokenName(root.concat(keyPath));
                if (!colorPaletteMap.has(computedName)) {
                    colorPaletteMap.set(computedName, /* @__PURE__ */ new Map());
                }
                colorPaletteMap.get(computedName).set(colorPaletteToken.extensions.cssVar.var, virtualToken2.extensions.cssVar.ref);
            }
        });
    }
    let byCategoryJson = {};
    function setupViews() {
        allTokens.forEach((token)=>{
            buildConditionMap(token);
            buildCategoryMap(token);
            buildCssVars(token);
            buildFlatMap(token);
            buildColorPalette(token);
        });
        byCategoryJson = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$map$2d$to$2d$json$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["mapToJson"])(byCategory);
    }
    const colorMix = (value, tokenFn)=>{
        if (!value || typeof value !== "string") return {
            invalid: true,
            value
        };
        const [colorPath, rawOpacity] = value.split("/");
        if (!colorPath || !rawOpacity) {
            return {
                invalid: true,
                value: colorPath
            };
        }
        const colorToken = tokenFn(colorPath);
        const opacityToken = getByName(`opacity.${rawOpacity}`)?.value;
        if (!opacityToken && isNaN(Number(rawOpacity))) {
            return {
                invalid: true,
                value: colorPath
            };
        }
        const percent = opacityToken ? Number(opacityToken) * 100 + "%" : `${rawOpacity}%`;
        const color = colorToken ?? colorPath;
        return {
            invalid: false,
            color,
            value: `color-mix(in srgb, ${color} ${percent}, transparent)`
        };
    };
    const getVar = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["memo"])((value, fallback)=>{
        return flatMap.get(value) ?? fallback;
    });
    const getCategoryValues = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["memo"])((category)=>{
        return byCategoryJson[category] || null;
    });
    const expandReferenceInValue = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["memo"])((value)=>{
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$expand$2d$reference$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["expandTokenReferences"])(value, (path)=>{
            if (!path) return;
            if (path.includes("/")) {
                const mix = colorMix(path, (v)=>getVar(v));
                if (mix.invalid) {
                    throw new Error("Invalid color mix at " + path + ": " + mix.value);
                }
                return mix.value;
            }
            const resolved = getVar(path);
            if (resolved) return resolved;
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$references$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["TOKEN_PATH_REGEX"].test(path) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$esc$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["esc"])(path) : path;
        });
    });
    const dictionary = {
        prefix,
        allTokens,
        tokenMap: tokenNameMap,
        registerToken,
        getByName,
        formatTokenName,
        formatCssVar,
        flatMap,
        cssVarMap,
        categoryMap,
        colorPaletteMap,
        getVar,
        getCategoryValues,
        expandReferenceInValue
    };
    function registerTransform(...fns) {
        fns.forEach((fn)=>{
            transforms.set(fn.name, fn);
        });
    }
    function registerMiddleware(...fns) {
        middlewares.push(...fns);
    }
    function transformToken(transform, token) {
        if (token.extensions.references) return;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isFunction"])(transform.match) && !transform.match(token)) return;
        const fn = (v)=>transform.transform(v, dictionary);
        const transformed = fn(token);
        switch(true){
            case transform.type === "extensions":
                Object.assign(token.extensions, transformed);
                break;
            case transform.type === "value":
                token.value = transformed;
                break;
            default:
                token[transform.type] = transformed;
                break;
        }
    }
    function applyMiddlewares(enforce) {
        middlewares.forEach((middleware)=>{
            if (middleware.enforce === enforce) {
                middleware.transform(dictionary);
            }
        });
    }
    function applyTransforms(enforce) {
        transforms.forEach((transform)=>{
            if (transform.enforce === enforce) {
                allTokens.forEach((token)=>{
                    transformToken(transform, token);
                });
            }
        });
    }
    function addConditionalTokens() {
        allTokens.forEach((token)=>{
            const tokens2 = getConditionalTokens(token);
            if (!tokens2 || tokens2.length === 0) return;
            tokens2.forEach((token2)=>{
                registerToken(token2);
            });
        });
    }
    function getTokenReferences(value) {
        const refs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$references$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["getReferences"])(value);
        return refs.map((ref)=>getByName(ref)).filter(Boolean);
    }
    function addReferences() {
        allTokens.forEach((token)=>{
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$references$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hasReference"])(token.value)) return;
            const references = getTokenReferences(token.value);
            token.extensions.references = references.reduce((acc, ref)=>{
                acc[ref.name] = ref;
                return acc;
            }, {});
        });
    }
    function expandTokenReferences$1() {
        allTokens.forEach((token)=>{
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$references$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["expandReferences"])(token);
        });
    }
    function build() {
        applyMiddlewares("pre");
        applyTransforms("pre");
        addConditionalTokens();
        addReferences();
        expandTokenReferences$1();
        applyMiddlewares("post");
        applyTransforms("post");
        setupViews();
    }
    registerTokens();
    registerTransform(...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$token$2d$transforms$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["tokenTransforms"]);
    registerMiddleware(...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$token$2d$middleware$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["tokenMiddlewares"]);
    build();
    return dictionary;
}
function filterDefault(path) {
    if (path[0] === "DEFAULT") return path;
    return path.filter((item)=>item !== "DEFAULT");
}
function filterBaseCondition(path) {
    return path.filter((item)=>item !== "base");
}
function getConditionalTokens(token) {
    if (!token.extensions.conditions) return;
    const { conditions } = token.extensions;
    const tokens = [];
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$walk$2d$object$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["walkObject"])(conditions, (value, path)=>{
        const nextPath = filterBaseCondition(path);
        if (!nextPath.length) return;
        const nextToken = structuredClone(token);
        nextToken.value = value;
        nextToken.extensions.condition = nextPath.join(":");
        tokens.push(nextToken);
    });
    return tokens;
}
function replaceRootWithColorPalette(path, roots) {
    const startIndex = path.findIndex((_, index)=>roots.every((rootElement, rootIndex)=>path[index + rootIndex] === rootElement));
    if (startIndex === -1) {
        return path;
    }
    path.splice(startIndex, roots.length);
    path.splice(startIndex, 0, "colorPalette");
    return path;
}
const tokenCategories = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$create$2d$props$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createProps"])()([
    "aspectRatios",
    "zIndex",
    "opacity",
    "colors",
    "fonts",
    "fontSizes",
    "fontWeights",
    "lineHeights",
    "letterSpacings",
    "sizes",
    "shadows",
    "spacing",
    "radii",
    "cursor",
    "borders",
    "borderWidths",
    "borderStyles",
    "durations",
    "easings",
    "animations",
    "blurs",
    "gradients",
    "breakpoints",
    "assets"
]);
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/utility.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createUtility": (()=>createUtility)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/memo.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/color-mix.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$map$2d$to$2d$json$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/map-to-json.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
function normalize(config) {
    return config;
}
function normalizeConfig(config) {
    return Object.fromEntries(Object.entries(config).map(([property, propertyConfig])=>{
        return [
            property,
            normalize(propertyConfig)
        ];
    }));
}
function createUtility(options) {
    const configs = normalizeConfig(options.config);
    const tokens = options.tokens;
    const shorthands = /* @__PURE__ */ new Map();
    const propValues = /* @__PURE__ */ new Map();
    function register(property, config) {
        configs[property] = normalize(config);
        assignProperty(property, config);
    }
    const assignProperty = (property, config)=>{
        const values = getPropertyValues(config);
        if (!values) return;
        propValues.set(property, values);
        assignPropertyType(property, config);
    };
    const assignProperties = ()=>{
        for (const [prop, config] of Object.entries(configs)){
            if (!config) continue;
            assignProperty(prop, config);
        }
    };
    const assignShorthands = ()=>{
        for (const [property, config] of Object.entries(configs)){
            const { shorthand } = config ?? {};
            if (!shorthand) continue;
            const values = Array.isArray(shorthand) ? shorthand : [
                shorthand
            ];
            values.forEach((name)=>shorthands.set(name, property));
        }
    };
    const assignColorPaletteProperty = ()=>{
        const values = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$map$2d$to$2d$json$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["mapToJson"])(tokens.colorPaletteMap);
        register("colorPalette", {
            values: Object.keys(values),
            transform: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["memo"])((value)=>values[value])
        });
    };
    const propTypes = /* @__PURE__ */ new Map();
    const assignPropertyType = (property, config)=>{
        if (!config) return;
        const values = getPropertyValues(config, (key)=>`type:Tokens["${key}"]`);
        if (typeof values === "object" && values.type) {
            propTypes.set(property, /* @__PURE__ */ new Set([
                `type:${values.type}`
            ]));
            return;
        }
        if (values) {
            const keys2 = new Set(Object.keys(values));
            propTypes.set(property, keys2);
        }
        const set = propTypes.get(property) ?? /* @__PURE__ */ new Set();
        if (config.property) {
            propTypes.set(property, set.add(`CssProperties["${config.property}"]`));
        }
    };
    const assignPropertyTypes = ()=>{
        for (const [property, propertyConfig] of Object.entries(configs)){
            if (!propertyConfig) continue;
            assignPropertyType(property, propertyConfig);
        }
    };
    const addPropertyType = (property, type)=>{
        const set = propTypes.get(property) ?? /* @__PURE__ */ new Set();
        propTypes.set(property, /* @__PURE__ */ new Set([
            ...set,
            ...type
        ]));
    };
    const getTypes = ()=>{
        const map = /* @__PURE__ */ new Map();
        for (const [prop, values] of propTypes.entries()){
            if (values.size === 0) {
                map.set(prop, [
                    "string"
                ]);
                continue;
            }
            const typeValues = Array.from(values).map((key)=>{
                if (key.startsWith("CssProperties")) return key;
                if (key.startsWith("type:")) return key.replace("type:", "");
                return JSON.stringify(key);
            });
            map.set(prop, typeValues);
        }
        return map;
    };
    const getPropertyValues = (config, resolveFn)=>{
        const { values } = config;
        const fn = (key)=>{
            const value = resolveFn?.(key);
            return value ? {
                [value]: value
            } : void 0;
        };
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isString"])(values)) {
            return fn?.(values) ?? tokens.getCategoryValues(values) ?? {};
        }
        if (Array.isArray(values)) {
            return values.reduce((result, value)=>{
                result[value] = value;
                return result;
            }, {});
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isFunction"])(values)) {
            return values(resolveFn ? fn : tokens.getCategoryValues);
        }
        return values;
    };
    const defaultTransform = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["memo"])((prop, value)=>{
        return {
            [prop]: prop.startsWith("--") ? tokens.getVar(value, value) : value
        };
    });
    const tokenFn = Object.assign(tokens.getVar, {
        raw: (path)=>tokens.getByName(path)
    });
    const transform = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["memo"])((prop, raw)=>{
        const key = resolveShorthand(prop);
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isString"])(raw) && !raw.includes("_EMO_")) {
            raw = tokens.expandReferenceInValue(raw);
        }
        const config = configs[key];
        if (!config) {
            return defaultTransform(key, raw);
        }
        const value = propValues.get(key)?.[raw];
        if (!config.transform) {
            return defaultTransform(prop, value ?? raw);
        }
        const _colorMix = (value2)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$color$2d$mix$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["colorMix"])(value2, tokenFn);
        return config.transform(value ?? raw, {
            raw,
            token: tokenFn,
            utils: {
                colorMix: _colorMix
            }
        });
    });
    function build() {
        assignShorthands();
        assignColorPaletteProperty();
        assignProperties();
        assignPropertyTypes();
    }
    build();
    const hasShorthand = shorthands.size > 0;
    const resolveShorthand = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["memo"])((prop)=>{
        return shorthands.get(prop) ?? prop;
    });
    const keys = ()=>{
        return [
            ...Array.from(shorthands.keys()),
            ...Object.keys(configs)
        ];
    };
    const instance = {
        keys,
        hasShorthand,
        transform,
        shorthands,
        resolveShorthand,
        register,
        getTypes,
        addPropertyType
    };
    return instance;
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/system.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createSystem": (()=>createSystem),
    "isValidSystem": (()=>isValidSystem)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$pandacss$2f$is$2d$valid$2d$prop$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@pandacss/is-valid-prop/dist/index.mjs [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/compact.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$flatten$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/flatten.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/is.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/memo.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/merge.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/split-props.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$breakpoints$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/breakpoints.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$conditions$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/conditions.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$css$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/css.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$cva$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/cva.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$layers$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/layers.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$normalize$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/normalize.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$preflight$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/preflight.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$serialize$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/serialize.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$sva$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/sva.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$token$2d$dictionary$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/token-dictionary.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$utility$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/utility.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
function createSystem(...configs) {
    const config = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["mergeConfigs"])(...configs);
    const { theme = {}, utilities = {}, globalCss = {}, cssVarsRoot = ":where(:root, :host)", cssVarsPrefix = "chakra", preflight } = config;
    const layers = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$layers$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createLayers"])(config);
    const tokens = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$token$2d$dictionary$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createTokenDictionary"])({
        breakpoints: theme.breakpoints,
        tokens: theme.tokens,
        semanticTokens: theme.semanticTokens,
        prefix: cssVarsPrefix
    });
    const breakpoints = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$breakpoints$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createBreakpoints"])(theme.breakpoints ?? {});
    const conditions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$conditions$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createConditions"])({
        conditions: config.conditions ?? {},
        breakpoints
    });
    const utility = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$utility$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createUtility"])({
        config: utilities,
        tokens
    });
    function assignComposition() {
        const { textStyles, layerStyles, animationStyles } = theme;
        const compositions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$compact$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["compact"])({
            textStyle: textStyles,
            layerStyle: layerStyles,
            animationStyle: animationStyles
        });
        for (const [key, values] of Object.entries(compositions)){
            const flatValues = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$flatten$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["flatten"])(values ?? {}, (v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isObject"])(v) && "value" in v);
            utility.register(key, {
                values: Object.keys(flatValues),
                transform (value) {
                    return css(flatValues[value]);
                }
            });
        }
    }
    assignComposition();
    utility.addPropertyType("animationName", Object.keys(theme.keyframes ?? {}));
    const properties = /* @__PURE__ */ new Set([
        "css",
        ...utility.keys(),
        ...conditions.keys()
    ]);
    const isValidProperty = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$memo$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["memo"])((prop)=>properties.has(prop) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$pandacss$2f$is$2d$valid$2d$prop$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isCssProperty"])(prop));
    const normalizeValue = (value)=>{
        if (Array.isArray(value)) {
            return value.reduce((acc, current, index)=>{
                const key = conditions.breakpoints[index];
                if (current != null) acc[key] = current;
                return acc;
            }, {});
        }
        return value;
    };
    const normalizeFn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$normalize$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createNormalizeFn"])({
        utility,
        normalize: normalizeValue
    });
    const serialize = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$serialize$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createSerializeFn"])({
        conditions,
        isValidProperty
    });
    const css = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$css$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createCssFn"])({
        transform: utility.transform,
        conditions,
        normalize: normalizeFn
    });
    const cva = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$cva$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createRecipeFn"])({
        css,
        conditions,
        normalize: normalizeFn,
        layers
    });
    const sva = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$sva$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createSlotRecipeFn"])({
        cva
    });
    function getTokenCss() {
        const result = {};
        for (const [key, values] of tokens.cssVarMap.entries()){
            const varsObj = Object.fromEntries(values);
            if (Object.keys(varsObj).length === 0) continue;
            const selector = key === "base" ? cssVarsRoot : conditions.resolve(key);
            const cssObject = css(serialize({
                [selector]: varsObj
            }));
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$merge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["mergeWith"])(result, cssObject);
        }
        return layers.wrap("tokens", result);
    }
    function getGlobalCss() {
        const keyframes = Object.fromEntries(Object.entries(theme.keyframes ?? {}).map(([key, value])=>[
                `@keyframes ${key}`,
                value
            ]));
        const result = Object.assign({}, keyframes, css(serialize(globalCss)));
        return layers.wrap("base", result);
    }
    function splitCssProps(props) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$split$2d$props$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["splitProps"])(props, isValidProperty);
    }
    function getPreflightCss() {
        const result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$preflight$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createPreflight"])({
            preflight
        });
        return layers.wrap("reset", result);
    }
    const tokenMap = getTokenMap(tokens);
    const tokenFn = (path, fallback)=>{
        return tokenMap.get(path)?.value || fallback;
    };
    tokenFn.var = (path, fallback)=>{
        return tokenMap.get(path)?.variable || fallback;
    };
    function getRecipe(key, fallback) {
        return theme.recipes?.[key] ?? fallback;
    }
    function getSlotRecipe(key, fallback) {
        return theme.slotRecipes?.[key] ?? fallback;
    }
    function isRecipe(key) {
        return Object.hasOwnProperty.call(theme.recipes ?? {}, key);
    }
    function isSlotRecipe(key) {
        return Object.hasOwnProperty.call(theme.slotRecipes ?? {}, key);
    }
    function hasRecipe(key) {
        return isRecipe(key) || isSlotRecipe(key);
    }
    const _global = [
        getPreflightCss(),
        getGlobalCss(),
        getTokenCss()
    ];
    return {
        $$chakra: true,
        _config: config,
        _global,
        breakpoints,
        tokens,
        conditions,
        utility,
        token: tokenFn,
        properties,
        layers,
        isValidProperty,
        splitCssProps,
        normalizeValue,
        getTokenCss,
        getGlobalCss,
        getPreflightCss,
        css,
        cva,
        sva,
        getRecipe,
        getSlotRecipe,
        hasRecipe,
        isRecipe,
        isSlotRecipe
    };
}
function getTokenMap(tokens) {
    const map = /* @__PURE__ */ new Map();
    tokens.allTokens.forEach((token)=>{
        const { cssVar, virtual, conditions } = token.extensions;
        const value = !!conditions || virtual ? cssVar.ref : token.value;
        map.set(token.name, {
            value,
            variable: cssVar.ref
        });
    });
    return map;
}
const isValidSystem = (mod)=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$is$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["isObject"])(mod) && !!Reflect.get(mod, "$$chakra");
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/breakpoints.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "breakpoints": (()=>breakpoints)
});
"use strict";
const breakpoints = {
    sm: "480px",
    md: "768px",
    lg: "1024px",
    xl: "1280px",
    "2xl": "1536px"
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/global-css.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "globalCss": (()=>globalCss)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const empty = "var(--chakra-empty,/*!*/ /*!*/)";
const globalCss = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineGlobalStyles"])({
    "*": {
        fontFeatureSettings: '"cv11"',
        "--ring-inset": empty,
        "--ring-offset-width": "0px",
        "--ring-offset-color": "#fff",
        "--ring-color": "rgba(66, 153, 225, 0.6)",
        "--ring-offset-shadow": "0 0 #0000",
        "--ring-shadow": "0 0 #0000",
        ...Object.fromEntries([
            "brightness",
            "contrast",
            "grayscale",
            "hue-rotate",
            "invert",
            "saturate",
            "sepia",
            "drop-shadow"
        ].map((prop)=>[
                `--${prop}`,
                empty
            ])),
        ...Object.fromEntries([
            "blur",
            "brightness",
            "contrast",
            "grayscale",
            "hue-rotate",
            "invert",
            "opacity",
            "saturate",
            "sepia"
        ].map((prop)=>[
                `--backdrop-${prop}`,
                empty
            ])),
        "--global-font-mono": "fonts.mono",
        "--global-font-body": "fonts.body",
        "--global-color-border": "colors.border"
    },
    html: {
        color: "fg",
        bg: "bg",
        lineHeight: "1.5",
        colorPalette: "gray"
    },
    "*::placeholder, *[data-placeholder]": {
        color: "fg.muted/80"
    },
    "*::selection": {
        bg: "colorPalette.muted/80"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/layer-styles.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "layerStyles": (()=>layerStyles)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const layerStyles = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineLayerStyles"])({
    // fill: some background color + color combination
    "fill.muted": {
        value: {
            background: "colorPalette.muted",
            color: "colorPalette.fg"
        }
    },
    "fill.subtle": {
        value: {
            background: "colorPalette.subtle",
            color: "colorPalette.fg"
        }
    },
    "fill.surface": {
        value: {
            background: "colorPalette.subtle",
            color: "colorPalette.fg",
            boxShadow: "0 0 0px 1px var(--shadow-color)",
            boxShadowColor: "colorPalette.muted"
        }
    },
    "fill.solid": {
        value: {
            background: "colorPalette.solid",
            color: "colorPalette.contrast"
        }
    },
    // outline: some border color + color combination
    "outline.subtle": {
        value: {
            color: "colorPalette.fg",
            boxShadow: "inset 0 0 0px 1px var(--shadow-color)",
            boxShadowColor: "colorPalette.subtle"
        }
    },
    "outline.solid": {
        value: {
            borderWidth: "1px",
            borderColor: "colorPalette.solid",
            color: "colorPalette.fg"
        }
    },
    // indicator: floating border color or left/bottom border
    "indicator.bottom": {
        value: {
            position: "relative",
            "--indicator-color-fallback": "colors.colorPalette.solid",
            _before: {
                content: `""`,
                position: "absolute",
                bottom: "var(--indicator-offset-y, 0)",
                insetInline: "var(--indicator-offset-x, 0)",
                height: "var(--indicator-thickness, 2px)",
                background: "var(--indicator-color, var(--indicator-color-fallback))"
            }
        }
    },
    "indicator.top": {
        value: {
            position: "relative",
            "--indicator-color-fallback": "colors.colorPalette.solid",
            _before: {
                content: `""`,
                position: "absolute",
                top: "var(--indicator-offset-y, 0)",
                insetInline: "var(--indicator-offset-x, 0)",
                height: "var(--indicator-thickness, 2px)",
                background: "var(--indicator-color, var(--indicator-color-fallback))"
            }
        }
    },
    "indicator.start": {
        value: {
            position: "relative",
            "--indicator-color-fallback": "colors.colorPalette.solid",
            _before: {
                content: `""`,
                position: "absolute",
                insetInlineStart: "var(--indicator-offset-x, 0)",
                insetBlock: "var(--indicator-offset-y, 0)",
                width: "var(--indicator-thickness, 2px)",
                background: "var(--indicator-color, var(--indicator-color-fallback))"
            }
        }
    },
    "indicator.end": {
        value: {
            position: "relative",
            "--indicator-color-fallback": "colors.colorPalette.solid",
            _before: {
                content: `""`,
                position: "absolute",
                insetInlineEnd: "var(--indicator-offset-x, 0)",
                insetBlock: "var(--indicator-offset-y, 0)",
                width: "var(--indicator-thickness, 2px)",
                background: "var(--indicator-color, var(--indicator-color-fallback))"
            }
        }
    },
    disabled: {
        value: {
            opacity: "0.5",
            cursor: "not-allowed"
        }
    },
    none: {
        value: {}
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/motion-styles.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "animationStyles": (()=>animationStyles)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const animationStyles = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineAnimationStyles"])({
    "slide-fade-in": {
        value: {
            transformOrigin: "var(--transform-origin)",
            "&[data-placement^=top]": {
                animationName: "slide-from-bottom, fade-in"
            },
            "&[data-placement^=bottom]": {
                animationName: "slide-from-top, fade-in"
            },
            "&[data-placement^=left]": {
                animationName: "slide-from-right, fade-in"
            },
            "&[data-placement^=right]": {
                animationName: "slide-from-left, fade-in"
            }
        }
    },
    "slide-fade-out": {
        value: {
            transformOrigin: "var(--transform-origin)",
            "&[data-placement^=top]": {
                animationName: "slide-to-bottom, fade-out"
            },
            "&[data-placement^=bottom]": {
                animationName: "slide-to-top, fade-out"
            },
            "&[data-placement^=left]": {
                animationName: "slide-to-right, fade-out"
            },
            "&[data-placement^=right]": {
                animationName: "slide-to-left, fade-out"
            }
        }
    },
    "scale-fade-in": {
        value: {
            transformOrigin: "var(--transform-origin)",
            animationName: "scale-in, fade-in"
        }
    },
    "scale-fade-out": {
        value: {
            transformOrigin: "var(--transform-origin)",
            animationName: "scale-out, fade-out"
        }
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/badge.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "badgeRecipe": (()=>badgeRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const badgeRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-badge",
    base: {
        display: "inline-flex",
        alignItems: "center",
        borderRadius: "l2",
        gap: "1",
        fontWeight: "medium",
        fontVariantNumeric: "tabular-nums",
        whiteSpace: "nowrap",
        userSelect: "none"
    },
    variants: {
        variant: {
            solid: {
                bg: "colorPalette.solid",
                color: "colorPalette.contrast"
            },
            subtle: {
                bg: "colorPalette.subtle",
                color: "colorPalette.fg"
            },
            outline: {
                color: "colorPalette.fg",
                shadow: "inset 0 0 0px 1px var(--shadow-color)",
                shadowColor: "colorPalette.muted"
            },
            surface: {
                bg: "colorPalette.subtle",
                color: "colorPalette.fg",
                shadow: "inset 0 0 0px 1px var(--shadow-color)",
                shadowColor: "colorPalette.muted"
            },
            plain: {
                color: "colorPalette.fg"
            }
        },
        size: {
            xs: {
                textStyle: "2xs",
                px: "1",
                minH: "4"
            },
            sm: {
                textStyle: "xs",
                px: "1.5",
                minH: "5"
            },
            md: {
                textStyle: "sm",
                px: "2",
                minH: "6"
            },
            lg: {
                textStyle: "sm",
                px: "2.5",
                minH: "7"
            }
        }
    },
    defaultVariants: {
        variant: "subtle",
        size: "sm"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/button.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "buttonRecipe": (()=>buttonRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const buttonRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-button",
    base: {
        display: "inline-flex",
        appearance: "none",
        alignItems: "center",
        justifyContent: "center",
        userSelect: "none",
        position: "relative",
        borderRadius: "l2",
        whiteSpace: "nowrap",
        verticalAlign: "middle",
        borderWidth: "1px",
        borderColor: "transparent",
        cursor: "button",
        flexShrink: "0",
        outline: "0",
        lineHeight: "1.2",
        isolation: "isolate",
        fontWeight: "medium",
        transitionProperty: "common",
        transitionDuration: "moderate",
        focusVisibleRing: "outside",
        _disabled: {
            layerStyle: "disabled"
        },
        _icon: {
            flexShrink: "0"
        }
    },
    variants: {
        size: {
            "2xs": {
                h: "6",
                minW: "6",
                textStyle: "xs",
                px: "2",
                gap: "1",
                _icon: {
                    width: "3.5",
                    height: "3.5"
                }
            },
            xs: {
                h: "8",
                minW: "8",
                textStyle: "xs",
                px: "2.5",
                gap: "1",
                _icon: {
                    width: "4",
                    height: "4"
                }
            },
            sm: {
                h: "9",
                minW: "9",
                px: "3.5",
                textStyle: "sm",
                gap: "2",
                _icon: {
                    width: "4",
                    height: "4"
                }
            },
            md: {
                h: "10",
                minW: "10",
                textStyle: "sm",
                px: "4",
                gap: "2",
                _icon: {
                    width: "5",
                    height: "5"
                }
            },
            lg: {
                h: "11",
                minW: "11",
                textStyle: "md",
                px: "5",
                gap: "3",
                _icon: {
                    width: "5",
                    height: "5"
                }
            },
            xl: {
                h: "12",
                minW: "12",
                textStyle: "md",
                px: "5",
                gap: "2.5",
                _icon: {
                    width: "5",
                    height: "5"
                }
            },
            "2xl": {
                h: "16",
                minW: "16",
                textStyle: "lg",
                px: "7",
                gap: "3",
                _icon: {
                    width: "6",
                    height: "6"
                }
            }
        },
        variant: {
            solid: {
                bg: "colorPalette.solid",
                color: "colorPalette.contrast",
                borderColor: "transparent",
                _hover: {
                    bg: "colorPalette.solid/90"
                },
                _expanded: {
                    bg: "colorPalette.solid/90"
                }
            },
            subtle: {
                bg: "colorPalette.subtle",
                color: "colorPalette.fg",
                borderColor: "transparent",
                _hover: {
                    bg: "colorPalette.muted"
                },
                _expanded: {
                    bg: "colorPalette.muted"
                }
            },
            surface: {
                bg: "colorPalette.subtle",
                color: "colorPalette.fg",
                shadow: "0 0 0px 1px var(--shadow-color)",
                shadowColor: "colorPalette.muted",
                _hover: {
                    bg: "colorPalette.muted"
                },
                _expanded: {
                    bg: "colorPalette.muted"
                }
            },
            outline: {
                borderWidth: "1px",
                borderColor: "colorPalette.muted",
                color: "colorPalette.fg",
                _hover: {
                    bg: "colorPalette.subtle"
                },
                _expanded: {
                    bg: "colorPalette.subtle"
                }
            },
            ghost: {
                bg: "transparent",
                color: "colorPalette.fg",
                _hover: {
                    bg: "colorPalette.subtle"
                },
                _expanded: {
                    bg: "colorPalette.subtle"
                }
            },
            plain: {
                color: "colorPalette.fg"
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "solid"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/checkmark.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "checkmarkRecipe": (()=>checkmarkRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const checkmarkRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-checkmark",
    base: {
        display: "inline-flex",
        alignItems: "center",
        justifyContent: "center",
        flexShrink: "0",
        color: "white",
        borderWidth: "1px",
        borderColor: "transparent",
        borderRadius: "l1",
        focusVisibleRing: "outside",
        _icon: {
            boxSize: "full"
        },
        _invalid: {
            colorPalette: "red",
            borderColor: "border.error"
        },
        _disabled: {
            opacity: "0.5"
        }
    },
    variants: {
        size: {
            xs: {
                boxSize: "3"
            },
            sm: {
                boxSize: "4"
            },
            md: {
                boxSize: "5",
                p: "0.5"
            },
            lg: {
                boxSize: "6",
                p: "0.5"
            }
        },
        variant: {
            solid: {
                borderColor: "border",
                "&:is([data-state=checked], [data-state=indeterminate])": {
                    bg: "colorPalette.solid",
                    color: "colorPalette.contrast",
                    borderColor: "colorPalette.solid"
                }
            },
            outline: {
                borderColor: "border",
                "&:is([data-state=checked], [data-state=indeterminate])": {
                    color: "colorPalette.fg",
                    borderColor: "colorPalette.solid"
                }
            },
            subtle: {
                bg: "colorPalette.muted",
                borderColor: "colorPalette.muted",
                "&:is([data-state=checked], [data-state=indeterminate])": {
                    color: "colorPalette.fg"
                }
            },
            plain: {
                "&:is([data-state=checked], [data-state=indeterminate])": {
                    color: "colorPalette.fg"
                }
            },
            inverted: {
                borderColor: "border",
                color: "colorPalette.fg",
                "&:is([data-state=checked], [data-state=indeterminate])": {
                    borderColor: "colorPalette.solid"
                }
            }
        }
    },
    defaultVariants: {
        variant: "solid",
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/code.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "codeRecipe": (()=>codeRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$badge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/badge.js [app-rsc] (ecmascript)");
"use strict";
;
;
const { variants, defaultVariants } = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$badge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["badgeRecipe"];
const codeRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-code",
    base: {
        fontFamily: "mono",
        alignItems: "center",
        display: "inline-flex",
        borderRadius: "l2"
    },
    variants,
    defaultVariants
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/color-swatch.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "colorSwatchRecipe": (()=>colorSwatchRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const colorSwatchRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "color-swatch",
    base: {
        boxSize: "var(--swatch-size)",
        shadow: "inset 0 0 0 1px rgba(0, 0, 0, 0.1)",
        "--checker-size": "8px",
        "--checker-bg": "colors.bg",
        "--checker-fg": "colors.bg.emphasized",
        background: "linear-gradient(var(--color), var(--color)), repeating-conic-gradient(var(--checker-fg) 0%, var(--checker-fg) 25%, var(--checker-bg) 0%, var(--checker-bg) 50%) 0% 50% / var(--checker-size) var(--checker-size) !important",
        display: "inline-flex",
        alignItems: "center",
        justifyContent: "center",
        flexShrink: "0"
    },
    variants: {
        size: {
            "2xs": {
                "--swatch-size": "sizes.3.5"
            },
            xs: {
                "--swatch-size": "sizes.4"
            },
            sm: {
                "--swatch-size": "sizes.4.5"
            },
            md: {
                "--swatch-size": "sizes.5"
            },
            lg: {
                "--swatch-size": "sizes.6"
            },
            xl: {
                "--swatch-size": "sizes.7"
            },
            "2xl": {
                "--swatch-size": "sizes.8"
            },
            inherit: {
                "--swatch-size": "inherit"
            },
            full: {
                "--swatch-size": "100%"
            }
        },
        shape: {
            square: {
                borderRadius: "none"
            },
            circle: {
                borderRadius: "full"
            },
            rounded: {
                borderRadius: "l1"
            }
        }
    },
    defaultVariants: {
        size: "md",
        shape: "rounded"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/container.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "containerRecipe": (()=>containerRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const containerRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-container",
    base: {
        position: "relative",
        maxWidth: "8xl",
        w: "100%",
        mx: "auto",
        px: {
            base: "4",
            md: "6",
            lg: "8"
        }
    },
    variants: {
        centerContent: {
            true: {
                display: "flex",
                flexDirection: "column",
                alignItems: "center"
            }
        },
        fluid: {
            true: {
                maxWidth: "full"
            }
        }
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/heading.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "headingRecipe": (()=>headingRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const headingRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-heading",
    base: {
        fontFamily: "heading",
        fontWeight: "semibold"
    },
    variants: {
        size: {
            xs: {
                textStyle: "xs"
            },
            sm: {
                textStyle: "sm"
            },
            md: {
                textStyle: "md"
            },
            lg: {
                textStyle: "lg"
            },
            xl: {
                textStyle: "xl"
            },
            "2xl": {
                textStyle: "2xl"
            },
            "3xl": {
                textStyle: "3xl"
            },
            "4xl": {
                textStyle: "4xl"
            },
            "5xl": {
                textStyle: "5xl"
            },
            "6xl": {
                textStyle: "6xl"
            },
            "7xl": {
                textStyle: "7xl"
            }
        }
    },
    defaultVariants: {
        size: "xl"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/icon.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "iconRecipe": (()=>iconRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const iconRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-icon",
    base: {
        display: "inline-block",
        lineHeight: "1em",
        flexShrink: "0",
        color: "currentcolor",
        verticalAlign: "middle"
    },
    variants: {
        size: {
            inherit: {},
            xs: {
                boxSize: "3"
            },
            sm: {
                boxSize: "4"
            },
            md: {
                boxSize: "5"
            },
            lg: {
                boxSize: "6"
            },
            xl: {
                boxSize: "7"
            },
            "2xl": {
                boxSize: "8"
            }
        }
    },
    defaultVariants: {
        size: "inherit"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/input.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "inputRecipe": (()=>inputRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const inputRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-input",
    base: {
        width: "100%",
        minWidth: "0",
        outline: "0",
        position: "relative",
        appearance: "none",
        textAlign: "start",
        borderRadius: "l2",
        _disabled: {
            layerStyle: "disabled"
        },
        height: "var(--input-height)",
        minW: "var(--input-height)",
        "--focus-color": "colors.colorPalette.focusRing",
        "--error-color": "colors.border.error",
        _invalid: {
            focusRingColor: "var(--error-color)",
            borderColor: "var(--error-color)"
        }
    },
    variants: {
        size: {
            "2xs": {
                textStyle: "xs",
                px: "2",
                "--input-height": "sizes.7"
            },
            xs: {
                textStyle: "xs",
                px: "2",
                "--input-height": "sizes.8"
            },
            sm: {
                textStyle: "sm",
                px: "2.5",
                "--input-height": "sizes.9"
            },
            md: {
                textStyle: "sm",
                px: "3",
                "--input-height": "sizes.10"
            },
            lg: {
                textStyle: "md",
                px: "4",
                "--input-height": "sizes.11"
            },
            xl: {
                textStyle: "md",
                px: "4.5",
                "--input-height": "sizes.12"
            },
            "2xl": {
                textStyle: "lg",
                px: "5",
                "--input-height": "sizes.16"
            }
        },
        variant: {
            outline: {
                bg: "transparent",
                borderWidth: "1px",
                borderColor: "border",
                focusVisibleRing: "inside",
                focusRingColor: "var(--focus-color)"
            },
            subtle: {
                borderWidth: "1px",
                borderColor: "transparent",
                bg: "bg.muted",
                focusVisibleRing: "inside",
                focusRingColor: "var(--focus-color)"
            },
            flushed: {
                bg: "transparent",
                borderBottomWidth: "1px",
                borderBottomColor: "border",
                borderRadius: "0",
                px: "0",
                _focusVisible: {
                    borderColor: "var(--focus-color)",
                    boxShadow: "0px 1px 0px 0px var(--focus-color)"
                }
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "outline"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/input-addon.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "inputAddonRecipe": (()=>inputAddonRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/input.js [app-rsc] (ecmascript)");
"use strict";
;
;
const inputAddonRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-input-addon",
    base: {
        flex: "0 0 auto",
        width: "auto",
        display: "flex",
        alignItems: "center",
        whiteSpace: "nowrap",
        alignSelf: "stretch",
        borderRadius: "l2"
    },
    variants: {
        size: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].variants.size,
        variant: {
            outline: {
                borderWidth: "1px",
                borderColor: "border",
                bg: "bg.muted"
            },
            subtle: {
                borderWidth: "1px",
                borderColor: "transparent",
                bg: "bg.emphasized"
            },
            flushed: {
                borderBottom: "1px solid",
                borderColor: "inherit",
                borderRadius: "0",
                px: "0",
                bg: "transparent"
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "outline"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/kbd.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "kbdRecipe": (()=>kbdRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const kbdRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-kbd",
    base: {
        display: "inline-flex",
        alignItems: "center",
        fontWeight: "medium",
        fontFamily: "mono",
        flexShrink: "0",
        whiteSpace: "nowrap",
        wordSpacing: "-0.5em",
        userSelect: "none",
        px: "1",
        borderRadius: "l2"
    },
    variants: {
        variant: {
            raised: {
                bg: "colorPalette.subtle",
                color: "colorPalette.fg",
                borderWidth: "1px",
                borderBottomWidth: "2px",
                borderColor: "colorPalette.muted"
            },
            outline: {
                borderWidth: "1px",
                color: "colorPalette.fg"
            },
            subtle: {
                bg: "colorPalette.muted",
                color: "colorPalette.fg"
            },
            plain: {
                color: "colorPalette.fg"
            }
        },
        size: {
            sm: {
                textStyle: "xs",
                height: "4.5"
            },
            md: {
                textStyle: "sm",
                height: "5"
            },
            lg: {
                textStyle: "md",
                height: "6"
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "raised"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/link.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "linkRecipe": (()=>linkRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const linkRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-link",
    base: {
        display: "inline-flex",
        alignItems: "center",
        outline: "none",
        gap: "1.5",
        cursor: "pointer",
        borderRadius: "l1",
        focusRing: "outside"
    },
    variants: {
        variant: {
            underline: {
                color: "colorPalette.fg",
                textDecoration: "underline",
                textUnderlineOffset: "3px",
                textDecorationColor: "currentColor/20"
            },
            plain: {
                color: "colorPalette.fg",
                _hover: {
                    textDecoration: "underline",
                    textUnderlineOffset: "3px",
                    textDecorationColor: "currentColor/20"
                }
            }
        }
    },
    defaultVariants: {
        variant: "plain"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/mark.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "markRecipe": (()=>markRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const markRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-mark",
    base: {
        bg: "transparent",
        color: "inherit",
        whiteSpace: "nowrap"
    },
    variants: {
        variant: {
            subtle: {
                bg: "colorPalette.subtle",
                color: "inherit"
            },
            solid: {
                bg: "colorPalette.solid",
                color: "colorPalette.contrast"
            },
            text: {
                fontWeight: "medium"
            },
            plain: {}
        }
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/radiomark.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "radiomarkRecipe": (()=>radiomarkRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const radiomarkRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-radiomark",
    base: {
        display: "inline-flex",
        alignItems: "center",
        justifyContent: "center",
        flexShrink: 0,
        verticalAlign: "top",
        color: "white",
        borderWidth: "1px",
        borderColor: "transparent",
        borderRadius: "full",
        cursor: "radio",
        _focusVisible: {
            outline: "2px solid",
            outlineColor: "colorPalette.focusRing",
            outlineOffset: "2px"
        },
        _invalid: {
            colorPalette: "red",
            borderColor: "red.500"
        },
        _disabled: {
            opacity: "0.5",
            cursor: "disabled"
        },
        "& .dot": {
            height: "100%",
            width: "100%",
            borderRadius: "full",
            bg: "currentColor",
            scale: "0.4"
        }
    },
    variants: {
        variant: {
            solid: {
                borderWidth: "1px",
                borderColor: "border",
                _checked: {
                    bg: "colorPalette.solid",
                    color: "colorPalette.contrast",
                    borderColor: "colorPalette.solid"
                }
            },
            subtle: {
                borderWidth: "1px",
                bg: "colorPalette.muted",
                borderColor: "colorPalette.muted",
                color: "transparent",
                _checked: {
                    color: "colorPalette.fg"
                }
            },
            outline: {
                borderWidth: "1px",
                borderColor: "inherit",
                _checked: {
                    color: "colorPalette.fg",
                    borderColor: "colorPalette.solid"
                },
                "& .dot": {
                    scale: "0.6"
                }
            },
            inverted: {
                bg: "bg",
                borderWidth: "1px",
                borderColor: "inherit",
                _checked: {
                    color: "colorPalette.solid",
                    borderColor: "currentcolor"
                }
            }
        },
        size: {
            xs: {
                boxSize: "3"
            },
            sm: {
                boxSize: "4"
            },
            md: {
                boxSize: "5"
            },
            lg: {
                boxSize: "6"
            }
        }
    },
    defaultVariants: {
        variant: "solid",
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/separator.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "separatorRecipe": (()=>separatorRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const separatorRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-separator",
    base: {
        display: "block",
        borderColor: "border"
    },
    variants: {
        variant: {
            solid: {
                borderStyle: "solid"
            },
            dashed: {
                borderStyle: "dashed"
            },
            dotted: {
                borderStyle: "dotted"
            }
        },
        orientation: {
            vertical: {
                borderInlineStartWidth: "var(--separator-thickness)"
            },
            horizontal: {
                borderTopWidth: "var(--separator-thickness)"
            }
        },
        size: {
            xs: {
                "--separator-thickness": "0.5px"
            },
            sm: {
                "--separator-thickness": "1px"
            },
            md: {
                "--separator-thickness": "2px"
            },
            lg: {
                "--separator-thickness": "3px"
            }
        }
    },
    defaultVariants: {
        size: "sm",
        variant: "solid",
        orientation: "horizontal"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/skeleton.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "skeletonRecipe": (()=>skeletonRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const skeletonRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-skeleton",
    base: {},
    variants: {
        loading: {
            true: {
                borderRadius: "l2",
                boxShadow: "none",
                backgroundClip: "padding-box",
                cursor: "default",
                color: "transparent",
                pointerEvents: "none",
                userSelect: "none",
                flexShrink: "0",
                "&::before, &::after, *": {
                    visibility: "hidden"
                }
            },
            false: {
                background: "unset",
                animation: "fade-in var(--fade-duration, 0.1s) ease-out !important"
            }
        },
        variant: {
            pulse: {
                background: "bg.emphasized",
                animation: "pulse",
                animationDuration: "var(--duration, 1.2s)"
            },
            shine: {
                "--animate-from": "200%",
                "--animate-to": "-200%",
                "--start-color": "colors.bg.muted",
                "--end-color": "colors.bg.emphasized",
                backgroundImage: "linear-gradient(270deg,var(--start-color),var(--end-color),var(--end-color),var(--start-color))",
                backgroundSize: "400% 100%",
                animation: "bg-position var(--duration, 5s) ease-in-out infinite"
            },
            none: {
                animation: "none"
            }
        }
    },
    defaultVariants: {
        variant: "pulse",
        loading: true
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/skip-nav-link.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "skipNavLinkRecipe": (()=>skipNavLinkRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const skipNavLinkRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-skip-nav",
    base: {
        display: "inline-flex",
        bg: "bg.panel",
        padding: "2.5",
        borderRadius: "l2",
        fontWeight: "semibold",
        focusVisibleRing: "outside",
        textStyle: "sm",
        // visually hidden
        userSelect: "none",
        border: "0",
        height: "1px",
        width: "1px",
        margin: "-1px",
        outline: "0",
        overflow: "hidden",
        position: "absolute",
        clip: "rect(0 0 0 0)",
        _focusVisible: {
            clip: "auto",
            width: "auto",
            height: "auto",
            position: "fixed",
            top: "6",
            insetStart: "6"
        }
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/spinner.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "spinnerRecipe": (()=>spinnerRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const spinnerRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-spinner",
    base: {
        display: "inline-block",
        borderColor: "currentColor",
        borderStyle: "solid",
        borderWidth: "2px",
        borderRadius: "full",
        width: "var(--spinner-size)",
        height: "var(--spinner-size)",
        animation: "spin",
        animationDuration: "slowest",
        "--spinner-track-color": "transparent",
        borderBottomColor: "var(--spinner-track-color)",
        borderInlineStartColor: "var(--spinner-track-color)"
    },
    variants: {
        size: {
            inherit: {
                "--spinner-size": "1em"
            },
            xs: {
                "--spinner-size": "sizes.3"
            },
            sm: {
                "--spinner-size": "sizes.4"
            },
            md: {
                "--spinner-size": "sizes.5"
            },
            lg: {
                "--spinner-size": "sizes.8"
            },
            xl: {
                "--spinner-size": "sizes.10"
            }
        }
    },
    defaultVariants: {
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/textarea.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "textareaRecipe": (()=>textareaRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const textareaRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineRecipe"])({
    className: "chakra-textarea",
    base: {
        width: "100%",
        minWidth: "0",
        outline: "0",
        position: "relative",
        appearance: "none",
        textAlign: "start",
        borderRadius: "l2",
        _disabled: {
            layerStyle: "disabled"
        },
        "--focus-color": "colors.colorPalette.focusRing",
        "--error-color": "colors.border.error",
        _invalid: {
            focusRingColor: "var(--error-color)",
            borderColor: "var(--error-color)"
        }
    },
    variants: {
        size: {
            xs: {
                textStyle: "xs",
                px: "2",
                py: "1.5",
                scrollPaddingBottom: "1.5"
            },
            sm: {
                textStyle: "sm",
                px: "2.5",
                py: "2",
                scrollPaddingBottom: "2"
            },
            md: {
                textStyle: "sm",
                px: "3",
                py: "2",
                scrollPaddingBottom: "2"
            },
            lg: {
                textStyle: "md",
                px: "4",
                py: "3",
                scrollPaddingBottom: "3"
            },
            xl: {
                textStyle: "md",
                px: "4.5",
                py: "3.5",
                scrollPaddingBottom: "3.5"
            }
        },
        variant: {
            outline: {
                bg: "transparent",
                borderWidth: "1px",
                borderColor: "border",
                focusVisibleRing: "inside"
            },
            subtle: {
                borderWidth: "1px",
                borderColor: "transparent",
                bg: "bg.muted",
                focusVisibleRing: "inside"
            },
            flushed: {
                bg: "transparent",
                borderBottomWidth: "1px",
                borderBottomColor: "border",
                borderRadius: "0",
                px: "0",
                _focusVisible: {
                    borderColor: "var(--focus-color)",
                    boxShadow: "0px 1px 0px 0px var(--focus-color)"
                }
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "outline"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "recipes": (()=>recipes)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$badge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/badge.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$button$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/button.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/checkmark.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$code$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/code.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$color$2d$swatch$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/color-swatch.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$container$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/container.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$heading$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/heading.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$icon$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/icon.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/input.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2d$addon$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/input-addon.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$kbd$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/kbd.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$link$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/link.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$mark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/mark.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/radiomark.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$separator$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/separator.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$skeleton$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/skeleton.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$skip$2d$nav$2d$link$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/skip-nav-link.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$spinner$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/spinner.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$textarea$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/textarea.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const recipes = {
    badge: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$badge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["badgeRecipe"],
    button: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$button$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["buttonRecipe"],
    code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$code$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["codeRecipe"],
    container: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$container$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["containerRecipe"],
    heading: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$heading$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["headingRecipe"],
    input: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"],
    inputAddon: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2d$addon$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputAddonRecipe"],
    kbd: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$kbd$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["kbdRecipe"],
    link: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$link$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["linkRecipe"],
    mark: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$mark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["markRecipe"],
    separator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$separator$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["separatorRecipe"],
    skeleton: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$skeleton$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["skeletonRecipe"],
    skipNavLink: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$skip$2d$nav$2d$link$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["skipNavLinkRecipe"],
    spinner: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$spinner$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["spinnerRecipe"],
    textarea: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$textarea$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["textareaRecipe"],
    icon: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$icon$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["iconRecipe"],
    checkmark: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"],
    radiomark: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"],
    colorSwatch: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$color$2d$swatch$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["colorSwatchRecipe"]
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/semantic-tokens/colors.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "semanticColors": (()=>semanticColors)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const semanticColors = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSemanticTokens"].colors({
    bg: {
        DEFAULT: {
            value: {
                _light: "{colors.white}",
                _dark: "{colors.black}"
            }
        },
        subtle: {
            value: {
                _light: "{colors.gray.50}",
                _dark: "{colors.gray.950}"
            }
        },
        muted: {
            value: {
                _light: "{colors.gray.100}",
                _dark: "{colors.gray.900}"
            }
        },
        emphasized: {
            value: {
                _light: "{colors.gray.200}",
                _dark: "{colors.gray.800}"
            }
        },
        inverted: {
            value: {
                _light: "{colors.black}",
                _dark: "{colors.white}"
            }
        },
        panel: {
            value: {
                _light: "{colors.white}",
                _dark: "{colors.gray.950}"
            }
        },
        error: {
            value: {
                _light: "{colors.red.50}",
                _dark: "{colors.red.950}"
            }
        },
        warning: {
            value: {
                _light: "{colors.orange.50}",
                _dark: "{colors.orange.950}"
            }
        },
        success: {
            value: {
                _light: "{colors.green.50}",
                _dark: "{colors.green.950}"
            }
        },
        info: {
            value: {
                _light: "{colors.blue.50}",
                _dark: "{colors.blue.950}"
            }
        }
    },
    fg: {
        DEFAULT: {
            value: {
                _light: "{colors.black}",
                _dark: "{colors.gray.50}"
            }
        },
        muted: {
            value: {
                _light: "{colors.gray.600}",
                _dark: "{colors.gray.400}"
            }
        },
        subtle: {
            value: {
                _light: "{colors.gray.400}",
                _dark: "{colors.gray.500}"
            }
        },
        inverted: {
            value: {
                _light: "{colors.gray.50}",
                _dark: "{colors.black}"
            }
        },
        error: {
            value: {
                _light: "{colors.red.500}",
                _dark: "{colors.red.400}"
            }
        },
        warning: {
            value: {
                _light: "{colors.orange.600}",
                _dark: "{colors.orange.300}"
            }
        },
        success: {
            value: {
                _light: "{colors.green.600}",
                _dark: "{colors.green.300}"
            }
        },
        info: {
            value: {
                _light: "{colors.blue.600}",
                _dark: "{colors.blue.300}"
            }
        }
    },
    border: {
        DEFAULT: {
            value: {
                _light: "{colors.gray.200}",
                _dark: "{colors.gray.800}"
            }
        },
        muted: {
            value: {
                _light: "{colors.gray.100}",
                _dark: "{colors.gray.900}"
            }
        },
        subtle: {
            value: {
                _light: "{colors.gray.50}",
                _dark: "{colors.gray.950}"
            }
        },
        emphasized: {
            value: {
                _light: "{colors.gray.300}",
                _dark: "{colors.gray.700}"
            }
        },
        inverted: {
            value: {
                _light: "{colors.gray.800}",
                _dark: "{colors.gray.200}"
            }
        },
        error: {
            value: {
                _light: "{colors.red.500}",
                _dark: "{colors.red.400}"
            }
        },
        warning: {
            value: {
                _light: "{colors.orange.500}",
                _dark: "{colors.orange.400}"
            }
        },
        success: {
            value: {
                _light: "{colors.green.500}",
                _dark: "{colors.green.400}"
            }
        },
        info: {
            value: {
                _light: "{colors.blue.500}",
                _dark: "{colors.blue.400}"
            }
        }
    },
    gray: {
        contrast: {
            value: {
                _light: "{colors.white}",
                _dark: "{colors.black}"
            }
        },
        fg: {
            value: {
                _light: "{colors.gray.800}",
                _dark: "{colors.gray.200}"
            }
        },
        subtle: {
            value: {
                _light: "{colors.gray.100}",
                _dark: "{colors.gray.900}"
            }
        },
        muted: {
            value: {
                _light: "{colors.gray.200}",
                _dark: "{colors.gray.800}"
            }
        },
        emphasized: {
            value: {
                _light: "{colors.gray.300}",
                _dark: "{colors.gray.700}"
            }
        },
        solid: {
            value: {
                _light: "{colors.gray.900}",
                _dark: "{colors.white}"
            }
        },
        focusRing: {
            value: {
                _light: "{colors.gray.800}",
                _dark: "{colors.gray.200}"
            }
        }
    },
    red: {
        contrast: {
            value: {
                _light: "white",
                _dark: "white"
            }
        },
        fg: {
            value: {
                _light: "{colors.red.700}",
                _dark: "{colors.red.300}"
            }
        },
        subtle: {
            value: {
                _light: "{colors.red.100}",
                _dark: "{colors.red.900}"
            }
        },
        muted: {
            value: {
                _light: "{colors.red.200}",
                _dark: "{colors.red.800}"
            }
        },
        emphasized: {
            value: {
                _light: "{colors.red.300}",
                _dark: "{colors.red.700}"
            }
        },
        solid: {
            value: {
                _light: "{colors.red.600}",
                _dark: "{colors.red.600}"
            }
        },
        focusRing: {
            value: {
                _light: "{colors.red.600}",
                _dark: "{colors.red.600}"
            }
        }
    },
    orange: {
        contrast: {
            value: {
                _light: "white",
                _dark: "black"
            }
        },
        fg: {
            value: {
                _light: "{colors.orange.700}",
                _dark: "{colors.orange.300}"
            }
        },
        subtle: {
            value: {
                _light: "{colors.orange.100}",
                _dark: "{colors.orange.900}"
            }
        },
        muted: {
            value: {
                _light: "{colors.orange.200}",
                _dark: "{colors.orange.800}"
            }
        },
        emphasized: {
            value: {
                _light: "{colors.orange.300}",
                _dark: "{colors.orange.700}"
            }
        },
        solid: {
            value: {
                _light: "{colors.orange.600}",
                _dark: "{colors.orange.500}"
            }
        },
        focusRing: {
            value: {
                _light: "{colors.orange.600}",
                _dark: "{colors.orange.500}"
            }
        }
    },
    green: {
        contrast: {
            value: {
                _light: "white",
                _dark: "white"
            }
        },
        fg: {
            value: {
                _light: "{colors.green.700}",
                _dark: "{colors.green.300}"
            }
        },
        subtle: {
            value: {
                _light: "{colors.green.100}",
                _dark: "{colors.green.900}"
            }
        },
        muted: {
            value: {
                _light: "{colors.green.200}",
                _dark: "{colors.green.800}"
            }
        },
        emphasized: {
            value: {
                _light: "{colors.green.300}",
                _dark: "{colors.green.700}"
            }
        },
        solid: {
            value: {
                _light: "{colors.green.600}",
                _dark: "{colors.green.600}"
            }
        },
        focusRing: {
            value: {
                _light: "{colors.green.600}",
                _dark: "{colors.green.600}"
            }
        }
    },
    blue: {
        contrast: {
            value: {
                _light: "white",
                _dark: "white"
            }
        },
        fg: {
            value: {
                _light: "{colors.blue.700}",
                _dark: "{colors.blue.300}"
            }
        },
        subtle: {
            value: {
                _light: "{colors.blue.100}",
                _dark: "{colors.blue.900}"
            }
        },
        muted: {
            value: {
                _light: "{colors.blue.200}",
                _dark: "{colors.blue.800}"
            }
        },
        emphasized: {
            value: {
                _light: "{colors.blue.300}",
                _dark: "{colors.blue.700}"
            }
        },
        solid: {
            value: {
                _light: "{colors.blue.600}",
                _dark: "{colors.blue.600}"
            }
        },
        focusRing: {
            value: {
                _light: "{colors.blue.600}",
                _dark: "{colors.blue.600}"
            }
        }
    },
    yellow: {
        contrast: {
            value: {
                _light: "black",
                _dark: "black"
            }
        },
        fg: {
            value: {
                _light: "{colors.yellow.800}",
                _dark: "{colors.yellow.300}"
            }
        },
        subtle: {
            value: {
                _light: "{colors.yellow.100}",
                _dark: "{colors.yellow.900}"
            }
        },
        muted: {
            value: {
                _light: "{colors.yellow.200}",
                _dark: "{colors.yellow.800}"
            }
        },
        emphasized: {
            value: {
                _light: "{colors.yellow.300}",
                _dark: "{colors.yellow.700}"
            }
        },
        solid: {
            value: {
                _light: "{colors.yellow.300}",
                _dark: "{colors.yellow.300}"
            }
        },
        focusRing: {
            value: {
                _light: "{colors.yellow.300}",
                _dark: "{colors.yellow.300}"
            }
        }
    },
    teal: {
        contrast: {
            value: {
                _light: "white",
                _dark: "white"
            }
        },
        fg: {
            value: {
                _light: "{colors.teal.700}",
                _dark: "{colors.teal.300}"
            }
        },
        subtle: {
            value: {
                _light: "{colors.teal.100}",
                _dark: "{colors.teal.900}"
            }
        },
        muted: {
            value: {
                _light: "{colors.teal.200}",
                _dark: "{colors.teal.800}"
            }
        },
        emphasized: {
            value: {
                _light: "{colors.teal.300}",
                _dark: "{colors.teal.700}"
            }
        },
        solid: {
            value: {
                _light: "{colors.teal.600}",
                _dark: "{colors.teal.600}"
            }
        },
        focusRing: {
            value: {
                _light: "{colors.teal.600}",
                _dark: "{colors.teal.600}"
            }
        }
    },
    purple: {
        contrast: {
            value: {
                _light: "white",
                _dark: "white"
            }
        },
        fg: {
            value: {
                _light: "{colors.purple.700}",
                _dark: "{colors.purple.300}"
            }
        },
        subtle: {
            value: {
                _light: "{colors.purple.100}",
                _dark: "{colors.purple.900}"
            }
        },
        muted: {
            value: {
                _light: "{colors.purple.200}",
                _dark: "{colors.purple.800}"
            }
        },
        emphasized: {
            value: {
                _light: "{colors.purple.300}",
                _dark: "{colors.purple.700}"
            }
        },
        solid: {
            value: {
                _light: "{colors.purple.600}",
                _dark: "{colors.purple.600}"
            }
        },
        focusRing: {
            value: {
                _light: "{colors.purple.600}",
                _dark: "{colors.purple.600}"
            }
        }
    },
    pink: {
        contrast: {
            value: {
                _light: "white",
                _dark: "white"
            }
        },
        fg: {
            value: {
                _light: "{colors.pink.700}",
                _dark: "{colors.pink.300}"
            }
        },
        subtle: {
            value: {
                _light: "{colors.pink.100}",
                _dark: "{colors.pink.900}"
            }
        },
        muted: {
            value: {
                _light: "{colors.pink.200}",
                _dark: "{colors.pink.800}"
            }
        },
        emphasized: {
            value: {
                _light: "{colors.pink.300}",
                _dark: "{colors.pink.700}"
            }
        },
        solid: {
            value: {
                _light: "{colors.pink.600}",
                _dark: "{colors.pink.600}"
            }
        },
        focusRing: {
            value: {
                _light: "{colors.pink.600}",
                _dark: "{colors.pink.600}"
            }
        }
    },
    cyan: {
        contrast: {
            value: {
                _light: "white",
                _dark: "white"
            }
        },
        fg: {
            value: {
                _light: "{colors.cyan.700}",
                _dark: "{colors.cyan.300}"
            }
        },
        subtle: {
            value: {
                _light: "{colors.cyan.100}",
                _dark: "{colors.cyan.900}"
            }
        },
        muted: {
            value: {
                _light: "{colors.cyan.200}",
                _dark: "{colors.cyan.800}"
            }
        },
        emphasized: {
            value: {
                _light: "{colors.cyan.300}",
                _dark: "{colors.cyan.700}"
            }
        },
        solid: {
            value: {
                _light: "{colors.cyan.600}",
                _dark: "{colors.cyan.600}"
            }
        },
        focusRing: {
            value: {
                _light: "{colors.cyan.600}",
                _dark: "{colors.cyan.600}"
            }
        }
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/semantic-tokens/radii.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "semanticRadii": (()=>semanticRadii)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const semanticRadii = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSemanticTokens"].radii({
    l1: {
        value: "{radii.xs}"
    },
    l2: {
        value: "{radii.sm}"
    },
    l3: {
        value: "{radii.md}"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/semantic-tokens/shadows.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "semanticShadows": (()=>semanticShadows)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const semanticShadows = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSemanticTokens"].shadows({
    xs: {
        value: {
            _light: "0px 1px 2px {colors.gray.900/10}, 0px 0px 1px {colors.gray.900/20}",
            _dark: "0px 1px 1px {black/64}, 0px 0px 1px inset {colors.gray.300/20}"
        }
    },
    sm: {
        value: {
            _light: "0px 2px 4px {colors.gray.900/10}, 0px 0px 1px {colors.gray.900/30}",
            _dark: "0px 2px 4px {black/64}, 0px 0px 1px inset {colors.gray.300/30}"
        }
    },
    md: {
        value: {
            _light: "0px 4px 8px {colors.gray.900/10}, 0px 0px 1px {colors.gray.900/30}",
            _dark: "0px 4px 8px {black/64}, 0px 0px 1px inset {colors.gray.300/30}"
        }
    },
    lg: {
        value: {
            _light: "0px 8px 16px {colors.gray.900/10}, 0px 0px 1px {colors.gray.900/30}",
            _dark: "0px 8px 16px {black/64}, 0px 0px 1px inset {colors.gray.300/30}"
        }
    },
    xl: {
        value: {
            _light: "0px 16px 24px {colors.gray.900/10}, 0px 0px 1px {colors.gray.900/30}",
            _dark: "0px 16px 24px {black/64}, 0px 0px 1px inset {colors.gray.300/30}"
        }
    },
    "2xl": {
        value: {
            _light: "0px 24px 40px {colors.gray.900/16}, 0px 0px 1px {colors.gray.900/30}",
            _dark: "0px 24px 40px {black/64}, 0px 0px 1px inset {colors.gray.300/30}"
        }
    },
    inner: {
        value: {
            _light: "inset 0 2px 4px 0 {black/5}",
            _dark: "inset 0 2px 4px 0 black"
        }
    },
    inset: {
        value: {
            _light: "inset 0 0 0 1px {black/5}",
            _dark: "inset 0 0 0 1px {colors.gray.300/5}"
        }
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "accordionAnatomy": (()=>accordionAnatomy),
    "actionBarAnatomy": (()=>actionBarAnatomy),
    "alertAnatomy": (()=>alertAnatomy),
    "blockquoteAnatomy": (()=>blockquoteAnatomy),
    "breadcrumbAnatomy": (()=>breadcrumbAnatomy),
    "cardAnatomy": (()=>cardAnatomy),
    "checkboxCardAnatomy": (()=>checkboxCardAnatomy),
    "colorPickerAnatomy": (()=>colorPickerAnatomy),
    "dataListAnatomy": (()=>dataListAnatomy),
    "dialogAnatomy": (()=>dialogAnatomy),
    "drawerAnatomy": (()=>drawerAnatomy),
    "editableAnatomy": (()=>editableAnatomy),
    "emptyStateAnatomy": (()=>emptyStateAnatomy),
    "fieldAnatomy": (()=>fieldAnatomy),
    "fieldsetAnatomy": (()=>fieldsetAnatomy),
    "fileUploadAnatomy": (()=>fileUploadAnatomy),
    "listAnatomy": (()=>listAnatomy),
    "menuAnatomy": (()=>menuAnatomy),
    "nativeSelectAnatomy": (()=>nativeSelectAnatomy),
    "popoverAnatomy": (()=>popoverAnatomy),
    "radioCardAnatomy": (()=>radioCardAnatomy),
    "radioGroupAnatomy": (()=>radioGroupAnatomy),
    "ratingGroupAnatomy": (()=>ratingGroupAnatomy),
    "selectAnatomy": (()=>selectAnatomy),
    "sliderAnatomy": (()=>sliderAnatomy),
    "statAnatomy": (()=>statAnatomy),
    "statusAnatomy": (()=>statusAnatomy),
    "stepsAnatomy": (()=>stepsAnatomy),
    "switchAnatomy": (()=>switchAnatomy),
    "tableAnatomy": (()=>tableAnatomy),
    "tabsAnatomy": (()=>tabsAnatomy),
    "tagAnatomy": (()=>tagAnatomy),
    "timelineAnatomy": (()=>timelineAnatomy),
    "toastAnatomy": (()=>toastAnatomy)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$accordion$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__accordionAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/accordion/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as accordionAnatomy>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/anatomy/dist/index.mjs [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ark$2d$ui$2f$react$2f$dist$2f$components$2f$color$2d$picker$2f$color$2d$picker$2e$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@ark-ui/react/dist/components/color-picker/color-picker.anatomy.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$dialog$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__dialogAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/dialog/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as dialogAnatomy>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$editable$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__editableAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/editable/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as editableAnatomy>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ark$2d$ui$2f$react$2f$dist$2f$components$2f$field$2f$field$2e$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@ark-ui/react/dist/components/field/field.anatomy.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ark$2d$ui$2f$react$2f$dist$2f$components$2f$fieldset$2f$fieldset$2e$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@ark-ui/react/dist/components/fieldset/fieldset.anatomy.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$file$2d$upload$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__fileUploadAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/file-upload/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as fileUploadAnatomy>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$menu$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__menuAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/menu/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as menuAnatomy>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$popover$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__popoverAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/popover/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as popoverAnatomy>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$radio$2d$group$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__radioGroupAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/radio-group/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as radioGroupAnatomy>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$rating$2d$group$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__ratingGroupAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/rating-group/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as ratingGroupAnatomy>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__selectAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/select/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as selectAnatomy>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$slider$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__sliderAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/slider/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as sliderAnatomy>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$switch$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__switchAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/switch/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as switchAnatomy>");
"use strict";
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const accordionAnatomy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$accordion$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__accordionAnatomy$3e$__["accordionAnatomy"].extendWith("itemBody");
const actionBarAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("action-bar").parts("positioner", "content", "separator", "selectionTrigger", "closeTrigger");
const alertAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("alert").parts("title", "description", "root", "indicator", "content");
const breadcrumbAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("breadcrumb").parts("link", "currentLink", "item", "list", "root", "ellipsis", "separator");
const blockquoteAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("blockquote").parts("root", "icon", "content", "caption");
const cardAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("card").parts("root", "header", "body", "footer", "title", "description");
const checkboxCardAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("checkbox-card", [
    "root",
    "control",
    "label",
    "description",
    "addon",
    "indicator",
    "content"
]);
const dataListAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("data-list").parts("root", "item", "itemLabel", "itemValue");
const dialogAnatomy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$dialog$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__dialogAnatomy$3e$__["dialogAnatomy"].extendWith("header", "body", "footer", "backdrop");
const drawerAnatomy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$dialog$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__dialogAnatomy$3e$__["dialogAnatomy"].extendWith("header", "body", "footer", "backdrop");
const editableAnatomy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$editable$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__editableAnatomy$3e$__["editableAnatomy"].extendWith("textarea");
const emptyStateAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("empty-state", [
    "root",
    "content",
    "indicator",
    "title",
    "description"
]);
const fieldAnatomy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ark$2d$ui$2f$react$2f$dist$2f$components$2f$field$2f$field$2e$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["fieldAnatomy"].extendWith("requiredIndicator");
const fieldsetAnatomy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ark$2d$ui$2f$react$2f$dist$2f$components$2f$fieldset$2f$fieldset$2e$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["fieldsetAnatomy"].extendWith("content");
const fileUploadAnatomy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$file$2d$upload$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__fileUploadAnatomy$3e$__["fileUploadAnatomy"].extendWith("itemContent", "dropzoneContent", "fileText");
const listAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("list").parts("root", "item", "indicator");
const menuAnatomy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$menu$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__menuAnatomy$3e$__["menuAnatomy"].extendWith("itemCommand");
const nativeSelectAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("select").parts("root", "field", "indicator");
const popoverAnatomy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$popover$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__popoverAnatomy$3e$__["popoverAnatomy"].extendWith("header", "body", "footer");
const radioGroupAnatomy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$radio$2d$group$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__radioGroupAnatomy$3e$__["radioGroupAnatomy"].extendWith("itemAddon", "itemIndicator");
const radioCardAnatomy = radioGroupAnatomy.extendWith("itemContent", "itemDescription");
const ratingGroupAnatomy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$rating$2d$group$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__ratingGroupAnatomy$3e$__["ratingGroupAnatomy"].extendWith("itemIndicator");
const selectAnatomy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$select$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__selectAnatomy$3e$__["selectAnatomy"].extendWith("indicatorGroup");
const sliderAnatomy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$slider$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__sliderAnatomy$3e$__["sliderAnatomy"].extendWith("markerIndicator");
const statAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("stat").parts("root", "label", "helpText", "valueText", "valueUnit", "indicator");
const statusAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("status").parts("root", "indicator");
const stepsAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("steps", [
    "root",
    "list",
    "item",
    "trigger",
    "indicator",
    "separator",
    "content",
    "title",
    "description",
    "nextTrigger",
    "prevTrigger",
    "progress"
]);
const switchAnatomy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$switch$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__switchAnatomy$3e$__["switchAnatomy"].extendWith("indicator");
const tableAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("table").parts("root", "header", "body", "row", "columnHeader", "cell", "footer", "caption");
const toastAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("toast").parts("root", "title", "description", "indicator", "closeTrigger", "actionTrigger");
const tabsAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("tabs").parts("root", "trigger", "list", "content", "contentGroup", "indicator");
const tagAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("tag").parts("root", "label", "closeTrigger", "startElement", "endElement");
const timelineAnatomy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$anatomy$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createAnatomy"])("timeline").parts("root", "item", "content", "separator", "indicator", "connector", "title", "description");
const colorPickerAnatomy = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ark$2d$ui$2f$react$2f$dist$2f$components$2f$color$2d$picker$2f$color$2d$picker$2e$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["colorPickerAnatomy"].extendWith("channelText");
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/accordion.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "accordionSlotRecipe": (()=>accordionSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const accordionSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-accordion",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["accordionAnatomy"].keys(),
    base: {
        root: {
            width: "full",
            "--accordion-radius": "radii.l2"
        },
        item: {
            overflowAnchor: "none"
        },
        itemTrigger: {
            display: "flex",
            alignItems: "center",
            textAlign: "start",
            width: "full",
            outline: "0",
            gap: "3",
            fontWeight: "medium",
            borderRadius: "var(--accordion-radius)",
            _focusVisible: {
                outline: "2px solid",
                outlineColor: "colorPalette.focusRing"
            },
            _disabled: {
                layerStyle: "disabled"
            }
        },
        itemBody: {
            pt: "var(--accordion-padding-y)",
            pb: "calc(var(--accordion-padding-y) * 2)"
        },
        itemContent: {
            overflow: "hidden",
            borderRadius: "var(--accordion-radius)",
            _open: {
                animationName: "expand-height, fade-in",
                animationDuration: "moderate"
            },
            _closed: {
                animationName: "collapse-height, fade-out",
                animationDuration: "moderate"
            }
        },
        itemIndicator: {
            transition: "rotate 0.2s",
            transformOrigin: "center",
            color: "fg.subtle",
            _open: {
                rotate: "180deg"
            },
            _icon: {
                width: "1.2em",
                height: "1.2em"
            }
        }
    },
    variants: {
        variant: {
            outline: {
                item: {
                    borderBottomWidth: "1px"
                }
            },
            subtle: {
                itemTrigger: {
                    px: "var(--accordion-padding-x)"
                },
                itemContent: {
                    px: "var(--accordion-padding-x)"
                },
                item: {
                    borderRadius: "var(--accordion-radius)",
                    _open: {
                        bg: "colorPalette.subtle"
                    }
                }
            },
            enclosed: {
                root: {
                    borderWidth: "1px",
                    borderRadius: "var(--accordion-radius)",
                    divideY: "1px",
                    overflow: "hidden"
                },
                itemTrigger: {
                    px: "var(--accordion-padding-x)"
                },
                itemContent: {
                    px: "var(--accordion-padding-x)"
                },
                item: {
                    _open: {
                        bg: "bg.subtle"
                    }
                }
            },
            plain: {}
        },
        size: {
            sm: {
                root: {
                    "--accordion-padding-x": "spacing.3",
                    "--accordion-padding-y": "spacing.2"
                },
                itemTrigger: {
                    textStyle: "sm",
                    py: "var(--accordion-padding-y)"
                }
            },
            md: {
                root: {
                    "--accordion-padding-x": "spacing.4",
                    "--accordion-padding-y": "spacing.2"
                },
                itemTrigger: {
                    textStyle: "md",
                    py: "var(--accordion-padding-y)"
                }
            },
            lg: {
                root: {
                    "--accordion-padding-x": "spacing.4.5",
                    "--accordion-padding-y": "spacing.2.5"
                },
                itemTrigger: {
                    textStyle: "lg",
                    py: "var(--accordion-padding-y)"
                }
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "outline"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/action-bar.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "actionBarSlotRecipe": (()=>actionBarSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const actionBarSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-action-bar",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["actionBarAnatomy"].keys(),
    base: {
        positioner: {
            position: "fixed",
            display: "flex",
            justifyContent: "center",
            pointerEvents: "none",
            insetInline: "0",
            top: "unset",
            bottom: "calc(env(safe-area-inset-bottom) + 20px)"
        },
        content: {
            bg: "bg.panel",
            shadow: "md",
            display: "flex",
            alignItems: "center",
            gap: "3",
            borderRadius: "l3",
            py: "2.5",
            px: "3",
            pointerEvents: "auto",
            // Stabilize the position of the action bar when the scrollbar is hidden
            // by using the scrollbar width to offset the position.
            translate: "calc(-1 * var(--scrollbar-width) / 2) 0px",
            _open: {
                animationName: "slide-from-bottom, fade-in",
                animationDuration: "moderate"
            },
            _closed: {
                animationName: "slide-to-bottom, fade-out",
                animationDuration: "faster"
            }
        },
        separator: {
            width: "1px",
            height: "5",
            bg: "border"
        },
        selectionTrigger: {
            display: "inline-flex",
            alignItems: "center",
            gap: "2",
            alignSelf: "stretch",
            textStyle: "sm",
            px: "4",
            py: "1",
            borderRadius: "l2",
            borderWidth: "1px",
            borderStyle: "dashed"
        }
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/alert.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "alertSlotRecipe": (()=>alertSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const alertSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["alertAnatomy"].keys(),
    className: "chakra-alert",
    base: {
        root: {
            width: "full",
            display: "flex",
            alignItems: "flex-start",
            position: "relative",
            borderRadius: "l3"
        },
        title: {
            fontWeight: "medium"
        },
        description: {
            display: "inline"
        },
        indicator: {
            display: "inline-flex",
            alignItems: "center",
            justifyContent: "center",
            flexShrink: "0",
            width: "1em",
            height: "1em",
            _icon: {
                boxSize: "full"
            }
        },
        content: {
            display: "flex",
            flex: "1",
            gap: "1"
        }
    },
    variants: {
        status: {
            info: {
                root: {
                    colorPalette: "blue"
                }
            },
            warning: {
                root: {
                    colorPalette: "orange"
                }
            },
            success: {
                root: {
                    colorPalette: "green"
                }
            },
            error: {
                root: {
                    colorPalette: "red"
                }
            },
            neutral: {
                root: {
                    colorPalette: "gray"
                }
            }
        },
        inline: {
            true: {
                content: {
                    display: "inline-flex",
                    flexDirection: "row",
                    alignItems: "center"
                }
            },
            false: {
                content: {
                    display: "flex",
                    flexDirection: "column"
                }
            }
        },
        variant: {
            subtle: {
                root: {
                    bg: "colorPalette.subtle",
                    color: "colorPalette.fg"
                }
            },
            surface: {
                root: {
                    bg: "colorPalette.subtle",
                    color: "colorPalette.fg",
                    shadow: "inset 0 0 0px 1px var(--shadow-color)",
                    shadowColor: "colorPalette.muted"
                },
                indicator: {
                    color: "colorPalette.fg"
                }
            },
            outline: {
                root: {
                    color: "colorPalette.fg",
                    shadow: "inset 0 0 0px 1px var(--shadow-color)",
                    shadowColor: "colorPalette.muted"
                },
                indicator: {
                    color: "colorPalette.fg"
                }
            },
            solid: {
                root: {
                    bg: "colorPalette.solid",
                    color: "colorPalette.contrast"
                },
                indicator: {
                    color: "colorPalette.contrast"
                }
            }
        },
        size: {
            sm: {
                root: {
                    gap: "2",
                    px: "3",
                    py: "3",
                    textStyle: "xs"
                },
                indicator: {
                    textStyle: "lg"
                }
            },
            md: {
                root: {
                    gap: "3",
                    px: "4",
                    py: "4",
                    textStyle: "sm"
                },
                indicator: {
                    textStyle: "xl"
                }
            },
            lg: {
                root: {
                    gap: "3",
                    px: "4",
                    py: "4",
                    textStyle: "md"
                },
                indicator: {
                    textStyle: "2xl"
                }
            }
        }
    },
    defaultVariants: {
        status: "info",
        variant: "subtle",
        size: "md",
        inline: false
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/avatar.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "avatarSlotRecipe": (()=>avatarSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$avatar$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__avatarAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/avatar/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as avatarAnatomy>");
"use strict";
;
;
const avatarSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$avatar$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__avatarAnatomy$3e$__["avatarAnatomy"].keys(),
    className: "chakra-avatar",
    base: {
        root: {
            display: "inline-flex",
            alignItems: "center",
            justifyContent: "center",
            fontWeight: "medium",
            position: "relative",
            verticalAlign: "top",
            flexShrink: "0",
            userSelect: "none",
            width: "var(--avatar-size)",
            height: "var(--avatar-size)",
            fontSize: "var(--avatar-font-size)",
            borderRadius: "var(--avatar-radius)",
            "&[data-group-item]": {
                borderWidth: "2px",
                borderColor: "bg"
            }
        },
        image: {
            width: "100%",
            height: "100%",
            objectFit: "cover",
            borderRadius: "var(--avatar-radius)"
        },
        fallback: {
            lineHeight: "1",
            textTransform: "uppercase",
            fontWeight: "medium",
            fontSize: "var(--avatar-font-size)",
            borderRadius: "var(--avatar-radius)"
        }
    },
    variants: {
        size: {
            full: {
                root: {
                    "--avatar-size": "100%",
                    "--avatar-font-size": "100%"
                }
            },
            "2xs": {
                root: {
                    "--avatar-font-size": "fontSizes.2xs",
                    "--avatar-size": "sizes.6"
                }
            },
            xs: {
                root: {
                    "--avatar-font-size": "fontSizes.xs",
                    "--avatar-size": "sizes.8"
                }
            },
            sm: {
                root: {
                    "--avatar-font-size": "fontSizes.sm",
                    "--avatar-size": "sizes.9"
                }
            },
            md: {
                root: {
                    "--avatar-font-size": "fontSizes.md",
                    "--avatar-size": "sizes.10"
                }
            },
            lg: {
                root: {
                    "--avatar-font-size": "fontSizes.md",
                    "--avatar-size": "sizes.11"
                }
            },
            xl: {
                root: {
                    "--avatar-font-size": "fontSizes.lg",
                    "--avatar-size": "sizes.12"
                }
            },
            "2xl": {
                root: {
                    "--avatar-font-size": "fontSizes.xl",
                    "--avatar-size": "sizes.16"
                }
            }
        },
        variant: {
            solid: {
                root: {
                    bg: "colorPalette.solid",
                    color: "colorPalette.contrast"
                }
            },
            subtle: {
                root: {
                    bg: "colorPalette.muted",
                    color: "colorPalette.fg"
                }
            },
            outline: {
                root: {
                    color: "colorPalette.fg",
                    borderWidth: "1px",
                    borderColor: "colorPalette.muted"
                }
            }
        },
        shape: {
            square: {},
            rounded: {
                root: {
                    "--avatar-radius": "radii.l3"
                }
            },
            full: {
                root: {
                    "--avatar-radius": "radii.full"
                }
            }
        },
        borderless: {
            true: {
                root: {
                    "&[data-group-item]": {
                        borderWidth: "0px"
                    }
                }
            }
        }
    },
    defaultVariants: {
        size: "md",
        shape: "full",
        variant: "subtle"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/blockquote.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "blockquoteSlotRecipe": (()=>blockquoteSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const blockquoteSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-blockquote",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["blockquoteAnatomy"].keys(),
    base: {
        root: {
            position: "relative",
            display: "flex",
            flexDirection: "column",
            gap: "2"
        },
        caption: {
            textStyle: "sm",
            color: "fg.muted"
        },
        icon: {
            boxSize: "5"
        }
    },
    variants: {
        justify: {
            start: {
                root: {
                    alignItems: "flex-start",
                    textAlign: "start"
                }
            },
            center: {
                root: {
                    alignItems: "center",
                    textAlign: "center"
                }
            },
            end: {
                root: {
                    alignItems: "flex-end",
                    textAlign: "end"
                }
            }
        },
        variant: {
            subtle: {
                root: {
                    paddingX: "5",
                    borderStartWidth: "4px",
                    borderStartColor: "colorPalette.muted"
                },
                icon: {
                    color: "colorPalette.fg"
                }
            },
            solid: {
                root: {
                    paddingX: "5",
                    borderStartWidth: "4px",
                    borderStartColor: "colorPalette.solid"
                },
                icon: {
                    color: "colorPalette.solid"
                }
            },
            plain: {
                root: {
                    paddingX: "5"
                },
                icon: {
                    color: "colorPalette.solid"
                }
            }
        }
    },
    defaultVariants: {
        variant: "subtle",
        justify: "start"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/breadcrumb.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "breadcrumbSlotRecipe": (()=>breadcrumbSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const breadcrumbSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-breadcrumb",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["breadcrumbAnatomy"].keys(),
    base: {
        list: {
            display: "flex",
            alignItems: "center",
            wordBreak: "break-word",
            color: "fg.muted",
            listStyle: "none"
        },
        link: {
            outline: "0",
            textDecoration: "none",
            borderRadius: "l1",
            focusRing: "outside",
            display: "inline-flex",
            alignItems: "center",
            gap: "2"
        },
        item: {
            display: "inline-flex",
            alignItems: "center"
        },
        separator: {
            color: "fg.muted",
            opacity: "0.8",
            _icon: {
                boxSize: "1em"
            },
            _rtl: {
                rotate: "180deg"
            }
        },
        ellipsis: {
            display: "inline-flex",
            alignItems: "center",
            justifyContent: "center",
            _icon: {
                boxSize: "1em"
            }
        }
    },
    variants: {
        variant: {
            underline: {
                link: {
                    color: "colorPalette.fg",
                    textDecoration: "underline",
                    textUnderlineOffset: "0.2em",
                    textDecorationColor: "colorPalette.muted"
                },
                currentLink: {
                    color: "colorPalette.fg"
                }
            },
            plain: {
                link: {
                    color: "fg.muted",
                    _hover: {
                        color: "fg"
                    }
                },
                currentLink: {
                    color: "fg"
                }
            }
        },
        size: {
            sm: {
                list: {
                    gap: "1",
                    textStyle: "xs"
                }
            },
            md: {
                list: {
                    gap: "1.5",
                    textStyle: "sm"
                }
            },
            lg: {
                list: {
                    gap: "2",
                    textStyle: "md"
                }
            }
        }
    },
    defaultVariants: {
        variant: "plain",
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/card.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "cardSlotRecipe": (()=>cardSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const cardSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-card",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["cardAnatomy"].keys(),
    base: {
        root: {
            display: "flex",
            flexDirection: "column",
            position: "relative",
            minWidth: "0",
            wordWrap: "break-word",
            borderRadius: "l3",
            color: "fg",
            textAlign: "start"
        },
        title: {
            fontWeight: "semibold"
        },
        description: {
            color: "fg.muted",
            fontSize: "sm"
        },
        header: {
            paddingInline: "var(--card-padding)",
            paddingTop: "var(--card-padding)",
            display: "flex",
            flexDirection: "column",
            gap: "1.5"
        },
        body: {
            padding: "var(--card-padding)",
            flex: "1",
            display: "flex",
            flexDirection: "column"
        },
        footer: {
            display: "flex",
            alignItems: "center",
            gap: "2",
            paddingInline: "var(--card-padding)",
            paddingBottom: "var(--card-padding)"
        }
    },
    variants: {
        size: {
            sm: {
                root: {
                    "--card-padding": "spacing.4"
                },
                title: {
                    textStyle: "md"
                }
            },
            md: {
                root: {
                    "--card-padding": "spacing.6"
                },
                title: {
                    textStyle: "lg"
                }
            },
            lg: {
                root: {
                    "--card-padding": "spacing.7"
                },
                title: {
                    textStyle: "xl"
                }
            }
        },
        variant: {
            elevated: {
                root: {
                    bg: "bg.panel",
                    boxShadow: "md"
                }
            },
            outline: {
                root: {
                    bg: "bg.panel",
                    borderWidth: "1px",
                    borderColor: "border"
                }
            },
            subtle: {
                root: {
                    bg: "bg.muted"
                }
            }
        }
    },
    defaultVariants: {
        variant: "outline",
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/checkbox.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "checkboxSlotRecipe": (()=>checkboxSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/checkmark.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ark$2d$ui$2f$react$2f$dist$2f$components$2f$checkbox$2f$checkbox$2e$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@ark-ui/react/dist/components/checkbox/checkbox.anatomy.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
const checkboxSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ark$2d$ui$2f$react$2f$dist$2f$components$2f$checkbox$2f$checkbox$2e$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkboxAnatomy"].keys(),
    className: "chakra-checkbox",
    base: {
        root: {
            display: "inline-flex",
            gap: "2",
            alignItems: "center",
            verticalAlign: "top",
            position: "relative"
        },
        control: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"].base,
        label: {
            fontWeight: "medium",
            userSelect: "none",
            _disabled: {
                opacity: "0.5"
            }
        }
    },
    variants: {
        size: {
            xs: {
                root: {
                    gap: "1.5"
                },
                label: {
                    textStyle: "xs"
                },
                control: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"].variants?.size?.xs
            },
            sm: {
                root: {
                    gap: "2"
                },
                label: {
                    textStyle: "sm"
                },
                control: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"].variants?.size?.sm
            },
            md: {
                root: {
                    gap: "2.5"
                },
                label: {
                    textStyle: "sm"
                },
                control: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"].variants?.size?.md
            },
            lg: {
                root: {
                    gap: "3"
                },
                label: {
                    textStyle: "md"
                },
                control: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"].variants?.size?.lg
            }
        },
        variant: {
            outline: {
                control: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"].variants?.variant?.outline
            },
            solid: {
                control: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"].variants?.variant?.solid
            },
            subtle: {
                control: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"].variants?.variant?.subtle
            }
        }
    },
    defaultVariants: {
        variant: "solid",
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/checkbox-card.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "checkboxCardSlotRecipe": (()=>checkboxCardSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/checkmark.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
const checkboxCardSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["checkboxCardAnatomy"].keys(),
    className: "chakra-checkbox-card",
    base: {
        root: {
            display: "flex",
            flexDirection: "column",
            userSelect: "none",
            position: "relative",
            borderRadius: "l2",
            flex: "1",
            focusVisibleRing: "outside",
            _disabled: {
                opacity: "0.8"
            },
            _invalid: {
                outline: "2px solid",
                outlineColor: "border.error"
            }
        },
        control: {
            display: "inline-flex",
            flex: "1",
            position: "relative",
            borderRadius: "inherit",
            justifyContent: "var(--checkbox-card-justify)",
            alignItems: "var(--checkbox-card-align)"
        },
        label: {
            fontWeight: "medium",
            display: "flex",
            alignItems: "center",
            gap: "2",
            flex: "1",
            _disabled: {
                opacity: "0.5"
            }
        },
        description: {
            opacity: "0.64",
            textStyle: "sm",
            _disabled: {
                opacity: "0.5"
            }
        },
        addon: {
            _disabled: {
                opacity: "0.5"
            }
        },
        indicator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"].base,
        content: {
            display: "flex",
            flexDirection: "column",
            flex: "1",
            gap: "1",
            justifyContent: "var(--checkbox-card-justify)",
            alignItems: "var(--checkbox-card-align)"
        }
    },
    variants: {
        size: {
            sm: {
                root: {
                    textStyle: "sm"
                },
                control: {
                    padding: "3",
                    gap: "1.5"
                },
                addon: {
                    px: "3",
                    py: "1.5",
                    borderTopWidth: "1px"
                },
                indicator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"].variants?.size.sm
            },
            md: {
                root: {
                    textStyle: "sm"
                },
                control: {
                    padding: "4",
                    gap: "2.5"
                },
                addon: {
                    px: "4",
                    py: "2",
                    borderTopWidth: "1px"
                },
                indicator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"].variants?.size.md
            },
            lg: {
                root: {
                    textStyle: "md"
                },
                control: {
                    padding: "4",
                    gap: "3.5"
                },
                addon: {
                    px: "4",
                    py: "2",
                    borderTopWidth: "1px"
                },
                indicator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"].variants?.size.lg
            }
        },
        variant: {
            surface: {
                root: {
                    borderWidth: "1px",
                    borderColor: "border",
                    _checked: {
                        bg: "colorPalette.subtle",
                        color: "colorPalette.fg",
                        borderColor: "colorPalette.muted"
                    },
                    _disabled: {
                        bg: "bg.muted"
                    }
                },
                indicator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"].variants?.variant.solid
            },
            subtle: {
                root: {
                    bg: "bg.muted"
                },
                control: {
                    _checked: {
                        bg: "colorPalette.muted",
                        color: "colorPalette.fg"
                    }
                },
                indicator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"].variants?.variant.plain
            },
            outline: {
                root: {
                    borderWidth: "1px",
                    borderColor: "border",
                    _checked: {
                        boxShadow: "0 0 0 1px var(--shadow-color)",
                        boxShadowColor: "colorPalette.solid",
                        borderColor: "colorPalette.solid"
                    }
                },
                indicator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"].variants?.variant.solid
            },
            solid: {
                root: {
                    borderWidth: "1px",
                    _checked: {
                        bg: "colorPalette.solid",
                        color: "colorPalette.contrast",
                        borderColor: "colorPalette.solid"
                    }
                },
                indicator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkmark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkmarkRecipe"].variants?.variant.inverted
            }
        },
        justify: {
            start: {
                root: {
                    "--checkbox-card-justify": "flex-start"
                }
            },
            end: {
                root: {
                    "--checkbox-card-justify": "flex-end"
                }
            },
            center: {
                root: {
                    "--checkbox-card-justify": "center"
                }
            }
        },
        align: {
            start: {
                root: {
                    "--checkbox-card-align": "flex-start"
                },
                content: {
                    textAlign: "start"
                }
            },
            end: {
                root: {
                    "--checkbox-card-align": "flex-end"
                },
                content: {
                    textAlign: "end"
                }
            },
            center: {
                root: {
                    "--checkbox-card-align": "center"
                },
                content: {
                    textAlign: "center"
                }
            }
        },
        orientation: {
            vertical: {
                control: {
                    flexDirection: "column"
                }
            },
            horizontal: {
                control: {
                    flexDirection: "row"
                }
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "outline",
        align: "start",
        orientation: "horizontal"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/collapsible.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "collapsibleSlotRecipe": (()=>collapsibleSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$collapsible$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__collapsibleAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/collapsible/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as collapsibleAnatomy>");
"use strict";
;
;
const collapsibleSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$collapsible$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__collapsibleAnatomy$3e$__["collapsibleAnatomy"].keys(),
    className: "chakra-collapsible",
    base: {
        content: {
            overflow: "hidden",
            _open: {
                animationName: "expand-height, fade-in",
                animationDuration: "moderate"
            },
            _closed: {
                animationName: "collapse-height, fade-out",
                animationDuration: "moderate"
            }
        }
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/color-picker.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "colorPickerSlotRecipe": (()=>colorPickerSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$color$2d$swatch$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/color-swatch.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/input.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
const colorPickerSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "colorPicker",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["colorPickerAnatomy"].keys(),
    base: {
        root: {
            display: "flex",
            flexDirection: "column",
            gap: "1.5"
        },
        label: {
            color: "fg",
            fontWeight: "medium",
            textStyle: "sm",
            _disabled: {
                opacity: "0.5"
            }
        },
        valueText: {
            textAlign: "start"
        },
        control: {
            display: "flex",
            alignItems: "center",
            flexDirection: "row",
            gap: "2",
            position: "relative"
        },
        swatchTrigger: {
            display: "flex",
            alignItems: "center",
            justifyContent: "center"
        },
        trigger: {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            flexDirection: "row",
            flexShrink: "0",
            gap: "2",
            textStyle: "sm",
            minH: "var(--input-height)",
            minW: "var(--input-height)",
            px: "1",
            rounded: "l2",
            _disabled: {
                opacity: "0.5"
            },
            "--focus-color": "colors.colorPalette.focusRing",
            "&:focus-visible": {
                borderColor: "var(--focus-color)",
                outline: "1px solid var(--focus-color)"
            },
            "&[data-fit-content]": {
                "--input-height": "unset",
                px: "0",
                border: "0"
            }
        },
        content: {
            display: "flex",
            flexDirection: "column",
            bg: "bg.panel",
            borderRadius: "l3",
            boxShadow: "lg",
            width: "64",
            p: "4",
            gap: "3",
            zIndex: "dropdown",
            _open: {
                animationStyle: "slide-fade-in",
                animationDuration: "fast"
            },
            _closed: {
                animationStyle: "slide-fade-out",
                animationDuration: "faster"
            }
        },
        area: {
            height: "180px",
            borderRadius: "l2",
            overflow: "hidden"
        },
        areaThumb: {
            borderRadius: "full",
            height: "var(--thumb-size)",
            width: "var(--thumb-size)",
            borderWidth: "2px",
            borderColor: "white",
            shadow: "sm",
            focusVisibleRing: "mixed",
            focusRingColor: "white"
        },
        areaBackground: {
            height: "full"
        },
        channelSlider: {
            borderRadius: "l2",
            flex: "1"
        },
        channelSliderTrack: {
            height: "var(--slider-height)",
            borderRadius: "inherit",
            boxShadow: "inset 0 0 0 1px rgba(0,0,0,0.1)"
        },
        channelText: {
            textStyle: "xs",
            color: "fg.muted",
            fontWeight: "medium",
            textTransform: "capitalize"
        },
        swatchGroup: {
            display: "flex",
            flexDirection: "row",
            flexWrap: "wrap",
            gap: "2"
        },
        swatch: {
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$color$2d$swatch$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["colorSwatchRecipe"].base,
            borderRadius: "l1"
        },
        swatchIndicator: {
            color: "white",
            rounded: "full"
        },
        channelSliderThumb: {
            borderRadius: "full",
            height: "var(--thumb-size)",
            width: "var(--thumb-size)",
            borderWidth: "2px",
            borderColor: "white",
            shadow: "sm",
            transform: "translate(-50%, -50%)",
            focusVisibleRing: "outside",
            focusRingOffset: "1px"
        },
        channelInput: {
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].base,
            "&::-webkit-inner-spin-button, &::-webkit-outer-spin-button": {
                WebkitAppearance: "none",
                margin: 0
            }
        },
        formatSelect: {
            textStyle: "xs",
            textTransform: "uppercase",
            borderWidth: "1px",
            minH: "6",
            focusRing: "inside",
            rounded: "l2"
        },
        transparencyGrid: {
            borderRadius: "l2"
        },
        view: {
            display: "flex",
            flexDirection: "column",
            gap: "2"
        }
    },
    variants: {
        size: {
            "2xs": {
                channelInput: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].variants?.size?.["2xs"],
                swatch: {
                    "--swatch-size": "sizes.4.5"
                },
                trigger: {
                    "--input-height": "sizes.7"
                },
                area: {
                    "--thumb-size": "sizes.3"
                },
                channelSlider: {
                    "--slider-height": "sizes.3",
                    "--thumb-size": "sizes.3"
                }
            },
            xs: {
                channelInput: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].variants?.size?.xs,
                swatch: {
                    "--swatch-size": "sizes.5"
                },
                trigger: {
                    "--input-height": "sizes.8"
                },
                area: {
                    "--thumb-size": "sizes.3.5"
                },
                channelSlider: {
                    "--slider-height": "sizes.3.5",
                    "--thumb-size": "sizes.3.5"
                }
            },
            sm: {
                channelInput: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].variants?.size?.sm,
                swatch: {
                    "--swatch-size": "sizes.6"
                },
                trigger: {
                    "--input-height": "sizes.9"
                },
                area: {
                    "--thumb-size": "sizes.3.5"
                },
                channelSlider: {
                    "--slider-height": "sizes.3.5",
                    "--thumb-size": "sizes.3.5"
                }
            },
            md: {
                channelInput: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].variants?.size?.md,
                swatch: {
                    "--swatch-size": "sizes.7"
                },
                trigger: {
                    "--input-height": "sizes.10"
                },
                area: {
                    "--thumb-size": "sizes.3.5"
                },
                channelSlider: {
                    "--slider-height": "sizes.3.5",
                    "--thumb-size": "sizes.3.5"
                }
            },
            lg: {
                channelInput: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].variants?.size?.lg,
                swatch: {
                    "--swatch-size": "sizes.7"
                },
                trigger: {
                    "--input-height": "sizes.11"
                },
                area: {
                    "--thumb-size": "sizes.3.5"
                },
                channelSlider: {
                    "--slider-height": "sizes.3.5",
                    "--thumb-size": "sizes.3.5"
                }
            },
            xl: {
                channelInput: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].variants?.size?.xl,
                swatch: {
                    "--swatch-size": "sizes.8"
                },
                trigger: {
                    "--input-height": "sizes.12"
                },
                area: {
                    "--thumb-size": "sizes.3.5"
                },
                channelSlider: {
                    "--slider-height": "sizes.3.5",
                    "--thumb-size": "sizes.3.5"
                }
            },
            "2xl": {
                channelInput: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].variants?.size?.["2xl"],
                swatch: {
                    "--swatch-size": "sizes.10"
                },
                trigger: {
                    "--input-height": "sizes.16"
                },
                area: {
                    "--thumb-size": "sizes.3.5"
                },
                channelSlider: {
                    "--slider-height": "sizes.3.5",
                    "--thumb-size": "sizes.3.5"
                }
            }
        },
        variant: {
            outline: {
                channelInput: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].variants?.variant?.outline,
                trigger: {
                    borderWidth: "1px"
                }
            },
            subtle: {
                channelInput: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].variants?.variant?.subtle,
                trigger: {
                    borderWidth: "1px",
                    borderColor: "transparent",
                    bg: "bg.muted"
                }
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "outline"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/data-list.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "dataListSlotRecipe": (()=>dataListSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const dataListSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["dataListAnatomy"].keys(),
    className: "chakra-data-list",
    base: {
        itemLabel: {
            display: "flex",
            alignItems: "center",
            gap: "1"
        },
        itemValue: {
            display: "flex",
            minWidth: "0",
            flex: "1"
        }
    },
    variants: {
        orientation: {
            horizontal: {
                root: {
                    display: "flex",
                    flexDirection: "column"
                },
                item: {
                    display: "inline-flex",
                    alignItems: "center",
                    gap: "4"
                },
                itemLabel: {
                    minWidth: "120px"
                }
            },
            vertical: {
                root: {
                    display: "flex",
                    flexDirection: "column"
                },
                item: {
                    display: "flex",
                    flexDirection: "column",
                    gap: "1"
                }
            }
        },
        size: {
            sm: {
                root: {
                    gap: "3"
                },
                item: {
                    textStyle: "xs"
                }
            },
            md: {
                root: {
                    gap: "4"
                },
                item: {
                    textStyle: "sm"
                }
            },
            lg: {
                root: {
                    gap: "5"
                },
                item: {
                    textStyle: "md"
                }
            }
        },
        variant: {
            subtle: {
                itemLabel: {
                    color: "fg.muted"
                }
            },
            bold: {
                itemLabel: {
                    fontWeight: "medium"
                },
                itemValue: {
                    color: "fg.muted"
                }
            }
        }
    },
    defaultVariants: {
        size: "md",
        orientation: "vertical",
        variant: "subtle"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/dialog.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "dialogSlotRecipe": (()=>dialogSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const dialogSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["dialogAnatomy"].keys(),
    className: "chakra-dialog",
    base: {
        backdrop: {
            bg: "blackAlpha.500",
            pos: "fixed",
            left: 0,
            top: 0,
            w: "100vw",
            h: "100dvh",
            zIndex: "calc(var(--z-index) - 1) ",
            _open: {
                animationName: "fade-in",
                animationDuration: "slow"
            },
            _closed: {
                animationName: "fade-out",
                animationDuration: "moderate"
            }
        },
        positioner: {
            display: "flex",
            width: "100vw",
            height: "100dvh",
            position: "fixed",
            left: 0,
            top: 0,
            "--dialog-z-index": "zIndex.modal",
            zIndex: "calc(var(--dialog-z-index) + var(--layer-index, 0))",
            justifyContent: "center",
            overscrollBehaviorY: "none"
        },
        content: {
            display: "flex",
            flexDirection: "column",
            position: "relative",
            width: "100%",
            outline: 0,
            borderRadius: "l3",
            textStyle: "sm",
            my: "var(--dialog-margin, var(--dialog-base-margin))",
            "--dialog-z-index": "zIndex.modal",
            zIndex: "calc(var(--dialog-z-index) + var(--layer-index, 0))",
            bg: "bg.panel",
            boxShadow: "lg",
            _open: {
                animationDuration: "moderate"
            },
            _closed: {
                animationDuration: "faster"
            }
        },
        header: {
            display: "flex",
            gap: "2",
            flex: 0,
            px: "6",
            pt: "6",
            pb: "4"
        },
        body: {
            flex: "1",
            px: "6",
            pt: "2",
            pb: "6"
        },
        footer: {
            display: "flex",
            alignItems: "center",
            justifyContent: "flex-end",
            gap: "3",
            px: "6",
            pt: "2",
            pb: "4"
        },
        title: {
            textStyle: "lg",
            fontWeight: "semibold"
        },
        description: {
            color: "fg.muted"
        },
        closeTrigger: {
            pos: "absolute",
            top: "2",
            insetEnd: "2"
        }
    },
    variants: {
        placement: {
            center: {
                positioner: {
                    alignItems: "center"
                },
                content: {
                    "--dialog-base-margin": "auto",
                    mx: "auto"
                }
            },
            top: {
                positioner: {
                    alignItems: "flex-start"
                },
                content: {
                    "--dialog-base-margin": "spacing.16",
                    mx: "auto"
                }
            },
            bottom: {
                positioner: {
                    alignItems: "flex-end"
                },
                content: {
                    "--dialog-base-margin": "spacing.16",
                    mx: "auto"
                }
            }
        },
        scrollBehavior: {
            inside: {
                positioner: {
                    overflow: "hidden"
                },
                content: {
                    maxH: "calc(100% - 7.5rem)"
                },
                body: {
                    overflow: "auto"
                }
            },
            outside: {
                positioner: {
                    overflow: "auto",
                    pointerEvents: "auto"
                }
            }
        },
        size: {
            xs: {
                content: {
                    maxW: "sm"
                }
            },
            sm: {
                content: {
                    maxW: "md"
                }
            },
            md: {
                content: {
                    maxW: "lg"
                }
            },
            lg: {
                content: {
                    maxW: "2xl"
                }
            },
            xl: {
                content: {
                    maxW: "4xl"
                }
            },
            cover: {
                positioner: {
                    padding: "10"
                },
                content: {
                    width: "100%",
                    height: "100%",
                    "--dialog-margin": "0"
                }
            },
            full: {
                content: {
                    maxW: "100vw",
                    minH: "100vh",
                    "--dialog-margin": "0",
                    borderRadius: "0"
                }
            }
        },
        motionPreset: {
            scale: {
                content: {
                    _open: {
                        animationName: "scale-in, fade-in"
                    },
                    _closed: {
                        animationName: "scale-out, fade-out"
                    }
                }
            },
            "slide-in-bottom": {
                content: {
                    _open: {
                        animationName: "slide-from-bottom, fade-in"
                    },
                    _closed: {
                        animationName: "slide-to-bottom, fade-out"
                    }
                }
            },
            "slide-in-top": {
                content: {
                    _open: {
                        animationName: "slide-from-top, fade-in"
                    },
                    _closed: {
                        animationName: "slide-to-top, fade-out"
                    }
                }
            },
            "slide-in-left": {
                content: {
                    _open: {
                        animationName: "slide-from-left, fade-in"
                    },
                    _closed: {
                        animationName: "slide-to-left, fade-out"
                    }
                }
            },
            "slide-in-right": {
                content: {
                    _open: {
                        animationName: "slide-from-right, fade-in"
                    },
                    _closed: {
                        animationName: "slide-to-right, fade-out"
                    }
                }
            },
            none: {}
        }
    },
    defaultVariants: {
        size: "md",
        scrollBehavior: "outside",
        placement: "top",
        motionPreset: "scale"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/drawer.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "drawerSlotRecipe": (()=>drawerSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const drawerSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["drawerAnatomy"].keys(),
    className: "chakra-drawer",
    base: {
        backdrop: {
            bg: "blackAlpha.500",
            pos: "fixed",
            insetInlineStart: 0,
            top: 0,
            w: "100vw",
            h: "100dvh",
            zIndex: "calc(var(--z-index) - 1) ",
            _open: {
                animationName: "fade-in",
                animationDuration: "slow"
            },
            _closed: {
                animationName: "fade-out",
                animationDuration: "moderate"
            }
        },
        positioner: {
            display: "flex",
            width: "100vw",
            height: "100dvh",
            position: "fixed",
            insetInlineStart: 0,
            top: 0,
            zIndex: "modal",
            overscrollBehaviorY: "none"
        },
        content: {
            display: "flex",
            flexDirection: "column",
            position: "relative",
            width: "100%",
            outline: 0,
            zIndex: "modal",
            textStyle: "sm",
            maxH: "100dvh",
            color: "inherit",
            bg: "bg.panel",
            boxShadow: "lg",
            _open: {
                animationDuration: "slowest",
                animationTimingFunction: "ease-in-smooth"
            },
            _closed: {
                animationDuration: "slower",
                animationTimingFunction: "ease-in-smooth"
            }
        },
        header: {
            display: "flex",
            alignItems: "center",
            gap: "2",
            flex: 0,
            px: "6",
            pt: "6",
            pb: "4"
        },
        body: {
            px: "6",
            py: "2",
            flex: "1",
            overflow: "auto"
        },
        footer: {
            display: "flex",
            alignItems: "center",
            justifyContent: "flex-end",
            gap: "3",
            px: "6",
            pt: "2",
            pb: "4"
        },
        title: {
            flex: "1",
            textStyle: "lg",
            fontWeight: "semibold"
        },
        description: {
            color: "fg.muted"
        },
        closeTrigger: {
            pos: "absolute",
            top: "3",
            insetEnd: "2"
        }
    },
    variants: {
        size: {
            xs: {
                content: {
                    maxW: "xs"
                }
            },
            sm: {
                content: {
                    maxW: "md"
                }
            },
            md: {
                content: {
                    maxW: "lg"
                }
            },
            lg: {
                content: {
                    maxW: "2xl"
                }
            },
            xl: {
                content: {
                    maxW: "4xl"
                }
            },
            full: {
                content: {
                    maxW: "100vw",
                    h: "100dvh"
                }
            }
        },
        placement: {
            start: {
                positioner: {
                    justifyContent: "flex-start"
                },
                content: {
                    _open: {
                        animationName: {
                            base: "slide-from-left-full, fade-in",
                            _rtl: "slide-from-right-full, fade-in"
                        }
                    },
                    _closed: {
                        animationName: {
                            base: "slide-to-left-full, fade-out",
                            _rtl: "slide-to-right-full, fade-out"
                        }
                    }
                }
            },
            end: {
                positioner: {
                    justifyContent: "flex-end"
                },
                content: {
                    _open: {
                        animationName: {
                            base: "slide-from-right-full, fade-in",
                            _rtl: "slide-from-left-full, fade-in"
                        }
                    },
                    _closed: {
                        animationName: {
                            base: "slide-to-right-full, fade-out",
                            _rtl: "slide-to-right-full, fade-out"
                        }
                    }
                }
            },
            top: {
                positioner: {
                    alignItems: "flex-start"
                },
                content: {
                    maxW: "100%",
                    _open: {
                        animationName: "slide-from-top-full, fade-in"
                    },
                    _closed: {
                        animationName: "slide-to-top-full, fade-out"
                    }
                }
            },
            bottom: {
                positioner: {
                    alignItems: "flex-end"
                },
                content: {
                    maxW: "100%",
                    _open: {
                        animationName: "slide-from-bottom-full, fade-in"
                    },
                    _closed: {
                        animationName: "slide-to-bottom-full, fade-out"
                    }
                }
            }
        },
        contained: {
            true: {
                positioner: {
                    padding: "4"
                },
                content: {
                    borderRadius: "l3"
                }
            }
        }
    },
    defaultVariants: {
        size: "xs",
        placement: "end"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/editable.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "editableSlotRecipe": (()=>editableSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const sharedStyles = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineStyle"])({
    fontSize: "inherit",
    fontWeight: "inherit",
    textAlign: "inherit",
    bg: "transparent",
    borderRadius: "l2"
});
const editableSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["editableAnatomy"].keys(),
    className: "chakra-editable",
    base: {
        root: {
            display: "inline-flex",
            alignItems: "center",
            position: "relative",
            gap: "1.5",
            width: "full"
        },
        preview: {
            ...sharedStyles,
            py: "1",
            px: "1",
            display: "inline-flex",
            alignItems: "center",
            transitionProperty: "common",
            transitionDuration: "normal",
            cursor: "text",
            _hover: {
                bg: "bg.muted"
            },
            _disabled: {
                userSelect: "none"
            }
        },
        input: {
            ...sharedStyles,
            outline: "0",
            py: "1",
            px: "1",
            transitionProperty: "common",
            transitionDuration: "normal",
            width: "full",
            focusVisibleRing: "inside",
            focusRingWidth: "2px",
            _placeholder: {
                opacity: 0.6
            }
        },
        control: {
            display: "inline-flex",
            alignItems: "center",
            gap: "1.5"
        }
    },
    variants: {
        size: {
            sm: {
                root: {
                    textStyle: "sm"
                },
                preview: {
                    minH: "8"
                },
                input: {
                    minH: "8"
                }
            },
            md: {
                root: {
                    textStyle: "sm"
                },
                preview: {
                    minH: "9"
                },
                input: {
                    minH: "9"
                }
            },
            lg: {
                root: {
                    textStyle: "md"
                },
                preview: {
                    minH: "10"
                },
                input: {
                    minH: "10"
                }
            }
        }
    },
    defaultVariants: {
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/empty-state.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "emptyStateSlotRecipe": (()=>emptyStateSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const emptyStateSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["emptyStateAnatomy"].keys(),
    className: "chakra-empty-state",
    base: {
        root: {
            width: "full"
        },
        content: {
            display: "flex",
            flexDirection: "column",
            alignItems: "center",
            justifyContent: "center"
        },
        indicator: {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            color: "fg.subtle",
            _icon: {
                boxSize: "1em"
            }
        },
        title: {
            fontWeight: "semibold"
        },
        description: {
            textStyle: "sm",
            color: "fg.muted"
        }
    },
    variants: {
        size: {
            sm: {
                root: {
                    px: "4",
                    py: "6"
                },
                title: {
                    textStyle: "md"
                },
                content: {
                    gap: "4"
                },
                indicator: {
                    textStyle: "2xl"
                }
            },
            md: {
                root: {
                    px: "8",
                    py: "12"
                },
                title: {
                    textStyle: "lg"
                },
                content: {
                    gap: "6"
                },
                indicator: {
                    textStyle: "4xl"
                }
            },
            lg: {
                root: {
                    px: "12",
                    py: "16"
                },
                title: {
                    textStyle: "xl"
                },
                content: {
                    gap: "8"
                },
                indicator: {
                    textStyle: "6xl"
                }
            }
        }
    },
    defaultVariants: {
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/field.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "fieldSlotRecipe": (()=>fieldSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const fieldSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-field",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["fieldAnatomy"].keys(),
    base: {
        requiredIndicator: {
            color: "fg.error",
            lineHeight: "1"
        },
        root: {
            display: "flex",
            width: "100%",
            position: "relative",
            gap: "1.5"
        },
        label: {
            display: "flex",
            alignItems: "center",
            textAlign: "start",
            textStyle: "sm",
            fontWeight: "medium",
            gap: "1",
            userSelect: "none",
            _disabled: {
                opacity: "0.5"
            }
        },
        errorText: {
            display: "inline-flex",
            alignItems: "center",
            fontWeight: "medium",
            gap: "1",
            color: "fg.error",
            textStyle: "xs"
        },
        helperText: {
            color: "fg.muted",
            textStyle: "xs"
        }
    },
    variants: {
        orientation: {
            vertical: {
                root: {
                    flexDirection: "column",
                    alignItems: "flex-start"
                }
            },
            horizontal: {
                root: {
                    flexDirection: "row",
                    alignItems: "center",
                    justifyContent: "space-between"
                },
                label: {
                    flex: "0 0 var(--field-label-width, 80px)"
                }
            }
        }
    },
    defaultVariants: {
        orientation: "vertical"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/fieldset.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "fieldsetSlotRecipe": (()=>fieldsetSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const fieldsetSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "fieldset",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["fieldsetAnatomy"].keys(),
    base: {
        root: {
            display: "flex",
            flexDirection: "column",
            width: "full"
        },
        content: {
            display: "flex",
            flexDirection: "column",
            width: "full"
        },
        legend: {
            color: "fg",
            fontWeight: "medium",
            _disabled: {
                opacity: "0.5"
            }
        },
        helperText: {
            color: "fg.muted",
            textStyle: "sm"
        },
        errorText: {
            display: "inline-flex",
            alignItems: "center",
            color: "fg.error",
            gap: "2",
            fontWeight: "medium",
            textStyle: "sm"
        }
    },
    variants: {
        size: {
            sm: {
                root: {
                    spaceY: "2"
                },
                content: {
                    gap: "1.5"
                },
                legend: {
                    textStyle: "sm"
                }
            },
            md: {
                root: {
                    spaceY: "4"
                },
                content: {
                    gap: "4"
                },
                legend: {
                    textStyle: "sm"
                }
            },
            lg: {
                root: {
                    spaceY: "6"
                },
                content: {
                    gap: "4"
                },
                legend: {
                    textStyle: "md"
                }
            }
        }
    },
    defaultVariants: {
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/file-upload.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "fileUploadSlotRecipe": (()=>fileUploadSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const fileUploadSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-file-upload",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["fileUploadAnatomy"].keys(),
    base: {
        root: {
            display: "flex",
            flexDirection: "column",
            gap: "4",
            width: "100%",
            alignItems: "flex-start"
        },
        label: {
            fontWeight: "medium",
            textStyle: "sm"
        },
        dropzone: {
            background: "bg",
            borderRadius: "l3",
            borderWidth: "2px",
            borderStyle: "dashed",
            display: "flex",
            alignItems: "center",
            flexDirection: "column",
            gap: "4",
            justifyContent: "center",
            minHeight: "2xs",
            px: "3",
            py: "2",
            transition: "backgrounds",
            focusVisibleRing: "outside",
            _hover: {
                bg: "bg.subtle"
            },
            _dragging: {
                bg: "colorPalette.subtle",
                borderStyle: "solid",
                borderColor: "colorPalette.solid"
            }
        },
        dropzoneContent: {
            display: "flex",
            flexDirection: "column",
            alignItems: "center",
            textAlign: "center",
            gap: "1",
            textStyle: "sm"
        },
        item: {
            pos: "relative",
            textStyle: "sm",
            animationName: "fade-in",
            animationDuration: "moderate",
            background: "bg",
            borderRadius: "l2",
            borderWidth: "1px",
            width: "100%",
            display: "flex",
            alignItems: "center",
            gap: "3",
            p: "4"
        },
        itemGroup: {
            width: "100%",
            display: "flex",
            flexDirection: "column",
            gap: "3",
            _empty: {
                display: "none"
            }
        },
        itemName: {
            color: "fg",
            fontWeight: "medium",
            lineClamp: "1"
        },
        itemContent: {
            display: "flex",
            flexDirection: "column",
            gap: "0.5",
            flex: "1"
        },
        itemSizeText: {
            color: "fg.muted",
            textStyle: "xs"
        },
        itemDeleteTrigger: {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            alignSelf: "flex-start",
            boxSize: "5",
            p: "2px",
            color: "fg.muted",
            cursor: "button"
        },
        itemPreview: {
            color: "fg.muted",
            _icon: {
                boxSize: "4.5"
            }
        }
    },
    defaultVariants: {}
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/hover-card.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "hoverCardSlotRecipe": (()=>hoverCardSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$hover$2d$card$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__hoverCardAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/hover-card/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as hoverCardAnatomy>");
"use strict";
;
;
const hoverCardSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-hover-card",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$hover$2d$card$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__hoverCardAnatomy$3e$__["hoverCardAnatomy"].keys(),
    base: {
        content: {
            position: "relative",
            display: "flex",
            flexDirection: "column",
            textStyle: "sm",
            "--hovercard-bg": "colors.bg.panel",
            bg: "var(--hovercard-bg)",
            boxShadow: "lg",
            maxWidth: "80",
            borderRadius: "l3",
            zIndex: "popover",
            transformOrigin: "var(--transform-origin)",
            outline: "0",
            _open: {
                animationStyle: "slide-fade-in",
                animationDuration: "fast"
            },
            _closed: {
                animationStyle: "slide-fade-out",
                animationDuration: "faster"
            }
        },
        arrow: {
            "--arrow-size": "sizes.3",
            "--arrow-background": "var(--hovercard-bg)"
        },
        arrowTip: {
            borderTopWidth: "0.5px",
            borderInlineStartWidth: "0.5px"
        }
    },
    variants: {
        size: {
            xs: {
                content: {
                    padding: "3"
                }
            },
            sm: {
                content: {
                    padding: "4"
                }
            },
            md: {
                content: {
                    padding: "5"
                }
            },
            lg: {
                content: {
                    padding: "6"
                }
            }
        }
    },
    defaultVariants: {
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/list.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "listSlotRecipe": (()=>listSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const listSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-list",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["listAnatomy"].keys(),
    base: {
        root: {
            display: "flex",
            flexDirection: "column",
            gap: "var(--list-gap)",
            "& :where(ul, ol)": {
                marginTop: "var(--list-gap)"
            }
        },
        item: {
            whiteSpace: "normal",
            display: "list-item"
        },
        indicator: {
            marginEnd: "2",
            minHeight: "1lh",
            flexShrink: 0,
            display: "inline-block",
            verticalAlign: "middle"
        }
    },
    variants: {
        variant: {
            marker: {
                root: {
                    listStyle: "revert"
                },
                item: {
                    _marker: {
                        color: "fg.subtle"
                    }
                }
            },
            plain: {
                item: {
                    alignItems: "flex-start",
                    display: "inline-flex"
                }
            }
        },
        align: {
            center: {
                item: {
                    alignItems: "center"
                }
            },
            start: {
                item: {
                    alignItems: "flex-start"
                }
            },
            end: {
                item: {
                    alignItems: "flex-end"
                }
            }
        }
    },
    defaultVariants: {
        variant: "marker"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/menu.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "menuSlotRecipe": (()=>menuSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const menuSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-menu",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["menuAnatomy"].keys(),
    base: {
        content: {
            outline: 0,
            bg: "bg.panel",
            boxShadow: "lg",
            color: "fg",
            maxHeight: "var(--available-height)",
            "--menu-z-index": "zIndex.dropdown",
            zIndex: "calc(var(--menu-z-index) + var(--layer-index, 0))",
            borderRadius: "l2",
            overflow: "hidden",
            overflowY: "auto",
            _open: {
                animationStyle: "slide-fade-in",
                animationDuration: "fast"
            },
            _closed: {
                animationStyle: "slide-fade-out",
                animationDuration: "faster"
            }
        },
        item: {
            textDecoration: "none",
            color: "fg",
            userSelect: "none",
            borderRadius: "l1",
            width: "100%",
            display: "flex",
            cursor: "menuitem",
            alignItems: "center",
            textAlign: "start",
            position: "relative",
            flex: "0 0 auto",
            outline: 0,
            _disabled: {
                layerStyle: "disabled"
            },
            "&[data-type]": {
                ps: "8"
            }
        },
        itemText: {
            flex: "1"
        },
        itemIndicator: {
            position: "absolute",
            insetStart: "2",
            transform: "translateY(-50%)",
            top: "50%"
        },
        itemGroupLabel: {
            px: "2",
            py: "1.5",
            fontWeight: "semibold",
            textStyle: "sm"
        },
        indicator: {
            display: "inline-flex",
            alignItems: "center",
            justifyContent: "center",
            flexShrink: "0"
        },
        itemCommand: {
            opacity: "0.6",
            textStyle: "xs",
            ms: "auto",
            ps: "4",
            letterSpacing: "widest",
            fontFamily: "inherit"
        },
        separator: {
            height: "1px",
            bg: "bg.muted",
            my: "1",
            mx: "-1"
        }
    },
    variants: {
        variant: {
            subtle: {
                item: {
                    _highlighted: {
                        bg: "bg.emphasized/60"
                    }
                }
            },
            solid: {
                item: {
                    _highlighted: {
                        bg: "colorPalette.solid",
                        color: "colorPalette.contrast"
                    }
                }
            }
        },
        size: {
            sm: {
                content: {
                    minW: "8rem",
                    padding: "1"
                },
                item: {
                    gap: "1",
                    textStyle: "xs",
                    py: "1",
                    px: "1.5"
                }
            },
            md: {
                content: {
                    minW: "8rem",
                    padding: "1.5"
                },
                item: {
                    gap: "2",
                    textStyle: "sm",
                    py: "1.5",
                    px: "2"
                }
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "subtle"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/select.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "selectSlotRecipe": (()=>selectSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const selectSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-select",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["selectAnatomy"].keys(),
    base: {
        root: {
            display: "flex",
            flexDirection: "column",
            gap: "1.5",
            width: "full"
        },
        trigger: {
            display: "flex",
            alignItems: "center",
            justifyContent: "space-between",
            width: "full",
            minH: "var(--select-trigger-height)",
            "--input-height": "var(--select-trigger-height)",
            px: "var(--select-trigger-padding-x)",
            borderRadius: "l2",
            userSelect: "none",
            textAlign: "start",
            focusVisibleRing: "inside",
            _placeholderShown: {
                color: "fg.muted/80"
            },
            _disabled: {
                layerStyle: "disabled"
            },
            _invalid: {
                borderColor: "border.error"
            }
        },
        indicatorGroup: {
            display: "flex",
            alignItems: "center",
            gap: "1",
            pos: "absolute",
            right: "0",
            top: "0",
            bottom: "0",
            px: "var(--select-trigger-padding-x)",
            pointerEvents: "none"
        },
        indicator: {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            color: {
                base: "fg.muted",
                _disabled: "fg.subtle",
                _invalid: "fg.error"
            }
        },
        content: {
            background: "bg.panel",
            display: "flex",
            flexDirection: "column",
            zIndex: "dropdown",
            borderRadius: "l2",
            outline: 0,
            maxH: "96",
            overflowY: "auto",
            boxShadow: "md",
            _open: {
                animationStyle: "slide-fade-in",
                animationDuration: "fast"
            },
            _closed: {
                animationStyle: "slide-fade-out",
                animationDuration: "fastest"
            }
        },
        item: {
            position: "relative",
            userSelect: "none",
            display: "flex",
            alignItems: "center",
            gap: "2",
            cursor: "option",
            justifyContent: "space-between",
            flex: "1",
            textAlign: "start",
            borderRadius: "l1",
            _highlighted: {
                bg: "bg.emphasized/60"
            },
            _disabled: {
                pointerEvents: "none",
                opacity: "0.5"
            },
            _icon: {
                width: "4",
                height: "4"
            }
        },
        control: {
            pos: "relative"
        },
        itemText: {
            flex: "1"
        },
        itemGroup: {
            _first: {
                mt: "0"
            }
        },
        itemGroupLabel: {
            py: "1",
            fontWeight: "medium"
        },
        label: {
            fontWeight: "medium",
            userSelect: "none",
            textStyle: "sm",
            _disabled: {
                layerStyle: "disabled"
            }
        },
        valueText: {
            lineClamp: "1",
            maxW: "80%"
        },
        clearTrigger: {
            color: "fg.muted",
            pointerEvents: "auto",
            focusVisibleRing: "inside",
            focusRingWidth: "2px",
            rounded: "l1"
        }
    },
    variants: {
        variant: {
            outline: {
                trigger: {
                    bg: "transparent",
                    borderWidth: "1px",
                    borderColor: "border",
                    _expanded: {
                        borderColor: "border.emphasized"
                    }
                }
            },
            subtle: {
                trigger: {
                    borderWidth: "1px",
                    borderColor: "transparent",
                    bg: "bg.muted"
                }
            }
        },
        size: {
            xs: {
                root: {
                    "--select-trigger-height": "sizes.8",
                    "--select-trigger-padding-x": "spacing.2"
                },
                content: {
                    p: "1",
                    gap: "1",
                    textStyle: "xs"
                },
                trigger: {
                    textStyle: "xs",
                    gap: "1"
                },
                item: {
                    py: "1",
                    px: "2"
                },
                itemGroupLabel: {
                    py: "1",
                    px: "2"
                },
                indicator: {
                    _icon: {
                        width: "3.5",
                        height: "3.5"
                    }
                }
            },
            sm: {
                root: {
                    "--select-trigger-height": "sizes.9",
                    "--select-trigger-padding-x": "spacing.2.5"
                },
                content: {
                    p: "1",
                    textStyle: "sm"
                },
                trigger: {
                    textStyle: "sm",
                    gap: "1"
                },
                indicator: {
                    _icon: {
                        width: "4",
                        height: "4"
                    }
                },
                item: {
                    py: "1",
                    px: "1.5"
                },
                itemGroup: {
                    mt: "1"
                },
                itemGroupLabel: {
                    py: "1",
                    px: "1.5"
                }
            },
            md: {
                root: {
                    "--select-trigger-height": "sizes.10",
                    "--select-trigger-padding-x": "spacing.3"
                },
                content: {
                    p: "1",
                    textStyle: "sm"
                },
                itemGroup: {
                    mt: "1.5"
                },
                item: {
                    py: "1.5",
                    px: "2"
                },
                itemIndicator: {
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center"
                },
                itemGroupLabel: {
                    py: "1.5",
                    px: "2"
                },
                trigger: {
                    textStyle: "sm",
                    gap: "2"
                },
                indicator: {
                    _icon: {
                        width: "4",
                        height: "4"
                    }
                }
            },
            lg: {
                root: {
                    "--select-trigger-height": "sizes.12",
                    "--select-trigger-padding-x": "spacing.4"
                },
                content: {
                    p: "1.5",
                    textStyle: "md"
                },
                itemGroup: {
                    mt: "2"
                },
                item: {
                    py: "2",
                    px: "3"
                },
                itemGroupLabel: {
                    py: "2",
                    px: "3"
                },
                trigger: {
                    textStyle: "md",
                    py: "3",
                    gap: "2"
                },
                indicator: {
                    _icon: {
                        width: "5",
                        height: "5"
                    }
                }
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "outline"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/native-select.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "nativeSelectSlotRecipe": (()=>nativeSelectSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$select$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/select.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
const nativeSelectSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-native-select",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["nativeSelectAnatomy"].keys(),
    base: {
        root: {
            height: "fit-content",
            display: "flex",
            width: "100%",
            position: "relative"
        },
        field: {
            width: "100%",
            minWidth: "0",
            outline: "0",
            appearance: "none",
            borderRadius: "l2",
            "--error-color": "colors.border.error",
            _disabled: {
                layerStyle: "disabled"
            },
            _invalid: {
                focusRingColor: "var(--error-color)",
                borderColor: "var(--error-color)"
            },
            focusVisibleRing: "inside",
            lineHeight: "normal",
            "& > option, & > optgroup": {
                bg: "bg"
            }
        },
        indicator: {
            position: "absolute",
            display: "inline-flex",
            alignItems: "center",
            justifyContent: "center",
            pointerEvents: "none",
            top: "50%",
            transform: "translateY(-50%)",
            height: "100%",
            color: "fg.muted",
            _disabled: {
                opacity: "0.5"
            },
            _invalid: {
                color: "fg.error"
            },
            _icon: {
                width: "1em",
                height: "1em"
            }
        }
    },
    variants: {
        variant: {
            outline: {
                field: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$select$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["selectSlotRecipe"].variants?.variant.outline.trigger
            },
            subtle: {
                field: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$select$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["selectSlotRecipe"].variants?.variant.subtle.trigger
            },
            plain: {
                field: {
                    bg: "transparent",
                    color: "fg",
                    focusRingWidth: "2px"
                }
            }
        },
        size: {
            xs: {
                field: {
                    textStyle: "xs",
                    ps: "2",
                    pe: "6",
                    height: "6"
                },
                indicator: {
                    textStyle: "sm",
                    insetEnd: "1.5"
                }
            },
            sm: {
                field: {
                    textStyle: "sm",
                    ps: "2.5",
                    pe: "8",
                    height: "8"
                },
                indicator: {
                    textStyle: "md",
                    insetEnd: "2"
                }
            },
            md: {
                field: {
                    textStyle: "sm",
                    ps: "3",
                    pe: "8",
                    height: "10"
                },
                indicator: {
                    textStyle: "lg",
                    insetEnd: "2"
                }
            },
            lg: {
                field: {
                    textStyle: "md",
                    ps: "4",
                    pe: "8",
                    height: "11"
                },
                indicator: {
                    textStyle: "xl",
                    insetEnd: "3"
                }
            },
            xl: {
                field: {
                    textStyle: "md",
                    ps: "4.5",
                    pe: "10",
                    height: "12"
                },
                indicator: {
                    textStyle: "xl",
                    insetEnd: "3"
                }
            }
        }
    },
    defaultVariants: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$select$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["selectSlotRecipe"].defaultVariants
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/utils/entries.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "mapEntries": (()=>mapEntries)
});
"use strict";
function mapEntries(obj, f) {
    const result = {};
    for(const key in obj){
        const kv = f(key, obj[key]);
        result[kv[0]] = kv[1];
    }
    return result;
}
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/number-input.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "numberInputSlotRecipe": (()=>numberInputSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$entries$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/entries.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/input.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$number$2d$input$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__numberInputAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/number-input/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as numberInputAnatomy>");
"use strict";
;
;
;
;
const triggerStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineStyle"])({
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    flex: "1",
    userSelect: "none",
    cursor: "button",
    lineHeight: "1",
    color: "fg.muted",
    "--stepper-base-radius": "radii.l1",
    "--stepper-radius": "calc(var(--stepper-base-radius) + 1px)",
    _icon: {
        boxSize: "1em"
    },
    _disabled: {
        opacity: "0.5"
    },
    _hover: {
        bg: "bg.muted"
    },
    _active: {
        bg: "bg.emphasized"
    }
});
const numberInputSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-number-input",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$number$2d$input$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__numberInputAnatomy$3e$__["numberInputAnatomy"].keys(),
    base: {
        root: {
            position: "relative",
            zIndex: "0",
            isolation: "isolate"
        },
        input: {
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].base,
            verticalAlign: "top",
            pe: "calc(var(--stepper-width) + 0.5rem)"
        },
        control: {
            display: "flex",
            flexDirection: "column",
            position: "absolute",
            top: "0",
            insetEnd: "0px",
            margin: "1px",
            width: "var(--stepper-width)",
            height: "calc(100% - 2px)",
            zIndex: "1",
            borderStartWidth: "1px",
            divideY: "1px"
        },
        incrementTrigger: {
            ...triggerStyle,
            borderTopEndRadius: "var(--stepper-radius)"
        },
        decrementTrigger: {
            ...triggerStyle,
            borderBottomEndRadius: "var(--stepper-radius)"
        },
        valueText: {
            fontWeight: "medium",
            fontFeatureSettings: "pnum",
            fontVariantNumeric: "proportional-nums"
        }
    },
    variants: {
        size: {
            xs: {
                input: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].variants.size.xs,
                control: {
                    fontSize: "2xs",
                    "--stepper-width": "sizes.4"
                }
            },
            sm: {
                input: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].variants.size.sm,
                control: {
                    fontSize: "xs",
                    "--stepper-width": "sizes.5"
                }
            },
            md: {
                input: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].variants.size.md,
                control: {
                    fontSize: "sm",
                    "--stepper-width": "sizes.6"
                }
            },
            lg: {
                input: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].variants.size.lg,
                control: {
                    fontSize: "sm",
                    "--stepper-width": "sizes.6"
                }
            }
        },
        variant: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$entries$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["mapEntries"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].variants.variant, (key, variantStyles)=>[
                key,
                {
                    input: variantStyles
                }
            ])
    },
    defaultVariants: {
        size: "md",
        variant: "outline"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/pin-input.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "pinInputSlotRecipe": (()=>pinInputSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$entries$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/utils/entries.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/input.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$pin$2d$input$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__pinInputAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/pin-input/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as pinInputAnatomy>");
"use strict";
;
;
;
;
const { variants, defaultVariants } = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"];
const pinInputSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-pin-input",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$pin$2d$input$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__pinInputAnatomy$3e$__["pinInputAnatomy"].keys(),
    base: {
        input: {
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["inputRecipe"].base,
            textAlign: "center",
            width: "var(--input-height)"
        },
        control: {
            display: "inline-flex",
            gap: "2",
            isolation: "isolate"
        }
    },
    variants: {
        size: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$entries$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["mapEntries"])(variants.size, (key, value)=>[
                key,
                {
                    input: value
                }
            ]),
        variant: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$utils$2f$entries$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["mapEntries"])(variants.variant, (key, value)=>[
                key,
                {
                    input: value
                }
            ]),
        attached: {
            true: {
                control: {
                    gap: "0",
                    spaceX: "-1px"
                },
                input: {
                    _notFirst: {
                        borderStartRadius: "0"
                    },
                    _notLast: {
                        borderEndRadius: "0"
                    },
                    _focusVisible: {
                        zIndex: "1"
                    }
                }
            }
        }
    },
    defaultVariants
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/popover.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "popoverSlotRecipe": (()=>popoverSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const popoverSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-popover",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["popoverAnatomy"].keys(),
    base: {
        content: {
            position: "relative",
            display: "flex",
            flexDirection: "column",
            textStyle: "sm",
            "--popover-bg": "colors.bg.panel",
            bg: "var(--popover-bg)",
            boxShadow: "lg",
            "--popover-size": "sizes.xs",
            "--popover-mobile-size": "calc(100dvw - 1rem)",
            width: {
                base: "min(var(--popover-mobile-size), var(--popover-size))",
                sm: "var(--popover-size)"
            },
            borderRadius: "l3",
            "--popover-z-index": "zIndex.popover",
            zIndex: "calc(var(--popover-z-index) + var(--layer-index, 0))",
            outline: "0",
            transformOrigin: "var(--transform-origin)",
            maxHeight: "var(--available-height)",
            _open: {
                animationStyle: "scale-fade-in",
                animationDuration: "fast"
            },
            _closed: {
                animationStyle: "scale-fade-out",
                animationDuration: "faster"
            }
        },
        header: {
            paddingInline: "var(--popover-padding)",
            paddingTop: "var(--popover-padding)"
        },
        body: {
            padding: "var(--popover-padding)",
            flex: "1"
        },
        footer: {
            display: "flex",
            alignItems: "center",
            paddingInline: "var(--popover-padding)",
            paddingBottom: "var(--popover-padding)"
        },
        arrow: {
            "--arrow-size": "sizes.3",
            "--arrow-background": "var(--popover-bg)"
        },
        arrowTip: {
            borderTopWidth: "1px",
            borderInlineStartWidth: "1px"
        }
    },
    variants: {
        size: {
            xs: {
                content: {
                    "--popover-padding": "spacing.3"
                }
            },
            sm: {
                content: {
                    "--popover-padding": "spacing.4"
                }
            },
            md: {
                content: {
                    "--popover-padding": "spacing.5"
                }
            },
            lg: {
                content: {
                    "--popover-padding": "spacing.6"
                }
            }
        }
    },
    defaultVariants: {
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/progress.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "progressSlotRecipe": (()=>progressSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$progress$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__progressAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/progress/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as progressAnatomy>");
"use strict";
;
;
const progressSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$progress$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__progressAnatomy$3e$__["progressAnatomy"].keys(),
    className: "chakra-progress",
    base: {
        root: {
            textStyle: "sm",
            position: "relative"
        },
        track: {
            overflow: "hidden",
            position: "relative"
        },
        range: {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            transitionProperty: "width, height",
            transitionDuration: "slow",
            height: "100%",
            bgColor: "var(--track-color)",
            _indeterminate: {
                "--animate-from-x": "-40%",
                "--animate-to-x": "100%",
                position: "absolute",
                willChange: "left",
                minWidth: "50%",
                animation: "position 1s ease infinite normal none running",
                backgroundImage: `linear-gradient(to right, transparent 0%, var(--track-color) 50%, transparent 100%)`
            }
        },
        label: {
            display: "inline-flex",
            fontWeight: "medium",
            alignItems: "center",
            gap: "1"
        },
        valueText: {
            textStyle: "xs",
            lineHeight: "1",
            fontWeight: "medium"
        }
    },
    variants: {
        variant: {
            outline: {
                track: {
                    shadow: "inset",
                    bgColor: "bg.muted"
                },
                range: {
                    bgColor: "colorPalette.solid"
                }
            },
            subtle: {
                track: {
                    bgColor: "colorPalette.muted"
                },
                range: {
                    bgColor: "colorPalette.solid/72"
                }
            }
        },
        shape: {
            square: {},
            rounded: {
                track: {
                    borderRadius: "l1"
                }
            },
            full: {
                track: {
                    borderRadius: "full"
                }
            }
        },
        striped: {
            true: {
                range: {
                    backgroundImage: `linear-gradient(45deg, var(--stripe-color) 25%, transparent 25%, transparent 50%, var(--stripe-color) 50%, var(--stripe-color) 75%, transparent 75%, transparent)`,
                    backgroundSize: `var(--stripe-size) var(--stripe-size)`,
                    "--stripe-size": "1rem",
                    "--stripe-color": {
                        _light: "rgba(255, 255, 255, 0.3)",
                        _dark: "rgba(0, 0, 0, 0.3)"
                    }
                }
            }
        },
        animated: {
            true: {
                range: {
                    "--animate-from": "var(--stripe-size)",
                    animation: "bg-position 1s linear infinite"
                }
            }
        },
        size: {
            xs: {
                track: {
                    h: "1.5"
                }
            },
            sm: {
                track: {
                    h: "2"
                }
            },
            md: {
                track: {
                    h: "2.5"
                }
            },
            lg: {
                track: {
                    h: "3"
                }
            },
            xl: {
                track: {
                    h: "4"
                }
            }
        }
    },
    defaultVariants: {
        variant: "outline",
        size: "md",
        shape: "rounded"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/progress-circle.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "progressCircleSlotRecipe": (()=>progressCircleSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$progress$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__progressAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/progress/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as progressAnatomy>");
"use strict";
;
;
const progressCircleSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-progress-circle",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$progress$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__progressAnatomy$3e$__["progressAnatomy"].keys(),
    base: {
        root: {
            display: "inline-flex",
            textStyle: "sm",
            position: "relative"
        },
        circle: {
            _indeterminate: {
                animation: "spin 2s linear infinite"
            }
        },
        circleTrack: {
            "--track-color": "colors.colorPalette.muted",
            stroke: "var(--track-color)"
        },
        circleRange: {
            stroke: "colorPalette.solid",
            transitionProperty: "stroke-dasharray",
            transitionDuration: "0.6s",
            _indeterminate: {
                animation: "circular-progress 1.5s linear infinite"
            }
        },
        label: {
            display: "inline-flex"
        },
        valueText: {
            lineHeight: "1",
            fontWeight: "medium",
            letterSpacing: "tight",
            fontVariantNumeric: "tabular-nums"
        }
    },
    variants: {
        size: {
            xs: {
                circle: {
                    "--size": "24px",
                    "--thickness": "4px"
                },
                valueText: {
                    textStyle: "2xs"
                }
            },
            sm: {
                circle: {
                    "--size": "32px",
                    "--thickness": "5px"
                },
                valueText: {
                    textStyle: "2xs"
                }
            },
            md: {
                circle: {
                    "--size": "40px",
                    "--thickness": "6px"
                },
                valueText: {
                    textStyle: "xs"
                }
            },
            lg: {
                circle: {
                    "--size": "48px",
                    "--thickness": "7px"
                },
                valueText: {
                    textStyle: "sm"
                }
            },
            xl: {
                circle: {
                    "--size": "64px",
                    "--thickness": "8px"
                },
                valueText: {
                    textStyle: "sm"
                }
            }
        }
    },
    defaultVariants: {
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/qr-code.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "qrCodeSlotRecipe": (()=>qrCodeSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$qr$2d$code$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__qrCodeAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/qr-code/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as qrCodeAnatomy>");
"use strict";
;
;
const qrCodeSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$qr$2d$code$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__qrCodeAnatomy$3e$__["qrCodeAnatomy"].keys(),
    className: "chakra-qr-code",
    base: {
        root: {
            position: "relative",
            width: "fit-content",
            "--qr-code-overlay-size": "calc(var(--qr-code-size) / 3)"
        },
        frame: {
            width: "var(--qr-code-size)",
            height: "var(--qr-code-size)",
            fill: "currentColor"
        },
        overlay: {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            width: "var(--qr-code-overlay-size)",
            height: "var(--qr-code-overlay-size)",
            padding: "1",
            bg: "bg",
            rounded: "l1"
        }
    },
    variants: {
        size: {
            "2xs": {
                root: {
                    "--qr-code-size": "40px"
                }
            },
            xs: {
                root: {
                    "--qr-code-size": "64px"
                }
            },
            sm: {
                root: {
                    "--qr-code-size": "80px"
                }
            },
            md: {
                root: {
                    "--qr-code-size": "120px"
                }
            },
            lg: {
                root: {
                    "--qr-code-size": "160px"
                }
            },
            xl: {
                root: {
                    "--qr-code-size": "200px"
                }
            },
            "2xl": {
                root: {
                    "--qr-code-size": "240px"
                }
            },
            full: {
                root: {
                    "--qr-code-size": "100%"
                }
            }
        }
    },
    defaultVariants: {
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/radio-card.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "radioCardSlotRecipe": (()=>radioCardSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/radiomark.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
const radioCardSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-radio-card",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["radioCardAnatomy"].keys(),
    base: {
        root: {
            display: "flex",
            flexDirection: "column",
            gap: "1.5",
            isolation: "isolate"
        },
        item: {
            flex: "1",
            display: "flex",
            flexDirection: "column",
            userSelect: "none",
            position: "relative",
            borderRadius: "l2",
            _focus: {
                bg: "colorPalette.muted/20"
            },
            _disabled: {
                opacity: "0.8",
                borderColor: "border.disabled"
            },
            _checked: {
                zIndex: "1"
            }
        },
        label: {
            display: "inline-flex",
            fontWeight: "medium",
            textStyle: "sm",
            _disabled: {
                opacity: "0.5"
            }
        },
        itemText: {
            fontWeight: "medium",
            flex: "1"
        },
        itemDescription: {
            opacity: "0.64",
            textStyle: "sm"
        },
        itemControl: {
            display: "inline-flex",
            flex: "1",
            pos: "relative",
            rounded: "inherit",
            justifyContent: "var(--radio-card-justify)",
            alignItems: "var(--radio-card-align)",
            _disabled: {
                bg: "bg.muted"
            }
        },
        itemIndicator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"].base,
        itemAddon: {
            roundedBottom: "inherit",
            _disabled: {
                color: "fg.muted"
            }
        },
        itemContent: {
            display: "flex",
            flexDirection: "column",
            flex: "1",
            gap: "1",
            justifyContent: "var(--radio-card-justify)",
            alignItems: "var(--radio-card-align)"
        }
    },
    variants: {
        size: {
            sm: {
                item: {
                    textStyle: "sm"
                },
                itemControl: {
                    padding: "3",
                    gap: "1.5"
                },
                itemAddon: {
                    px: "3",
                    py: "1.5",
                    borderTopWidth: "1px"
                },
                itemIndicator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"].variants?.size.sm
            },
            md: {
                item: {
                    textStyle: "sm"
                },
                itemControl: {
                    padding: "4",
                    gap: "2.5"
                },
                itemAddon: {
                    px: "4",
                    py: "2",
                    borderTopWidth: "1px"
                },
                itemIndicator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"].variants?.size.md
            },
            lg: {
                item: {
                    textStyle: "md"
                },
                itemControl: {
                    padding: "4",
                    gap: "3.5"
                },
                itemAddon: {
                    px: "4",
                    py: "2",
                    borderTopWidth: "1px"
                },
                itemIndicator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"].variants?.size.lg
            }
        },
        variant: {
            surface: {
                item: {
                    borderWidth: "1px",
                    _checked: {
                        bg: "colorPalette.subtle",
                        color: "colorPalette.fg",
                        borderColor: "colorPalette.muted"
                    }
                },
                itemIndicator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"].variants?.variant.solid
            },
            subtle: {
                item: {
                    bg: "bg.muted"
                },
                itemControl: {
                    _checked: {
                        bg: "colorPalette.muted",
                        color: "colorPalette.fg"
                    }
                },
                itemIndicator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"].variants?.variant.outline
            },
            outline: {
                item: {
                    borderWidth: "1px",
                    _checked: {
                        boxShadow: "0 0 0 1px var(--shadow-color)",
                        boxShadowColor: "colorPalette.solid",
                        borderColor: "colorPalette.solid"
                    }
                },
                itemIndicator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"].variants?.variant.solid
            },
            solid: {
                item: {
                    borderWidth: "1px",
                    _checked: {
                        bg: "colorPalette.solid",
                        color: "colorPalette.contrast",
                        borderColor: "colorPalette.solid"
                    }
                },
                itemIndicator: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"].variants?.variant.inverted
            }
        },
        justify: {
            start: {
                item: {
                    "--radio-card-justify": "flex-start"
                }
            },
            end: {
                item: {
                    "--radio-card-justify": "flex-end"
                }
            },
            center: {
                item: {
                    "--radio-card-justify": "center"
                }
            }
        },
        align: {
            start: {
                item: {
                    "--radio-card-align": "flex-start"
                },
                itemControl: {
                    textAlign: "start"
                }
            },
            end: {
                item: {
                    "--radio-card-align": "flex-end"
                },
                itemControl: {
                    textAlign: "end"
                }
            },
            center: {
                item: {
                    "--radio-card-align": "center"
                },
                itemControl: {
                    textAlign: "center"
                }
            }
        },
        orientation: {
            vertical: {
                itemControl: {
                    flexDirection: "column"
                }
            },
            horizontal: {
                itemControl: {
                    flexDirection: "row"
                }
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "outline",
        align: "start",
        orientation: "horizontal"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/radio-group.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "radioGroupSlotRecipe": (()=>radioGroupSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/radiomark.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
const radioGroupSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-radio-group",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["radioGroupAnatomy"].keys(),
    base: {
        item: {
            display: "inline-flex",
            alignItems: "center",
            position: "relative",
            fontWeight: "medium",
            _disabled: {
                cursor: "disabled"
            }
        },
        itemControl: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"].base,
        label: {
            userSelect: "none",
            textStyle: "sm",
            _disabled: {
                opacity: "0.5"
            }
        }
    },
    variants: {
        variant: {
            outline: {
                itemControl: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"].variants?.variant?.outline
            },
            subtle: {
                itemControl: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"].variants?.variant?.subtle
            },
            solid: {
                itemControl: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"].variants?.variant?.solid
            }
        },
        size: {
            xs: {
                item: {
                    textStyle: "xs",
                    gap: "1.5"
                },
                itemControl: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"].variants?.size?.xs
            },
            sm: {
                item: {
                    textStyle: "sm",
                    gap: "2"
                },
                itemControl: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"].variants?.size?.sm
            },
            md: {
                item: {
                    textStyle: "sm",
                    gap: "2.5"
                },
                itemControl: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"].variants?.size?.md
            },
            lg: {
                item: {
                    textStyle: "md",
                    gap: "3"
                },
                itemControl: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radiomark$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radiomarkRecipe"].variants?.size?.lg
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "solid"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/rating-group.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ratingGroupSlotRecipe": (()=>ratingGroupSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const ratingGroupSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-rating-group",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["ratingGroupAnatomy"].keys(),
    base: {
        root: {
            display: "inline-flex"
        },
        control: {
            display: "inline-flex",
            alignItems: "center"
        },
        item: {
            display: "inline-flex",
            alignItems: "center",
            justifyContent: "center",
            userSelect: "none"
        },
        itemIndicator: {
            display: "inline-flex",
            alignItems: "center",
            justifyContent: "center",
            width: "1em",
            height: "1em",
            position: "relative",
            _icon: {
                stroke: "currentColor",
                width: "100%",
                height: "100%",
                display: "inline-block",
                flexShrink: 0,
                position: "absolute",
                left: 0,
                top: 0
            },
            "& [data-bg]": {
                color: "bg.emphasized"
            },
            "& [data-fg]": {
                color: "transparent"
            },
            "&[data-highlighted]:not([data-half])": {
                "& [data-fg]": {
                    color: "colorPalette.solid"
                }
            },
            "&[data-half]": {
                "& [data-fg]": {
                    color: "colorPalette.solid",
                    clipPath: "inset(0 50% 0 0)"
                }
            }
        }
    },
    variants: {
        size: {
            xs: {
                item: {
                    textStyle: "sm"
                }
            },
            sm: {
                item: {
                    textStyle: "md"
                }
            },
            md: {
                item: {
                    textStyle: "xl"
                }
            },
            lg: {
                item: {
                    textStyle: "2xl"
                }
            }
        }
    },
    defaultVariants: {
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/segment-group.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "segmentGroupSlotRecipe": (()=>segmentGroupSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ark$2d$ui$2f$react$2f$dist$2f$components$2f$segment$2d$group$2f$segment$2d$group$2e$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@ark-ui/react/dist/components/segment-group/segment-group.anatomy.js [app-rsc] (ecmascript)");
"use strict";
;
;
const segmentGroupSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-segment-group",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ark$2d$ui$2f$react$2f$dist$2f$components$2f$segment$2d$group$2f$segment$2d$group$2e$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["segmentGroupAnatomy"].keys(),
    base: {
        root: {
            "--segment-radius": "radii.l2",
            borderRadius: "l2",
            display: "inline-flex",
            boxShadow: "inset",
            minW: "max-content",
            textAlign: "center",
            position: "relative",
            isolation: "isolate",
            bg: "bg.muted"
        },
        item: {
            display: "flex",
            alignItems: "center",
            userSelect: "none",
            fontSize: "sm",
            position: "relative",
            color: "fg",
            borderRadius: "var(--segment-radius)",
            _disabled: {
                opacity: "0.5"
            },
            "&:has(input:focus-visible)": {
                focusRing: "outside"
            },
            _before: {
                content: '""',
                position: "absolute",
                insetInlineStart: 0,
                insetBlock: "1.5",
                bg: "border",
                width: "1px",
                transition: "opacity 0.2s"
            },
            "& + &[data-state=checked], &[data-state=checked] + &, &:first-of-type": {
                _before: {
                    opacity: "0"
                }
            },
            "&[data-state=checked][data-ssr]": {
                shadow: "sm",
                bg: "bg",
                borderRadius: "var(--segment-radius)"
            }
        },
        indicator: {
            shadow: "sm",
            pos: "absolute",
            bg: {
                _light: "bg",
                _dark: "bg.emphasized"
            },
            width: "var(--width)",
            height: "var(--height)",
            top: "var(--top)",
            left: "var(--left)",
            zIndex: -1,
            borderRadius: "var(--segment-radius)"
        }
    },
    variants: {
        size: {
            xs: {
                root: {
                    height: "6"
                },
                item: {
                    textStyle: "xs",
                    px: "3",
                    gap: "1"
                }
            },
            sm: {
                root: {
                    height: "8"
                },
                item: {
                    textStyle: "sm",
                    px: "4",
                    gap: "2"
                }
            },
            md: {
                root: {
                    height: "10"
                },
                item: {
                    textStyle: "sm",
                    px: "4",
                    gap: "2"
                }
            },
            lg: {
                root: {
                    height: "10"
                },
                item: {
                    textStyle: "md",
                    px: "5",
                    gap: "3"
                }
            }
        }
    },
    defaultVariants: {
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/slider.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "sliderSlotRecipe": (()=>sliderSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const sliderSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-slider",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["sliderAnatomy"].keys(),
    base: {
        root: {
            display: "flex",
            flexDirection: "column",
            gap: "1",
            textStyle: "sm",
            position: "relative",
            isolation: "isolate",
            touchAction: "none"
        },
        label: {
            fontWeight: "medium",
            textStyle: "sm"
        },
        control: {
            display: "inline-flex",
            alignItems: "center",
            position: "relative"
        },
        track: {
            overflow: "hidden",
            borderRadius: "full",
            flex: "1"
        },
        range: {
            width: "inherit",
            height: "inherit",
            _disabled: {
                bg: "border.emphasized!"
            }
        },
        markerGroup: {
            position: "absolute!",
            zIndex: "1"
        },
        marker: {
            "--marker-bg": {
                base: "white",
                _underValue: "colors.bg"
            },
            display: "flex",
            alignItems: "center",
            gap: "calc(var(--slider-thumb-size) / 2)",
            color: "fg.muted",
            textStyle: "xs"
        },
        markerIndicator: {
            width: "var(--slider-marker-size)",
            height: "var(--slider-marker-size)",
            borderRadius: "full",
            bg: "var(--marker-bg)"
        },
        thumb: {
            width: "var(--slider-thumb-size)",
            height: "var(--slider-thumb-size)",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            outline: 0,
            zIndex: "2",
            borderRadius: "full",
            _focusVisible: {
                ring: "2px",
                ringColor: "colorPalette.focusRing",
                ringOffset: "2px",
                ringOffsetColor: "bg"
            }
        }
    },
    variants: {
        size: {
            sm: {
                root: {
                    "--slider-thumb-size": "sizes.4",
                    "--slider-track-size": "sizes.1.5",
                    "--slider-marker-center": "6px",
                    "--slider-marker-size": "sizes.1",
                    "--slider-marker-inset": "3px"
                }
            },
            md: {
                root: {
                    "--slider-thumb-size": "sizes.5",
                    "--slider-track-size": "sizes.2",
                    "--slider-marker-center": "8px",
                    "--slider-marker-size": "sizes.1",
                    "--slider-marker-inset": "4px"
                }
            },
            lg: {
                root: {
                    "--slider-thumb-size": "sizes.6",
                    "--slider-track-size": "sizes.2.5",
                    "--slider-marker-center": "9px",
                    "--slider-marker-size": "sizes.1.5",
                    "--slider-marker-inset": "5px"
                }
            }
        },
        variant: {
            outline: {
                track: {
                    shadow: "inset",
                    bg: "bg.emphasized/72"
                },
                range: {
                    bg: "colorPalette.solid"
                },
                thumb: {
                    borderWidth: "2px",
                    borderColor: "colorPalette.solid",
                    bg: "bg",
                    _disabled: {
                        bg: "border.emphasized",
                        borderColor: "border.emphasized"
                    }
                }
            },
            solid: {
                track: {
                    bg: "colorPalette.subtle",
                    _disabled: {
                        bg: "bg.muted"
                    }
                },
                range: {
                    bg: "colorPalette.solid"
                },
                thumb: {
                    bg: "colorPalette.solid",
                    _disabled: {
                        bg: "border.emphasized"
                    }
                }
            }
        },
        orientation: {
            vertical: {
                root: {
                    display: "inline-flex"
                },
                control: {
                    flexDirection: "column",
                    height: "100%",
                    minWidth: "var(--slider-thumb-size)",
                    "&[data-has-mark-label], &:has(.chakra-slider__marker-label)": {
                        marginEnd: "4"
                    }
                },
                track: {
                    width: "var(--slider-track-size)"
                },
                thumb: {
                    left: "50%",
                    translate: "-50% 0"
                },
                markerGroup: {
                    insetStart: "var(--slider-marker-center)",
                    insetBlock: "var(--slider-marker-inset)"
                },
                marker: {
                    flexDirection: "row"
                }
            },
            horizontal: {
                control: {
                    flexDirection: "row",
                    width: "100%",
                    minHeight: "var(--slider-thumb-size)",
                    "&[data-has-mark-label], &:has(.chakra-slider__marker-label)": {
                        marginBottom: "4"
                    }
                },
                track: {
                    height: "var(--slider-track-size)"
                },
                thumb: {
                    top: "50%",
                    translate: "0 -50%"
                },
                markerGroup: {
                    top: "var(--slider-marker-center)",
                    insetInline: "var(--slider-marker-inset)"
                },
                marker: {
                    flexDirection: "column"
                }
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "outline",
        orientation: "horizontal"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/stat.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "statSlotRecipe": (()=>statSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const statSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-stat",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["statAnatomy"].keys(),
    base: {
        root: {
            display: "flex",
            flexDirection: "column",
            gap: "1",
            position: "relative",
            flex: "1"
        },
        label: {
            display: "inline-flex",
            gap: "1.5",
            alignItems: "center",
            color: "fg.muted",
            textStyle: "sm"
        },
        helpText: {
            color: "fg.muted",
            textStyle: "xs"
        },
        valueUnit: {
            color: "fg.muted",
            textStyle: "xs",
            fontWeight: "initial",
            letterSpacing: "initial"
        },
        valueText: {
            verticalAlign: "baseline",
            fontWeight: "semibold",
            letterSpacing: "tight",
            fontFeatureSettings: "pnum",
            fontVariantNumeric: "proportional-nums",
            display: "inline-flex",
            gap: "1"
        },
        indicator: {
            display: "inline-flex",
            alignItems: "center",
            justifyContent: "center",
            marginEnd: 1,
            "& :where(svg)": {
                w: "1em",
                h: "1em"
            },
            "&[data-type=up]": {
                color: "fg.success"
            },
            "&[data-type=down]": {
                color: "fg.error"
            }
        }
    },
    variants: {
        size: {
            sm: {
                valueText: {
                    textStyle: "xl"
                }
            },
            md: {
                valueText: {
                    textStyle: "2xl"
                }
            },
            lg: {
                valueText: {
                    textStyle: "3xl"
                }
            }
        }
    },
    defaultVariants: {
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/status.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "statusSlotRecipe": (()=>statusSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const statusSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-status",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["statusAnatomy"].keys(),
    base: {
        root: {
            display: "inline-flex",
            alignItems: "center",
            gap: "2"
        },
        indicator: {
            width: "0.64em",
            height: "0.64em",
            flexShrink: 0,
            borderRadius: "full",
            forcedColorAdjust: "none",
            bg: "colorPalette.solid"
        }
    },
    variants: {
        size: {
            sm: {
                root: {
                    textStyle: "xs"
                }
            },
            md: {
                root: {
                    textStyle: "sm"
                }
            },
            lg: {
                root: {
                    textStyle: "md"
                }
            }
        }
    },
    defaultVariants: {
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/steps.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "stepsSlotRecipe": (()=>stepsSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const stepsSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-steps",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["stepsAnatomy"].keys(),
    base: {
        root: {
            display: "flex",
            width: "full"
        },
        list: {
            display: "flex",
            justifyContent: "space-between",
            "--steps-gutter": "spacing.3",
            "--steps-thickness": "2px"
        },
        title: {
            fontWeight: "medium",
            color: "fg"
        },
        description: {
            color: "fg.muted"
        },
        separator: {
            bg: "border",
            flex: "1"
        },
        indicator: {
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            flexShrink: "0",
            borderRadius: "full",
            fontWeight: "medium",
            width: "var(--steps-size)",
            height: "var(--steps-size)",
            _icon: {
                flexShrink: "0",
                width: "var(--steps-icon-size)",
                height: "var(--steps-icon-size)"
            }
        },
        item: {
            position: "relative",
            display: "flex",
            gap: "3",
            flex: "1 0 0",
            "&:last-of-type": {
                flex: "initial",
                "& [data-part=separator]": {
                    display: "none"
                }
            }
        },
        trigger: {
            display: "flex",
            alignItems: "center",
            gap: "3",
            textAlign: "start",
            focusVisibleRing: "outside",
            borderRadius: "l2"
        },
        content: {
            focusVisibleRing: "outside"
        }
    },
    variants: {
        orientation: {
            vertical: {
                root: {
                    flexDirection: "row",
                    height: "100%"
                },
                list: {
                    flexDirection: "column",
                    alignItems: "flex-start"
                },
                separator: {
                    position: "absolute",
                    width: "var(--steps-thickness)",
                    height: "100%",
                    maxHeight: "calc(100% - var(--steps-size) - var(--steps-gutter) * 2)",
                    top: "calc(var(--steps-size) + var(--steps-gutter))",
                    insetStart: "calc(var(--steps-size) / 2 - 1px)"
                },
                item: {
                    alignItems: "flex-start"
                }
            },
            horizontal: {
                root: {
                    flexDirection: "column",
                    width: "100%"
                },
                list: {
                    flexDirection: "row",
                    alignItems: "center"
                },
                separator: {
                    width: "100%",
                    height: "var(--steps-thickness)",
                    marginX: "var(--steps-gutter)"
                },
                item: {
                    alignItems: "center"
                }
            }
        },
        variant: {
            solid: {
                indicator: {
                    _incomplete: {
                        borderWidth: "var(--steps-thickness)"
                    },
                    _current: {
                        bg: "colorPalette.muted",
                        borderWidth: "var(--steps-thickness)",
                        borderColor: "colorPalette.solid",
                        color: "colorPalette.fg"
                    },
                    _complete: {
                        bg: "colorPalette.solid",
                        borderColor: "colorPalette.solid",
                        color: "colorPalette.contrast"
                    }
                },
                separator: {
                    _complete: {
                        bg: "colorPalette.solid"
                    }
                }
            },
            subtle: {
                indicator: {
                    _incomplete: {
                        bg: "bg.muted"
                    },
                    _current: {
                        bg: "colorPalette.muted",
                        color: "colorPalette.fg"
                    },
                    _complete: {
                        bg: "colorPalette.emphasized",
                        color: "colorPalette.fg"
                    }
                },
                separator: {
                    _complete: {
                        bg: "colorPalette.emphasized"
                    }
                }
            }
        },
        size: {
            xs: {
                root: {
                    gap: "2.5"
                },
                list: {
                    "--steps-size": "sizes.6",
                    "--steps-icon-size": "sizes.3.5",
                    textStyle: "xs"
                },
                title: {
                    textStyle: "sm"
                }
            },
            sm: {
                root: {
                    gap: "3"
                },
                list: {
                    "--steps-size": "sizes.8",
                    "--steps-icon-size": "sizes.4",
                    textStyle: "xs"
                },
                title: {
                    textStyle: "sm"
                }
            },
            md: {
                root: {
                    gap: "4"
                },
                list: {
                    "--steps-size": "sizes.10",
                    "--steps-icon-size": "sizes.4",
                    textStyle: "sm"
                },
                title: {
                    textStyle: "sm"
                }
            },
            lg: {
                root: {
                    gap: "6"
                },
                list: {
                    "--steps-size": "sizes.11",
                    "--steps-icon-size": "sizes.5",
                    textStyle: "md"
                },
                title: {
                    textStyle: "md"
                }
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "solid",
        orientation: "horizontal"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/switch.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "switchSlotRecipe": (()=>switchSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const switchSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["switchAnatomy"].keys(),
    className: "chakra-switch",
    base: {
        root: {
            display: "inline-flex",
            gap: "2.5",
            alignItems: "center",
            position: "relative",
            verticalAlign: "middle",
            "--switch-diff": "calc(var(--switch-width) - var(--switch-height))",
            "--switch-x": {
                base: "var(--switch-diff)",
                _rtl: "calc(var(--switch-diff) * -1)"
            }
        },
        label: {
            lineHeight: "1",
            userSelect: "none",
            fontSize: "sm",
            fontWeight: "medium",
            _disabled: {
                opacity: "0.5"
            }
        },
        indicator: {
            position: "absolute",
            height: "var(--switch-height)",
            width: "var(--switch-height)",
            fontSize: "var(--switch-indicator-font-size)",
            fontWeight: "medium",
            flexShrink: 0,
            userSelect: "none",
            display: "grid",
            placeContent: "center",
            transition: "inset-inline-start 0.12s ease",
            insetInlineStart: "calc(var(--switch-x) - 2px)",
            _checked: {
                insetInlineStart: "2px"
            }
        },
        control: {
            display: "inline-flex",
            gap: "0.5rem",
            flexShrink: 0,
            justifyContent: "flex-start",
            cursor: "switch",
            borderRadius: "full",
            position: "relative",
            width: "var(--switch-width)",
            height: "var(--switch-height)",
            transition: "backgrounds",
            _disabled: {
                opacity: "0.5",
                cursor: "not-allowed"
            },
            _invalid: {
                outline: "2px solid",
                outlineColor: "border.error",
                outlineOffset: "2px"
            }
        },
        thumb: {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            flexShrink: 0,
            transitionProperty: "translate",
            transitionDuration: "fast",
            borderRadius: "inherit",
            _checked: {
                translate: "var(--switch-x) 0"
            }
        }
    },
    variants: {
        variant: {
            solid: {
                control: {
                    borderRadius: "full",
                    bg: "bg.emphasized",
                    focusVisibleRing: "outside",
                    _checked: {
                        bg: "colorPalette.solid"
                    }
                },
                thumb: {
                    bg: "white",
                    width: "var(--switch-height)",
                    height: "var(--switch-height)",
                    scale: "0.8",
                    boxShadow: "sm",
                    _checked: {
                        bg: "colorPalette.contrast"
                    }
                }
            },
            raised: {
                control: {
                    borderRadius: "full",
                    height: "calc(var(--switch-height) / 2)",
                    bg: "bg.muted",
                    boxShadow: "inset",
                    _checked: {
                        bg: "colorPalette.solid/60"
                    }
                },
                thumb: {
                    width: "var(--switch-height)",
                    height: "var(--switch-height)",
                    position: "relative",
                    top: "calc(var(--switch-height) * -0.25)",
                    bg: "white",
                    boxShadow: "xs",
                    focusVisibleRing: "outside",
                    _checked: {
                        bg: "colorPalette.solid"
                    }
                }
            }
        },
        size: {
            xs: {
                root: {
                    "--switch-width": "sizes.6",
                    "--switch-height": "sizes.3",
                    "--switch-indicator-font-size": "fontSizes.xs"
                }
            },
            sm: {
                root: {
                    "--switch-width": "sizes.8",
                    "--switch-height": "sizes.4",
                    "--switch-indicator-font-size": "fontSizes.xs"
                }
            },
            md: {
                root: {
                    "--switch-width": "sizes.10",
                    "--switch-height": "sizes.5",
                    "--switch-indicator-font-size": "fontSizes.sm"
                }
            },
            lg: {
                root: {
                    "--switch-width": "sizes.12",
                    "--switch-height": "sizes.6",
                    "--switch-indicator-font-size": "fontSizes.md"
                }
            }
        }
    },
    defaultVariants: {
        variant: "solid",
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/table.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "tableSlotRecipe": (()=>tableSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const tableSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    className: "chakra-table",
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["tableAnatomy"].keys(),
    base: {
        root: {
            fontVariantNumeric: "lining-nums tabular-nums",
            borderCollapse: "collapse",
            width: "full",
            textAlign: "start",
            verticalAlign: "top"
        },
        row: {
            _selected: {
                bg: "colorPalette.subtle"
            }
        },
        cell: {
            textAlign: "start",
            alignItems: "center"
        },
        columnHeader: {
            fontWeight: "medium",
            textAlign: "start",
            color: "fg"
        },
        caption: {
            fontWeight: "medium",
            textStyle: "xs"
        },
        footer: {
            fontWeight: "medium"
        }
    },
    variants: {
        interactive: {
            true: {
                body: {
                    "& tr": {
                        _hover: {
                            bg: "colorPalette.subtle"
                        }
                    }
                }
            }
        },
        stickyHeader: {
            true: {
                header: {
                    "& :where(tr)": {
                        top: "var(--table-sticky-offset, 0)",
                        position: "sticky",
                        zIndex: 1
                    }
                }
            }
        },
        striped: {
            true: {
                row: {
                    "&:nth-of-type(odd) td": {
                        bg: "bg.muted"
                    }
                }
            }
        },
        showColumnBorder: {
            true: {
                columnHeader: {
                    "&:not(:last-of-type)": {
                        borderInlineEndWidth: "1px"
                    }
                },
                cell: {
                    "&:not(:last-of-type)": {
                        borderInlineEndWidth: "1px"
                    }
                }
            }
        },
        variant: {
            line: {
                columnHeader: {
                    borderBottomWidth: "1px"
                },
                cell: {
                    borderBottomWidth: "1px"
                },
                row: {
                    bg: "bg"
                }
            },
            outline: {
                root: {
                    boxShadow: "0 0 0 1px {colors.border}",
                    overflow: "hidden"
                },
                columnHeader: {
                    borderBottomWidth: "1px"
                },
                header: {
                    bg: "bg.muted"
                },
                row: {
                    "&:not(:last-of-type)": {
                        borderBottomWidth: "1px"
                    }
                },
                footer: {
                    borderTopWidth: "1px"
                }
            }
        },
        size: {
            sm: {
                root: {
                    textStyle: "sm"
                },
                columnHeader: {
                    px: "2",
                    py: "2"
                },
                cell: {
                    px: "2",
                    py: "2"
                }
            },
            md: {
                root: {
                    textStyle: "sm"
                },
                columnHeader: {
                    px: "3",
                    py: "3"
                },
                cell: {
                    px: "3",
                    py: "3"
                }
            },
            lg: {
                root: {
                    textStyle: "md"
                },
                columnHeader: {
                    px: "4",
                    py: "3"
                },
                cell: {
                    px: "4",
                    py: "3"
                }
            }
        }
    },
    defaultVariants: {
        variant: "line",
        size: "md"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/tabs.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "tabsSlotRecipe": (()=>tabsSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const tabsSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["tabsAnatomy"].keys(),
    className: "chakra-tabs",
    base: {
        root: {
            "--tabs-trigger-radius": "radii.l2",
            position: "relative",
            _horizontal: {
                display: "block"
            },
            _vertical: {
                display: "flex"
            }
        },
        list: {
            display: "inline-flex",
            position: "relative",
            isolation: "isolate",
            "--tabs-indicator-shadow": "shadows.xs",
            "--tabs-indicator-bg": "colors.bg",
            minH: "var(--tabs-height)",
            _horizontal: {
                flexDirection: "row"
            },
            _vertical: {
                flexDirection: "column"
            }
        },
        trigger: {
            outline: "0",
            minW: "var(--tabs-height)",
            height: "var(--tabs-height)",
            display: "flex",
            alignItems: "center",
            fontWeight: "medium",
            position: "relative",
            cursor: "button",
            gap: "2",
            _focusVisible: {
                zIndex: 1,
                outline: "2px solid",
                outlineColor: "colorPalette.focusRing"
            },
            _disabled: {
                cursor: "not-allowed",
                opacity: 0.5
            }
        },
        content: {
            focusVisibleRing: "inside",
            _horizontal: {
                width: "100%",
                pt: "var(--tabs-content-padding)"
            },
            _vertical: {
                height: "100%",
                ps: "var(--tabs-content-padding)"
            }
        },
        indicator: {
            width: "var(--width)",
            height: "var(--height)",
            borderRadius: "var(--tabs-indicator-radius)",
            bg: "var(--tabs-indicator-bg)",
            shadow: "var(--tabs-indicator-shadow)",
            zIndex: -1
        }
    },
    variants: {
        fitted: {
            true: {
                list: {
                    display: "flex"
                },
                trigger: {
                    flex: 1,
                    textAlign: "center",
                    justifyContent: "center"
                }
            }
        },
        justify: {
            start: {
                list: {
                    justifyContent: "flex-start"
                }
            },
            center: {
                list: {
                    justifyContent: "center"
                }
            },
            end: {
                list: {
                    justifyContent: "flex-end"
                }
            }
        },
        size: {
            sm: {
                root: {
                    "--tabs-height": "sizes.9",
                    "--tabs-content-padding": "spacing.3"
                },
                trigger: {
                    py: "1",
                    px: "3",
                    textStyle: "sm"
                }
            },
            md: {
                root: {
                    "--tabs-height": "sizes.10",
                    "--tabs-content-padding": "spacing.4"
                },
                trigger: {
                    py: "2",
                    px: "4",
                    textStyle: "sm"
                }
            },
            lg: {
                root: {
                    "--tabs-height": "sizes.11",
                    "--tabs-content-padding": "spacing.4.5"
                },
                trigger: {
                    py: "2",
                    px: "4.5",
                    textStyle: "md"
                }
            }
        },
        variant: {
            line: {
                list: {
                    display: "flex",
                    borderColor: "border",
                    _horizontal: {
                        borderBottomWidth: "1px"
                    },
                    _vertical: {
                        borderEndWidth: "1px"
                    }
                },
                trigger: {
                    color: "fg.muted",
                    _disabled: {
                        _active: {
                            bg: "initial"
                        }
                    },
                    _selected: {
                        color: "fg",
                        _horizontal: {
                            layerStyle: "indicator.bottom",
                            "--indicator-offset-y": "-1px",
                            "--indicator-color": "colors.colorPalette.solid"
                        },
                        _vertical: {
                            layerStyle: "indicator.end",
                            "--indicator-offset-x": "-1px"
                        }
                    }
                }
            },
            subtle: {
                trigger: {
                    borderRadius: "var(--tabs-trigger-radius)",
                    color: "fg.muted",
                    _selected: {
                        bg: "colorPalette.subtle",
                        color: "colorPalette.fg"
                    }
                }
            },
            enclosed: {
                list: {
                    bg: "bg.muted",
                    padding: "1",
                    borderRadius: "l3",
                    minH: "calc(var(--tabs-height) - 4px)"
                },
                trigger: {
                    justifyContent: "center",
                    color: "fg.muted",
                    borderRadius: "var(--tabs-trigger-radius)",
                    _selected: {
                        bg: "bg",
                        color: "colorPalette.fg",
                        shadow: "xs"
                    }
                }
            },
            outline: {
                list: {
                    "--line-thickness": "1px",
                    "--line-offset": "calc(var(--line-thickness) * -1)",
                    borderColor: "border",
                    display: "flex",
                    _horizontal: {
                        _before: {
                            content: '""',
                            position: "absolute",
                            bottom: "0px",
                            width: "100%",
                            borderBottomWidth: "var(--line-thickness)",
                            borderBottomColor: "border"
                        }
                    },
                    _vertical: {
                        _before: {
                            content: '""',
                            position: "absolute",
                            insetInline: "var(--line-offset)",
                            height: "calc(100% - calc(var(--line-thickness) * 2))",
                            borderEndWidth: "var(--line-thickness)",
                            borderEndColor: "border"
                        }
                    }
                },
                trigger: {
                    color: "fg.muted",
                    borderWidth: "1px",
                    borderColor: "transparent",
                    _selected: {
                        bg: "currentBg",
                        color: "colorPalette.fg"
                    },
                    _horizontal: {
                        borderTopRadius: "var(--tabs-trigger-radius)",
                        marginBottom: "var(--line-offset)",
                        marginEnd: {
                            _notLast: "var(--line-offset)"
                        },
                        _selected: {
                            borderColor: "border",
                            borderBottomColor: "transparent"
                        }
                    },
                    _vertical: {
                        borderStartRadius: "var(--tabs-trigger-radius)",
                        marginEnd: "var(--line-offset)",
                        marginBottom: {
                            _notLast: "var(--line-offset)"
                        },
                        _selected: {
                            borderColor: "border",
                            borderEndColor: "transparent"
                        }
                    }
                }
            },
            plain: {
                trigger: {
                    color: "fg.muted",
                    _selected: {
                        color: "colorPalette.fg"
                    },
                    borderRadius: "var(--tabs-trigger-radius)",
                    "&[data-selected][data-ssr]": {
                        bg: "var(--tabs-indicator-bg)",
                        shadow: "var(--tabs-indicator-shadow)",
                        borderRadius: "var(--tabs-indicator-radius)"
                    }
                }
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "line"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/tag.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "tagSlotRecipe": (()=>tagSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$badge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/badge.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
const badgeVariant = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$badge$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["badgeRecipe"].variants?.variant;
const tagSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["tagAnatomy"].keys(),
    className: "chakra-tag",
    base: {
        root: {
            display: "inline-flex",
            alignItems: "center",
            verticalAlign: "top",
            maxWidth: "100%",
            userSelect: "none",
            borderRadius: "l2",
            focusVisibleRing: "outside"
        },
        label: {
            lineClamp: "1"
        },
        closeTrigger: {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            outline: "0",
            borderRadius: "l1",
            color: "currentColor",
            focusVisibleRing: "inside",
            focusRingWidth: "2px"
        },
        startElement: {
            flexShrink: 0,
            boxSize: "var(--tag-element-size)",
            ms: "var(--tag-element-offset)",
            "&:has([data-scope=avatar])": {
                boxSize: "var(--tag-avatar-size)",
                ms: "calc(var(--tag-element-offset) * 1.5)"
            },
            _icon: {
                boxSize: "100%"
            }
        },
        endElement: {
            flexShrink: 0,
            boxSize: "var(--tag-element-size)",
            me: "var(--tag-element-offset)",
            _icon: {
                boxSize: "100%"
            },
            "&:has(button)": {
                ms: "calc(var(--tag-element-offset) * -1)"
            }
        }
    },
    variants: {
        size: {
            sm: {
                root: {
                    px: "1.5",
                    minH: "4.5",
                    gap: "1",
                    "--tag-avatar-size": "spacing.3",
                    "--tag-element-size": "spacing.3",
                    "--tag-element-offset": "-2px"
                },
                label: {
                    textStyle: "xs"
                }
            },
            md: {
                root: {
                    px: "1.5",
                    minH: "5",
                    gap: "1",
                    "--tag-avatar-size": "spacing.3.5",
                    "--tag-element-size": "spacing.3.5",
                    "--tag-element-offset": "-2px"
                },
                label: {
                    textStyle: "xs"
                }
            },
            lg: {
                root: {
                    px: "2",
                    minH: "6",
                    gap: "1.5",
                    "--tag-avatar-size": "spacing.4.5",
                    "--tag-element-size": "spacing.4",
                    "--tag-element-offset": "-3px"
                },
                label: {
                    textStyle: "sm"
                }
            },
            xl: {
                root: {
                    px: "2.5",
                    minH: "8",
                    gap: "1.5",
                    "--tag-avatar-size": "spacing.6",
                    "--tag-element-size": "spacing.4.5",
                    "--tag-element-offset": "-4px"
                },
                label: {
                    textStyle: "sm"
                }
            }
        },
        variant: {
            subtle: {
                root: badgeVariant?.subtle
            },
            solid: {
                root: badgeVariant?.solid
            },
            outline: {
                root: badgeVariant?.outline
            },
            surface: {
                root: badgeVariant?.surface
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "surface"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/timeline.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "timelineSlotRecipe": (()=>timelineSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const timelineSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["timelineAnatomy"].keys(),
    className: "chakra-timeline",
    base: {
        root: {
            display: "flex",
            flexDirection: "column",
            width: "full",
            "--timeline-thickness": "1px",
            "--timeline-gutter": "4px"
        },
        item: {
            display: "flex",
            position: "relative",
            alignItems: "flex-start",
            flexShrink: 0,
            gap: "4",
            _last: {
                "& :where(.chakra-timeline__separator)": {
                    display: "none"
                }
            }
        },
        separator: {
            position: "absolute",
            borderStartWidth: "var(--timeline-thickness)",
            ms: "calc(-1 * var(--timeline-thickness) / 2)",
            insetInlineStart: "calc(var(--timeline-indicator-size) / 2)",
            insetBlock: "0",
            borderColor: "border"
        },
        indicator: {
            outline: "2px solid {colors.bg}",
            position: "relative",
            flexShrink: "0",
            boxSize: "var(--timeline-indicator-size)",
            fontSize: "var(--timeline-font-size)",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            borderRadius: "full",
            fontWeight: "medium"
        },
        connector: {
            alignSelf: "stretch",
            position: "relative"
        },
        content: {
            pb: "6",
            display: "flex",
            flexDirection: "column",
            width: "full",
            gap: "2"
        },
        title: {
            display: "flex",
            fontWeight: "medium",
            flexWrap: "wrap",
            gap: "1.5",
            alignItems: "center",
            mt: "var(--timeline-margin)"
        },
        description: {
            color: "fg.muted",
            textStyle: "xs"
        }
    },
    variants: {
        variant: {
            subtle: {
                indicator: {
                    bg: "colorPalette.muted"
                }
            },
            solid: {
                indicator: {
                    bg: "colorPalette.solid",
                    color: "colorPalette.contrast"
                }
            },
            outline: {
                indicator: {
                    bg: "currentBg",
                    borderWidth: "1px",
                    borderColor: "colorPalette.muted"
                }
            },
            plain: {}
        },
        size: {
            sm: {
                root: {
                    "--timeline-indicator-size": "sizes.4",
                    "--timeline-font-size": "fontSizes.2xs"
                },
                title: {
                    textStyle: "xs"
                }
            },
            md: {
                root: {
                    "--timeline-indicator-size": "sizes.5",
                    "--timeline-font-size": "fontSizes.xs"
                },
                title: {
                    textStyle: "sm"
                }
            },
            lg: {
                root: {
                    "--timeline-indicator-size": "sizes.6",
                    "--timeline-font-size": "fontSizes.xs"
                },
                title: {
                    mt: "0.5",
                    textStyle: "sm"
                }
            },
            xl: {
                root: {
                    "--timeline-indicator-size": "sizes.8",
                    "--timeline-font-size": "fontSizes.sm"
                },
                title: {
                    mt: "1.5",
                    textStyle: "sm"
                }
            }
        }
    },
    defaultVariants: {
        size: "md",
        variant: "solid"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/toast.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "toastSlotRecipe": (()=>toastSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/anatomy.js [app-rsc] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
;
const toastSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$anatomy$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$locals$3e$__["toastAnatomy"].keys(),
    className: "chakra-toast",
    base: {
        root: {
            width: "full",
            display: "flex",
            alignItems: "flex-start",
            position: "relative",
            gap: "3",
            py: "4",
            ps: "4",
            pe: "6",
            borderRadius: "l2",
            translate: "var(--x) var(--y)",
            scale: "var(--scale)",
            zIndex: "var(--z-index)",
            height: "var(--height)",
            opacity: "var(--opacity)",
            willChange: "translate, opacity, scale",
            transition: "translate 400ms, scale 400ms, opacity 400ms, height 400ms, box-shadow 200ms",
            transitionTimingFunction: "cubic-bezier(0.21, 1.02, 0.73, 1)",
            _closed: {
                transition: "translate 400ms, scale 400ms, opacity 200ms",
                transitionTimingFunction: "cubic-bezier(0.06, 0.71, 0.55, 1)"
            },
            bg: "bg.panel",
            color: "fg",
            boxShadow: "xl",
            "--toast-trigger-bg": "colors.bg.muted",
            "&[data-type=warning]": {
                bg: "orange.solid",
                color: "orange.contrast",
                "--toast-trigger-bg": "{white/10}",
                "--toast-border-color": "{white/40}"
            },
            "&[data-type=success]": {
                bg: "green.solid",
                color: "green.contrast",
                "--toast-trigger-bg": "{white/10}",
                "--toast-border-color": "{white/40}"
            },
            "&[data-type=error]": {
                bg: "red.solid",
                color: "red.contrast",
                "--toast-trigger-bg": "{white/10}",
                "--toast-border-color": "{white/40}"
            }
        },
        title: {
            fontWeight: "medium",
            textStyle: "sm",
            marginEnd: "2"
        },
        description: {
            display: "inline",
            textStyle: "sm",
            opacity: "0.8"
        },
        indicator: {
            flexShrink: "0",
            boxSize: "5"
        },
        actionTrigger: {
            textStyle: "sm",
            fontWeight: "medium",
            height: "8",
            px: "3",
            borderRadius: "l2",
            alignSelf: "center",
            borderWidth: "1px",
            borderColor: "var(--toast-border-color, inherit)",
            transition: "background 200ms",
            _hover: {
                bg: "var(--toast-trigger-bg)"
            }
        },
        closeTrigger: {
            position: "absolute",
            top: "1",
            insetEnd: "1",
            padding: "1",
            display: "inline-flex",
            alignItems: "center",
            justifyContent: "center",
            color: "{currentColor/60}",
            borderRadius: "l2",
            textStyle: "md",
            transition: "background 200ms",
            _icon: {
                boxSize: "1em"
            }
        }
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/tooltip.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "tooltipSlotRecipe": (()=>tooltipSlotRecipe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$tooltip$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__tooltipAnatomy$3e$__ = __turbopack_context__.i("[project]/node_modules/@zag-js/tooltip/dist/index.mjs [app-rsc] (ecmascript) <export anatomy as tooltipAnatomy>");
"use strict";
;
;
const tooltipSlotRecipe = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineSlotRecipe"])({
    slots: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$zag$2d$js$2f$tooltip$2f$dist$2f$index$2e$mjs__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__$3c$export__anatomy__as__tooltipAnatomy$3e$__["tooltipAnatomy"].keys(),
    className: "chakra-tooltip",
    base: {
        content: {
            "--tooltip-bg": "colors.bg.inverted",
            bg: "var(--tooltip-bg)",
            color: "fg.inverted",
            px: "2.5",
            py: "1",
            borderRadius: "l2",
            fontWeight: "medium",
            textStyle: "xs",
            boxShadow: "md",
            maxW: "xs",
            zIndex: "tooltip",
            transformOrigin: "var(--transform-origin)",
            _open: {
                animationStyle: "scale-fade-in",
                animationDuration: "fast"
            },
            _closed: {
                animationStyle: "scale-fade-out",
                animationDuration: "fast"
            }
        },
        arrow: {
            "--arrow-size": "sizes.2",
            "--arrow-background": "var(--tooltip-bg)"
        },
        arrowTip: {
            borderTopWidth: "1px",
            borderInlineStartWidth: "1px",
            borderColor: "var(--tooltip-bg)"
        }
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/slot-recipes.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "slotRecipes": (()=>slotRecipes)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$accordion$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/accordion.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$action$2d$bar$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/action-bar.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$alert$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/alert.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$avatar$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/avatar.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$blockquote$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/blockquote.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$breadcrumb$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/breadcrumb.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$card$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/card.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkbox$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/checkbox.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkbox$2d$card$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/checkbox-card.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$collapsible$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/collapsible.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$color$2d$picker$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/color-picker.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$data$2d$list$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/data-list.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$dialog$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/dialog.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$drawer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/drawer.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$editable$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/editable.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$empty$2d$state$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/empty-state.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$field$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/field.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$fieldset$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/fieldset.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$file$2d$upload$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/file-upload.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$hover$2d$card$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/hover-card.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$list$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/list.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$menu$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/menu.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$native$2d$select$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/native-select.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$number$2d$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/number-input.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$pin$2d$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/pin-input.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$popover$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/popover.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$progress$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/progress.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$progress$2d$circle$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/progress-circle.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$qr$2d$code$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/qr-code.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radio$2d$card$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/radio-card.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radio$2d$group$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/radio-group.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$rating$2d$group$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/rating-group.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$segment$2d$group$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/segment-group.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$select$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/select.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$slider$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/slider.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$stat$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/stat.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$status$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/status.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$steps$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/steps.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$switch$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/switch.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$table$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/table.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$tabs$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/tabs.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$tag$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/tag.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$timeline$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/timeline.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$toast$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/toast.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$tooltip$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes/tooltip.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const slotRecipes = {
    accordion: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$accordion$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["accordionSlotRecipe"],
    actionBar: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$action$2d$bar$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["actionBarSlotRecipe"],
    alert: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$alert$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["alertSlotRecipe"],
    avatar: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$avatar$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["avatarSlotRecipe"],
    blockquote: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$blockquote$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["blockquoteSlotRecipe"],
    breadcrumb: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$breadcrumb$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["breadcrumbSlotRecipe"],
    card: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$card$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["cardSlotRecipe"],
    checkbox: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkbox$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkboxSlotRecipe"],
    checkboxCard: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$checkbox$2d$card$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["checkboxCardSlotRecipe"],
    collapsible: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$collapsible$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["collapsibleSlotRecipe"],
    dataList: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$data$2d$list$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["dataListSlotRecipe"],
    dialog: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$dialog$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["dialogSlotRecipe"],
    drawer: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$drawer$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["drawerSlotRecipe"],
    editable: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$editable$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["editableSlotRecipe"],
    emptyState: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$empty$2d$state$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["emptyStateSlotRecipe"],
    field: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$field$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["fieldSlotRecipe"],
    fieldset: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$fieldset$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["fieldsetSlotRecipe"],
    fileUpload: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$file$2d$upload$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["fileUploadSlotRecipe"],
    hoverCard: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$hover$2d$card$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["hoverCardSlotRecipe"],
    list: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$list$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["listSlotRecipe"],
    menu: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$menu$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["menuSlotRecipe"],
    nativeSelect: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$native$2d$select$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["nativeSelectSlotRecipe"],
    numberInput: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$number$2d$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["numberInputSlotRecipe"],
    pinInput: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$pin$2d$input$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["pinInputSlotRecipe"],
    popover: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$popover$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["popoverSlotRecipe"],
    progress: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$progress$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["progressSlotRecipe"],
    progressCircle: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$progress$2d$circle$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["progressCircleSlotRecipe"],
    radioCard: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radio$2d$card$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radioCardSlotRecipe"],
    radioGroup: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$radio$2d$group$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radioGroupSlotRecipe"],
    ratingGroup: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$rating$2d$group$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["ratingGroupSlotRecipe"],
    segmentGroup: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$segment$2d$group$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["segmentGroupSlotRecipe"],
    select: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$select$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["selectSlotRecipe"],
    slider: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$slider$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["sliderSlotRecipe"],
    stat: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$stat$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["statSlotRecipe"],
    steps: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$steps$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["stepsSlotRecipe"],
    switch: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$switch$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["switchSlotRecipe"],
    table: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$table$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["tableSlotRecipe"],
    tabs: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$tabs$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["tabsSlotRecipe"],
    tag: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$tag$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["tagSlotRecipe"],
    toast: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$toast$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["toastSlotRecipe"],
    tooltip: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$tooltip$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["tooltipSlotRecipe"],
    status: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$status$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["statusSlotRecipe"],
    timeline: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$timeline$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["timelineSlotRecipe"],
    colorPicker: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$color$2d$picker$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["colorPickerSlotRecipe"],
    qrCode: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2f$qr$2d$code$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["qrCodeSlotRecipe"]
};
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/text-styles.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "textStyles": (()=>textStyles)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const textStyles = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTextStyles"])({
    "2xs": {
        value: {
            fontSize: "2xs",
            lineHeight: "0.75rem"
        }
    },
    xs: {
        value: {
            fontSize: "xs",
            lineHeight: "1rem"
        }
    },
    sm: {
        value: {
            fontSize: "sm",
            lineHeight: "1.25rem"
        }
    },
    md: {
        value: {
            fontSize: "md",
            lineHeight: "1.5rem"
        }
    },
    lg: {
        value: {
            fontSize: "lg",
            lineHeight: "1.75rem"
        }
    },
    xl: {
        value: {
            fontSize: "xl",
            lineHeight: "1.875rem"
        }
    },
    "2xl": {
        value: {
            fontSize: "2xl",
            lineHeight: "2rem"
        }
    },
    "3xl": {
        value: {
            fontSize: "3xl",
            lineHeight: "2.375rem"
        }
    },
    "4xl": {
        value: {
            fontSize: "4xl",
            lineHeight: "2.75rem",
            letterSpacing: "-0.025em"
        }
    },
    "5xl": {
        value: {
            fontSize: "5xl",
            lineHeight: "3.75rem",
            letterSpacing: "-0.025em"
        }
    },
    "6xl": {
        value: {
            fontSize: "6xl",
            lineHeight: "4.5rem",
            letterSpacing: "-0.025em"
        }
    },
    "7xl": {
        value: {
            fontSize: "7xl",
            lineHeight: "5.75rem",
            letterSpacing: "-0.025em"
        }
    },
    none: {
        value: {}
    },
    label: {
        value: {
            fontSize: "sm",
            lineHeight: "1.25rem",
            fontWeight: "medium"
        }
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/animations.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "animations": (()=>animations)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const animations = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].animations({
    spin: {
        value: "spin 1s linear infinite"
    },
    ping: {
        value: "ping 1s cubic-bezier(0, 0, 0.2, 1) infinite"
    },
    pulse: {
        value: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite"
    },
    bounce: {
        value: "bounce 1s infinite"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/aspect-ratios.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "aspectRatios": (()=>aspectRatios)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const aspectRatios = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].aspectRatios({
    square: {
        value: "1 / 1"
    },
    landscape: {
        value: "4 / 3"
    },
    portrait: {
        value: "3 / 4"
    },
    wide: {
        value: "16 / 9"
    },
    ultrawide: {
        value: "18 / 5"
    },
    golden: {
        value: "1.618 / 1"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/blurs.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "blurs": (()=>blurs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const blurs = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].blurs({
    none: {
        value: " "
    },
    sm: {
        value: "4px"
    },
    md: {
        value: "8px"
    },
    lg: {
        value: "12px"
    },
    xl: {
        value: "16px"
    },
    "2xl": {
        value: "24px"
    },
    "3xl": {
        value: "40px"
    },
    "4xl": {
        value: "64px"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/borders.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "borders": (()=>borders)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const borders = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].borders({
    xs: {
        value: "0.5px solid"
    },
    sm: {
        value: "1px solid"
    },
    md: {
        value: "2px solid"
    },
    lg: {
        value: "4px solid"
    },
    xl: {
        value: "8px solid"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/colors.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "colors": (()=>colors)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const colors = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].colors({
    transparent: {
        value: "transparent"
    },
    current: {
        value: "currentColor"
    },
    black: {
        value: "#09090B"
    },
    white: {
        value: "#FFFFFF"
    },
    whiteAlpha: {
        50: {
            value: "rgba(255, 255, 255, 0.04)"
        },
        100: {
            value: "rgba(255, 255, 255, 0.06)"
        },
        200: {
            value: "rgba(255, 255, 255, 0.08)"
        },
        300: {
            value: "rgba(255, 255, 255, 0.16)"
        },
        400: {
            value: "rgba(255, 255, 255, 0.24)"
        },
        500: {
            value: "rgba(255, 255, 255, 0.36)"
        },
        600: {
            value: "rgba(255, 255, 255, 0.48)"
        },
        700: {
            value: "rgba(255, 255, 255, 0.64)"
        },
        800: {
            value: "rgba(255, 255, 255, 0.80)"
        },
        900: {
            value: "rgba(255, 255, 255, 0.92)"
        },
        950: {
            value: "rgba(255, 255, 255, 0.95)"
        }
    },
    blackAlpha: {
        50: {
            value: "rgba(0, 0, 0, 0.04)"
        },
        100: {
            value: "rgba(0, 0, 0, 0.06)"
        },
        200: {
            value: "rgba(0, 0, 0, 0.08)"
        },
        300: {
            value: "rgba(0, 0, 0, 0.16)"
        },
        400: {
            value: "rgba(0, 0, 0, 0.24)"
        },
        500: {
            value: "rgba(0, 0, 0, 0.36)"
        },
        600: {
            value: "rgba(0, 0, 0, 0.48)"
        },
        700: {
            value: "rgba(0, 0, 0, 0.64)"
        },
        800: {
            value: "rgba(0, 0, 0, 0.80)"
        },
        900: {
            value: "rgba(0, 0, 0, 0.92)"
        },
        950: {
            value: "rgba(0, 0, 0, 0.95)"
        }
    },
    gray: {
        50: {
            value: "#fafafa"
        },
        100: {
            value: "#f4f4f5"
        },
        200: {
            value: "#e4e4e7"
        },
        300: {
            value: "#d4d4d8"
        },
        400: {
            value: "#a1a1aa"
        },
        500: {
            value: "#71717a"
        },
        600: {
            value: "#52525b"
        },
        700: {
            value: "#3f3f46"
        },
        800: {
            value: "#27272a"
        },
        900: {
            value: "#18181b"
        },
        950: {
            value: "#111111"
        }
    },
    red: {
        50: {
            value: "#fef2f2"
        },
        100: {
            value: "#fee2e2"
        },
        200: {
            value: "#fecaca"
        },
        300: {
            value: "#fca5a5"
        },
        400: {
            value: "#f87171"
        },
        500: {
            value: "#ef4444"
        },
        600: {
            value: "#dc2626"
        },
        700: {
            value: "#991919"
        },
        800: {
            value: "#511111"
        },
        900: {
            value: "#300c0c"
        },
        950: {
            value: "#1f0808"
        }
    },
    orange: {
        50: {
            value: "#fff7ed"
        },
        100: {
            value: "#ffedd5"
        },
        200: {
            value: "#fed7aa"
        },
        300: {
            value: "#fdba74"
        },
        400: {
            value: "#fb923c"
        },
        500: {
            value: "#f97316"
        },
        600: {
            value: "#ea580c"
        },
        700: {
            value: "#92310a"
        },
        800: {
            value: "#6c2710"
        },
        900: {
            value: "#3b1106"
        },
        950: {
            value: "#220a04"
        }
    },
    yellow: {
        50: {
            value: "#fefce8"
        },
        100: {
            value: "#fef9c3"
        },
        200: {
            value: "#fef08a"
        },
        300: {
            value: "#fde047"
        },
        400: {
            value: "#facc15"
        },
        500: {
            value: "#eab308"
        },
        600: {
            value: "#ca8a04"
        },
        700: {
            value: "#845209"
        },
        800: {
            value: "#713f12"
        },
        900: {
            value: "#422006"
        },
        950: {
            value: "#281304"
        }
    },
    green: {
        50: {
            value: "#f0fdf4"
        },
        100: {
            value: "#dcfce7"
        },
        200: {
            value: "#bbf7d0"
        },
        300: {
            value: "#86efac"
        },
        400: {
            value: "#4ade80"
        },
        500: {
            value: "#22c55e"
        },
        600: {
            value: "#16a34a"
        },
        700: {
            value: "#116932"
        },
        800: {
            value: "#124a28"
        },
        900: {
            value: "#042713"
        },
        950: {
            value: "#03190c"
        }
    },
    teal: {
        50: {
            value: "#f0fdfa"
        },
        100: {
            value: "#ccfbf1"
        },
        200: {
            value: "#99f6e4"
        },
        300: {
            value: "#5eead4"
        },
        400: {
            value: "#2dd4bf"
        },
        500: {
            value: "#14b8a6"
        },
        600: {
            value: "#0d9488"
        },
        700: {
            value: "#0c5d56"
        },
        800: {
            value: "#114240"
        },
        900: {
            value: "#032726"
        },
        950: {
            value: "#021716"
        }
    },
    blue: {
        50: {
            value: "#eff6ff"
        },
        100: {
            value: "#dbeafe"
        },
        200: {
            value: "#bfdbfe"
        },
        300: {
            value: "#a3cfff"
        },
        400: {
            value: "#60a5fa"
        },
        500: {
            value: "#3b82f6"
        },
        600: {
            value: "#2563eb"
        },
        700: {
            value: "#173da6"
        },
        800: {
            value: "#1a3478"
        },
        900: {
            value: "#14204a"
        },
        950: {
            value: "#0c142e"
        }
    },
    cyan: {
        50: {
            value: "#ecfeff"
        },
        100: {
            value: "#cffafe"
        },
        200: {
            value: "#a5f3fc"
        },
        300: {
            value: "#67e8f9"
        },
        400: {
            value: "#22d3ee"
        },
        500: {
            value: "#06b6d4"
        },
        600: {
            value: "#0891b2"
        },
        700: {
            value: "#0c5c72"
        },
        800: {
            value: "#134152"
        },
        900: {
            value: "#072a38"
        },
        950: {
            value: "#051b24"
        }
    },
    purple: {
        50: {
            value: "#faf5ff"
        },
        100: {
            value: "#f3e8ff"
        },
        200: {
            value: "#e9d5ff"
        },
        300: {
            value: "#d8b4fe"
        },
        400: {
            value: "#c084fc"
        },
        500: {
            value: "#a855f7"
        },
        600: {
            value: "#9333ea"
        },
        700: {
            value: "#641ba3"
        },
        800: {
            value: "#4a1772"
        },
        900: {
            value: "#2f0553"
        },
        950: {
            value: "#1a032e"
        }
    },
    pink: {
        50: {
            value: "#fdf2f8"
        },
        100: {
            value: "#fce7f3"
        },
        200: {
            value: "#fbcfe8"
        },
        300: {
            value: "#f9a8d4"
        },
        400: {
            value: "#f472b6"
        },
        500: {
            value: "#ec4899"
        },
        600: {
            value: "#db2777"
        },
        700: {
            value: "#a41752"
        },
        800: {
            value: "#6d0e34"
        },
        900: {
            value: "#45061f"
        },
        950: {
            value: "#2c0514"
        }
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/cursor.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "cursor": (()=>cursor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const cursor = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].cursor({
    button: {
        value: "pointer"
    },
    checkbox: {
        value: "default"
    },
    disabled: {
        value: "not-allowed"
    },
    menuitem: {
        value: "default"
    },
    option: {
        value: "default"
    },
    radio: {
        value: "default"
    },
    slider: {
        value: "default"
    },
    switch: {
        value: "pointer"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/durations.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "durations": (()=>durations)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const durations = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].durations({
    fastest: {
        value: "50ms"
    },
    faster: {
        value: "100ms"
    },
    fast: {
        value: "150ms"
    },
    moderate: {
        value: "200ms"
    },
    slow: {
        value: "300ms"
    },
    slower: {
        value: "400ms"
    },
    slowest: {
        value: "500ms"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/easings.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "easings": (()=>easings)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const easings = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].easings({
    "ease-in": {
        value: "cubic-bezier(0.42, 0, 1, 1)"
    },
    "ease-out": {
        value: "cubic-bezier(0, 0, 0.58, 1)"
    },
    "ease-in-out": {
        value: "cubic-bezier(0.42, 0, 0.58, 1)"
    },
    "ease-in-smooth": {
        value: "cubic-bezier(0.32, 0.72, 0, 1)"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/font-sizes.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "fontSizes": (()=>fontSizes)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const fontSizes = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].fontSizes({
    "2xs": {
        value: "0.625rem"
    },
    xs: {
        value: "0.75rem"
    },
    sm: {
        value: "0.875rem"
    },
    md: {
        value: "1rem"
    },
    lg: {
        value: "1.125rem"
    },
    xl: {
        value: "1.25rem"
    },
    "2xl": {
        value: "1.5rem"
    },
    "3xl": {
        value: "1.875rem"
    },
    "4xl": {
        value: "2.25rem"
    },
    "5xl": {
        value: "3rem"
    },
    "6xl": {
        value: "3.75rem"
    },
    "7xl": {
        value: "4.5rem"
    },
    "8xl": {
        value: "6rem"
    },
    "9xl": {
        value: "8rem"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/font-weights.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "fontWeights": (()=>fontWeights)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const fontWeights = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].fontWeights({
    thin: {
        value: "100"
    },
    extralight: {
        value: "200"
    },
    light: {
        value: "300"
    },
    normal: {
        value: "400"
    },
    medium: {
        value: "500"
    },
    semibold: {
        value: "600"
    },
    bold: {
        value: "700"
    },
    extrabold: {
        value: "800"
    },
    black: {
        value: "900"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/fonts.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "fonts": (()=>fonts)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const fallback = `-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"`;
const fonts = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].fonts({
    heading: {
        value: `Inter, ${fallback}`
    },
    body: {
        value: `Inter, ${fallback}`
    },
    mono: {
        value: `SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace`
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/keyframes.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "keyframes": (()=>keyframes)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const keyframes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineKeyframes"])({
    spin: {
        "0%": {
            transform: "rotate(0deg)"
        },
        "100%": {
            transform: "rotate(360deg)"
        }
    },
    pulse: {
        "50%": {
            opacity: "0.5"
        }
    },
    ping: {
        "75%, 100%": {
            transform: "scale(2)",
            opacity: "0"
        }
    },
    bounce: {
        "0%, 100%": {
            transform: "translateY(-25%)",
            animationTimingFunction: "cubic-bezier(0.8,0,1,1)"
        },
        "50%": {
            transform: "none",
            animationTimingFunction: "cubic-bezier(0,0,0.2,1)"
        }
    },
    "bg-position": {
        from: {
            backgroundPosition: "var(--animate-from, 1rem) 0"
        },
        to: {
            backgroundPosition: "var(--animate-to, 0) 0"
        }
    },
    position: {
        from: {
            insetInlineStart: "var(--animate-from-x)",
            insetBlockStart: "var(--animate-from-y)"
        },
        to: {
            insetInlineStart: "var(--animate-to-x)",
            insetBlockStart: "var(--animate-to-y)"
        }
    },
    "circular-progress": {
        "0%": {
            strokeDasharray: "1, 400",
            strokeDashoffset: "0"
        },
        "50%": {
            strokeDasharray: "400, 400",
            strokeDashoffset: "-100%"
        },
        "100%": {
            strokeDasharray: "400, 400",
            strokeDashoffset: "-260%"
        }
    },
    // collapse
    "expand-height": {
        from: {
            height: "0"
        },
        to: {
            height: "var(--height)"
        }
    },
    "collapse-height": {
        from: {
            height: "var(--height)"
        },
        to: {
            height: "0"
        }
    },
    "expand-width": {
        from: {
            width: "0"
        },
        to: {
            width: "var(--width)"
        }
    },
    "collapse-width": {
        from: {
            height: "var(--width)"
        },
        to: {
            height: "0"
        }
    },
    // fade
    "fade-in": {
        from: {
            opacity: 0
        },
        to: {
            opacity: 1
        }
    },
    "fade-out": {
        from: {
            opacity: 1
        },
        to: {
            opacity: 0
        }
    },
    // slide from (full)
    "slide-from-left-full": {
        from: {
            translate: "-100% 0"
        },
        to: {
            translate: "0 0"
        }
    },
    "slide-from-right-full": {
        from: {
            translate: "100% 0"
        },
        to: {
            translate: "0 0"
        }
    },
    "slide-from-top-full": {
        from: {
            translate: "0 -100%"
        },
        to: {
            translate: "0 0"
        }
    },
    "slide-from-bottom-full": {
        from: {
            translate: "0 100%"
        },
        to: {
            translate: "0 0"
        }
    },
    // slide to (full)
    "slide-to-left-full": {
        from: {
            translate: "0 0"
        },
        to: {
            translate: "-100% 0"
        }
    },
    "slide-to-right-full": {
        from: {
            translate: "0 0"
        },
        to: {
            translate: "100% 0"
        }
    },
    "slide-to-top-full": {
        from: {
            translate: "0 0"
        },
        to: {
            translate: "0 -100%"
        }
    },
    "slide-to-bottom-full": {
        from: {
            translate: "0 0"
        },
        to: {
            translate: "0 100%"
        }
    },
    // slide from
    "slide-from-top": {
        "0%": {
            translate: "0 -0.5rem"
        },
        to: {
            translate: "0"
        }
    },
    "slide-from-bottom": {
        "0%": {
            translate: "0 0.5rem"
        },
        to: {
            translate: "0"
        }
    },
    "slide-from-left": {
        "0%": {
            translate: "-0.5rem 0"
        },
        to: {
            translate: "0"
        }
    },
    "slide-from-right": {
        "0%": {
            translate: "0.5rem 0"
        },
        to: {
            translate: "0"
        }
    },
    // slide to
    "slide-to-top": {
        "0%": {
            translate: "0"
        },
        to: {
            translate: "0 -0.5rem"
        }
    },
    "slide-to-bottom": {
        "0%": {
            translate: "0"
        },
        to: {
            translate: "0 0.5rem"
        }
    },
    "slide-to-left": {
        "0%": {
            translate: "0"
        },
        to: {
            translate: "-0.5rem 0"
        }
    },
    "slide-to-right": {
        "0%": {
            translate: "0"
        },
        to: {
            translate: "0.5rem 0"
        }
    },
    // scale
    "scale-in": {
        from: {
            scale: "0.95"
        },
        to: {
            scale: "1"
        }
    },
    "scale-out": {
        from: {
            scale: "1"
        },
        to: {
            scale: "0.95"
        }
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/letter-spacing.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "letterSpacings": (()=>letterSpacings)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const letterSpacings = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].letterSpacings({
    tighter: {
        value: "-0.05em"
    },
    tight: {
        value: "-0.025em"
    },
    wide: {
        value: "0.025em"
    },
    wider: {
        value: "0.05em"
    },
    widest: {
        value: "0.1em"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/line-heights.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "lineHeights": (()=>lineHeights)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const lineHeights = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].lineHeights({
    shorter: {
        value: 1.25
    },
    short: {
        value: 1.375
    },
    moderate: {
        value: 1.5
    },
    tall: {
        value: 1.625
    },
    taller: {
        value: 2
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/radius.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "radii": (()=>radii)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const radii = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].radii({
    none: {
        value: "0"
    },
    "2xs": {
        value: "0.0625rem"
    },
    xs: {
        value: "0.125rem"
    },
    sm: {
        value: "0.25rem"
    },
    md: {
        value: "0.375rem"
    },
    lg: {
        value: "0.5rem"
    },
    xl: {
        value: "0.75rem"
    },
    "2xl": {
        value: "1rem"
    },
    "3xl": {
        value: "1.5rem"
    },
    "4xl": {
        value: "2rem"
    },
    full: {
        value: "9999px"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/spacing.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "spacing": (()=>spacing)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const spacing = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].spacing({
    0.5: {
        value: "0.125rem"
    },
    1: {
        value: "0.25rem"
    },
    1.5: {
        value: "0.375rem"
    },
    2: {
        value: "0.5rem"
    },
    2.5: {
        value: "0.625rem"
    },
    3: {
        value: "0.75rem"
    },
    3.5: {
        value: "0.875rem"
    },
    4: {
        value: "1rem"
    },
    4.5: {
        value: "1.125rem"
    },
    5: {
        value: "1.25rem"
    },
    6: {
        value: "1.5rem"
    },
    7: {
        value: "1.75rem"
    },
    8: {
        value: "2rem"
    },
    9: {
        value: "2.25rem"
    },
    10: {
        value: "2.5rem"
    },
    11: {
        value: "2.75rem"
    },
    12: {
        value: "3rem"
    },
    14: {
        value: "3.5rem"
    },
    16: {
        value: "4rem"
    },
    20: {
        value: "5rem"
    },
    24: {
        value: "6rem"
    },
    28: {
        value: "7rem"
    },
    32: {
        value: "8rem"
    },
    36: {
        value: "9rem"
    },
    40: {
        value: "10rem"
    },
    44: {
        value: "11rem"
    },
    48: {
        value: "12rem"
    },
    52: {
        value: "13rem"
    },
    56: {
        value: "14rem"
    },
    60: {
        value: "15rem"
    },
    64: {
        value: "16rem"
    },
    72: {
        value: "18rem"
    },
    80: {
        value: "20rem"
    },
    96: {
        value: "24rem"
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/sizes.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "sizes": (()=>sizes)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$spacing$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/spacing.js [app-rsc] (ecmascript)");
"use strict";
;
;
const largeSizes = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].sizes({
    "3xs": {
        value: "14rem"
    },
    "2xs": {
        value: "16rem"
    },
    xs: {
        value: "20rem"
    },
    sm: {
        value: "24rem"
    },
    md: {
        value: "28rem"
    },
    lg: {
        value: "32rem"
    },
    xl: {
        value: "36rem"
    },
    "2xl": {
        value: "42rem"
    },
    "3xl": {
        value: "48rem"
    },
    "4xl": {
        value: "56rem"
    },
    "5xl": {
        value: "64rem"
    },
    "6xl": {
        value: "72rem"
    },
    "7xl": {
        value: "80rem"
    },
    "8xl": {
        value: "90rem"
    }
});
const namedSizes = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].sizes({
    max: {
        value: "max-content"
    },
    min: {
        value: "min-content"
    },
    fit: {
        value: "fit-content"
    },
    prose: {
        value: "60ch"
    },
    full: {
        value: "100%"
    },
    dvh: {
        value: "100dvh"
    },
    svh: {
        value: "100svh"
    },
    lvh: {
        value: "100lvh"
    },
    dvw: {
        value: "100dvw"
    },
    svw: {
        value: "100svw"
    },
    lvw: {
        value: "100lvw"
    },
    vw: {
        value: "100vw"
    },
    vh: {
        value: "100vh"
    }
});
const fractionalSizes = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].sizes({
    "1/2": {
        value: "50%"
    },
    "1/3": {
        value: "33.333333%"
    },
    "2/3": {
        value: "66.666667%"
    },
    "1/4": {
        value: "25%"
    },
    "3/4": {
        value: "75%"
    },
    "1/5": {
        value: "20%"
    },
    "2/5": {
        value: "40%"
    },
    "3/5": {
        value: "60%"
    },
    "4/5": {
        value: "80%"
    },
    "1/6": {
        value: "16.666667%"
    },
    "2/6": {
        value: "33.333333%"
    },
    "3/6": {
        value: "50%"
    },
    "4/6": {
        value: "66.666667%"
    },
    "5/6": {
        value: "83.333333%"
    },
    "1/12": {
        value: "8.333333%"
    },
    "2/12": {
        value: "16.666667%"
    },
    "3/12": {
        value: "25%"
    },
    "4/12": {
        value: "33.333333%"
    },
    "5/12": {
        value: "41.666667%"
    },
    "6/12": {
        value: "50%"
    },
    "7/12": {
        value: "58.333333%"
    },
    "8/12": {
        value: "66.666667%"
    },
    "9/12": {
        value: "75%"
    },
    "10/12": {
        value: "83.333333%"
    },
    "11/12": {
        value: "91.666667%"
    }
});
const sizes = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].sizes({
    ...largeSizes,
    ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$spacing$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["spacing"],
    ...fractionalSizes,
    ...namedSizes
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/z-indices.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "zIndices": (()=>zIndices)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
"use strict";
;
const zIndices = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineTokens"].zIndex({
    hide: {
        value: -1
    },
    base: {
        value: 0
    },
    docked: {
        value: 10
    },
    dropdown: {
        value: 1e3
    },
    sticky: {
        value: 1100
    },
    banner: {
        value: 1200
    },
    overlay: {
        value: 1300
    },
    modal: {
        value: 1400
    },
    popover: {
        value: 1500
    },
    skipNav: {
        value: 1600
    },
    toast: {
        value: 1700
    },
    tooltip: {
        value: 1800
    },
    max: {
        value: 2147483647
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/theme/index.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "defaultThemeConfig": (()=>defaultThemeConfig)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$breakpoints$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/breakpoints.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$global$2d$css$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/global-css.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$layer$2d$styles$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/layer-styles.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$motion$2d$styles$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/motion-styles.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/recipes.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$semantic$2d$tokens$2f$colors$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/semantic-tokens/colors.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$semantic$2d$tokens$2f$radii$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/semantic-tokens/radii.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$semantic$2d$tokens$2f$shadows$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/semantic-tokens/shadows.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$slot$2d$recipes$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/slot-recipes.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$text$2d$styles$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/text-styles.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$animations$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/animations.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$aspect$2d$ratios$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/aspect-ratios.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$blurs$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/blurs.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$borders$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/borders.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$colors$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/colors.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$cursor$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/cursor.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$durations$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/durations.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$easings$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/easings.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$font$2d$sizes$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/font-sizes.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$font$2d$weights$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/font-weights.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$fonts$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/fonts.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$keyframes$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/keyframes.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$letter$2d$spacing$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/letter-spacing.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$line$2d$heights$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/line-heights.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$radius$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/radius.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$sizes$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/sizes.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$spacing$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/spacing.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$z$2d$indices$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/tokens/z-indices.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const defaultThemeConfig = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defineConfig"])({
    preflight: true,
    cssVarsPrefix: "chakra",
    cssVarsRoot: ":where(html, .chakra-theme)",
    globalCss: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$global$2d$css$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["globalCss"],
    theme: {
        breakpoints: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$breakpoints$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["breakpoints"],
        keyframes: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$keyframes$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["keyframes"],
        tokens: {
            aspectRatios: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$aspect$2d$ratios$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["aspectRatios"],
            animations: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$animations$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["animations"],
            blurs: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$blurs$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["blurs"],
            borders: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$borders$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["borders"],
            colors: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$colors$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["colors"],
            durations: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$durations$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["durations"],
            easings: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$easings$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["easings"],
            fonts: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$fonts$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["fonts"],
            fontSizes: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$font$2d$sizes$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["fontSizes"],
            fontWeights: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$font$2d$weights$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["fontWeights"],
            letterSpacings: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$letter$2d$spacing$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["letterSpacings"],
            lineHeights: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$line$2d$heights$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["lineHeights"],
            radii: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$radius$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["radii"],
            spacing: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$spacing$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["spacing"],
            sizes: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$sizes$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["sizes"],
            zIndex: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$z$2d$indices$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["zIndices"],
            cursor: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$tokens$2f$cursor$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["cursor"]
        },
        semanticTokens: {
            colors: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$semantic$2d$tokens$2f$colors$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["semanticColors"],
            shadows: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$semantic$2d$tokens$2f$shadows$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["semanticShadows"],
            radii: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$semantic$2d$tokens$2f$radii$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["semanticRadii"]
        },
        recipes: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$recipes$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["recipes"],
        slotRecipes: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$slot$2d$recipes$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["slotRecipes"],
        textStyles: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$text$2d$styles$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["textStyles"],
        layerStyles: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$layer$2d$styles$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["layerStyles"],
        animationStyles: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$motion$2d$styles$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["animationStyles"]
    }
});
;
}}),
"[project]/node_modules/@chakra-ui/react/dist/esm/preset.js [app-rsc] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "defaultConfig": (()=>defaultConfig),
    "defaultSystem": (()=>defaultSystem),
    "system": (()=>defaultSystem)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$preset$2d$base$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/preset-base.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/config.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$system$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/styled-system/system.js [app-rsc] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@chakra-ui/react/dist/esm/theme/index.js [app-rsc] (ecmascript)");
"use strict";
;
;
;
;
const defaultConfig = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$config$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["mergeConfigs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$preset$2d$base$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defaultBaseConfig"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$theme$2f$index$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["defaultThemeConfig"]);
const defaultSystem = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$chakra$2d$ui$2f$react$2f$dist$2f$esm$2f$styled$2d$system$2f$system$2e$js__$5b$app$2d$rsc$5d$__$28$ecmascript$29$__["createSystem"])(defaultConfig);
;
}}),

};

//# sourceMappingURL=node_modules_%40chakra-ui_react_dist_esm_dae22807._.js.map