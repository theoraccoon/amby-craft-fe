{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/JimohMary/Desktop/coderaccoon/ambylon-craft/src/config/path.ts"],"sourcesContent":["export const paths = {\r\n    home: {\r\n      getHref: () => '/',\r\n    },\r\n  \r\n    auth: {\r\n      login: {\r\n        getHref: () => \"/auth/login\",\r\n      },\r\n    },\r\n    \r\n    app: {\r\n      root: {\r\n        getHref: () => '/app',\r\n      },\r\n      about: {\r\n        getHref: () => '/about',  // Remove '/app' to resolve correctly\r\n      },\r\n    },\r\n    \r\n    public: {\r\n      // Your public paths here\r\n    },\r\n  } as const;\r\n  "],"names":[],"mappings":";;;AAAO,MAAM,QAAQ;IACjB,MAAM;QACJ,SAAS,IAAM;IACjB;IAEA,MAAM;QACJ,OAAO;YACL,SAAS,IAAM;QACjB;IACF;IAEA,KAAK;QACH,MAAM;YACJ,SAAS,IAAM;QACjB;QACA,OAAO;YACL,SAAS,IAAM;QACjB;IACF;IAEA,QAAQ;IAER;AACF","debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/JimohMary/Desktop/coderaccoon/ambylon-craft/src/app/provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/provider.tsx <module evaluation>\",\n    \"Providers\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,sDACA","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/JimohMary/Desktop/coderaccoon/ambylon-craft/src/app/provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/provider.tsx\",\n    \"Providers\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,kCACA","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/JimohMary/Desktop/coderaccoon/ambylon-craft/src/app/layout.tsx"],"sourcesContent":["import \"../styles/global.css\"\nimport { paths } from \"@/config/path\";\nimport Head from 'next/head';\n\nimport { Providers } from './provider'\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>)\n {\n\n  console.log(paths,\"ldld\")\n  return (\n    <html lang=\"en\">\n      <head>\n        {/* Global Head Settings (can also include meta tags, links to fonts, etc.) */}\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Comfortaa:wght@300;400;700&display=swap\"\n          rel=\"stylesheet\"\n        />\n      </head>\n      <body\n        className=\"antialiased\"\n      >\n       <Providers>{children}</Providers>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAGA;;;;;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IAGA,QAAQ,GAAG,CAAC,qHAAA,CAAA,QAAK,EAAC;IAClB,qBACE,8OAAC;QAAK,MAAK;;0BACT,8OAAC;0BAEC,cAAA,8OAAC;oBACC,MAAK;oBACL,KAAI;;;;;;;;;;;0BAGR,8OAAC;gBACC,WAAU;0BAEX,cAAA,8OAAC,uHAAA,CAAA,YAAS;8BAAE;;;;;;;;;;;;;;;;;AAInB","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/JimohMary/Desktop/coderaccoon/ambylon-craft/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}